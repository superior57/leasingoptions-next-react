{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getApiResponse } from \"helpers/apiResponseHelper\";\nexport default class AccountAPI {\n  static async getLatestQuotes(accountId) {\n    const response = await fetch(this.baseUrl + `api/quotes/getlatest?accountId=${accountId}`);\n    return getApiResponse(response);\n  }\n\n  static async getAccount(accountId) {\n    const response = await fetch(this.baseUrl + `api/quotes/getlatest?accountId=${accountId}`);\n    return getApiResponse(response);\n  }\n\n  static async createPassword(accountId, password, email) {\n    let payload = {\n      AccountId: accountId,\n      Password: password,\n      Email: email\n    };\n    const response = await fetch(this.baseUrl + \"api/accounts/createaccount\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    return getApiResponse(response);\n  }\n\n  static async updateForgottenPassword(accountLink, password) {\n    let payload = {\n      AccountLink: accountLink,\n      Password: password\n    };\n    const response = await fetch(this.baseUrl + \"api/accounts/updateforgottenpassword\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    return getApiResponse(response);\n  }\n\n  static async sendforgottenPasswordEmail(email, accountNumber) {\n    let payload = {\n      Email: email,\n      AccountNumber: accountNumber\n    };\n    const response = await fetch(this.baseUrl + \"api/accounts/forgottenpasswordemail\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    return getApiResponse(response);\n  }\n\n  static async getDocuments(accountId) {\n    const response = await fetch(this.baseUrl + `api/documents/getlatest?accountId=${accountId}`);\n    return getApiResponse(response);\n  }\n\n  static async getMarketingPreferences(accountId) {\n    const response = await fetch(this.baseUrl + `api/marketingconsent/get?accountId=${accountId}`);\n    return getApiResponse(response);\n  }\n\n  static async getContracts(accountId) {\n    const response = await fetch(this.baseUrl + `api/contracts/getcontracts?accountId=${accountId}`);\n    return getApiResponse(response);\n  }\n\n  static async saveDocument(upload) {\n    const response = await fetch(this.baseUrl + \"api/documents/upload/base64\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(upload)\n    });\n    return await response.json();\n  }\n\n  static async saveMarketingPreferences(marketing) {\n    const response = await fetch(this.baseUrl + \"api/marketingconsent/save\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(marketing)\n    });\n    return await response.json();\n  }\n\n  static async setSmsNumber(data) {\n    const response = await fetch(this.baseUrl + \"/api/contracts/setrenewalalertsmsnumber\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  }\n\n  static async setRenewalAlert(data) {\n    const response = await fetch(this.baseUrl + \"/api/contracts/setrenewalalert\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  }\n\n}\n\n_defineProperty(AccountAPI, \"baseUrl\", process.env.NEXT_PUBLIC_MICROSERVICE_ACCOUNT_URL);","map":null,"metadata":{},"sourceType":"module"}