{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\current_project\\\\PPH\\\\tfs\\\\Website\\\\Website\\\\components\\\\layout\\\\to-top\\\\to-top.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./to-top.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { listenToScroll } from \"../../../helpers/helpers\";\n\nvar ToTop = function ToTop() {\n  _s();\n\n  var _useState = useState(false),\n      scrolled = _useState[0],\n      setScrolled = _useState[1];\n\n  function myFunc() {\n    if (listenToScroll(0.15)) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  }\n\n  ;\n  useEffect(function () {\n    window.addEventListener('scroll', myFunc);\n    return function () {\n      window.removeEventListener('scroll', myFunc);\n    };\n  }, []);\n\n  var handleToTop = function handleToTop() {\n    window.scrollTo(0, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"\".concat(style['to-top'], \" button button-text justify-content-center align-items-center \").concat(scrolled ? style['is-active'] : ''),\n    onClick: handleToTop,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      width: \"14\",\n      height: \"50\",\n      icon: faChevronUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 171\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ToTop, \"tQtW9FyKD+Ut/6k+f0BCbABprL4=\");\n\n_c = ToTop;\nexport default ToTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToTop\");","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/Website/components/layout/to-top/to-top.tsx"],"names":["React","useState","useEffect","style","FontAwesomeIcon","faChevronUp","listenToScroll","ToTop","scrolled","setScrolled","myFunc","window","addEventListener","removeEventListener","handleToTop","scrollTo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,IAAMC,KAAc,GAAG,SAAjBA,KAAiB,GAAM;AAAA;;AAAA,kBAEON,QAAQ,CAAC,KAAD,CAFf;AAAA,MAElBO,QAFkB;AAAA,MAERC,WAFQ;;AAIzB,WAASC,MAAT,GAAkB;AACd,QAAGJ,cAAc,CAAC,IAAD,CAAjB,EAAyB;AACrBG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFD,MAEO;AACHA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ;;AAAA;AAEDP,EAAAA,SAAS,CAAC,YAAM;AACbS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,MAAlC;AACC,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,MAArC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBH,IAAAA,MAAM,CAACI,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,GAFD;;AAIA,sBACI;AAAQ,IAAA,SAAS,YAAKZ,KAAK,CAAC,QAAD,CAAV,2EAAqFK,QAAQ,GAAGL,KAAK,CAAC,WAAD,CAAR,GAAwB,EAArH,CAAjB;AAA4I,IAAA,OAAO,EAAEW,WAArJ;AAAA,2BAAkK,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,IAAvB;AAA4B,MAAA,MAAM,EAAC,IAAnC;AAAwC,MAAA,IAAI,EAAET;AAA9C;AAAA;AAAA;AAAA;AAAA;AAAlK;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CA1BD;;GAAME,K;;KAAAA,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport style from \"./to-top.module.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { listenToScroll } from \"../../../helpers/helpers\";\r\n\r\nconst ToTop:React.FC = () => {\r\n    \r\n    const [scrolled, setScrolled] = useState(false);\r\n\r\n    function myFunc() {\r\n        if(listenToScroll(0.15)) {\r\n            setScrolled(true);\r\n        } else {\r\n            setScrolled(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n       window.addEventListener('scroll', myFunc) \r\n        return () => {\r\n            window.removeEventListener('scroll', myFunc)\r\n        }\r\n    }, []);\r\n\r\n    const handleToTop = () => {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    return (\r\n        <button className={`${style['to-top']} button button-text justify-content-center align-items-center ${scrolled ? style['is-active'] : ''}`} onClick={handleToTop}><FontAwesomeIcon width=\"14\" height=\"50\" icon={faChevronUp} /></button>\r\n    )\r\n}\r\n\r\nexport default ToTop;"]},"metadata":{},"sourceType":"module"}