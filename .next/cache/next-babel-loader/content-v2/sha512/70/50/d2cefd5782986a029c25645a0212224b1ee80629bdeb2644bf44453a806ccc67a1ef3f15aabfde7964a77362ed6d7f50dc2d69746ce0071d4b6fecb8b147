{"ast":null,"code":"import { getApiResponse } from \"helpers/apiResponseHelper\";\n\nconst queryString = require('query-string');\n\nexport const SendPricingFeedbackAPI = async pricingFeedback => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/internaltools/sendpricefeedback?` + queryString.stringify(pricingFeedback));\n  return getApiResponse(response);\n};\nexport const HasSeenMarketingFormAPI = async emailAddress => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/consentforms/hasseenmarketingform?email=${emailAddress}`);\n  return getApiResponse(response);\n};\nexport const CheckInformationNoticAcceptanceAPI = async (emailAddress, telephone) => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/bmaccounts/checkinformationnoticacceptance?email=${emailAddress}&telephone=${telephone}`);\n  return getApiResponse(response);\n};\nexport const VerifySalesPersonAPI = async (salesPersonId, emailAddress, telephone) => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/bmaccounts/verifysalesperson?salespersonid=${salesPersonId}&email=${emailAddress}&telephone=${telephone}`);\n  return getApiResponse(response);\n};\nexport const SetToSeenMarketingFormAPI = async emailAddress => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/consentforms/settoseenmarketingform?email=${emailAddress}`);\n  return await response.json();\n};\nexport const GetValuationAPI = async payload => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/valuecars/getvaluation?vrm=${payload.vrm}&mileage=${payload.mileage}&fullName=${payload.fullName}&telephone=${payload.telephone}&email=${payload.email}&postCode=${payload.postCode}`);\n  return await response.json();\n};\nexport const GetSalesPeopleAPI = async () => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/salespersons/list`);\n  return await response.json();\n};\nexport const NewsletterSignupAPI = async (emailAddress, type) => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/communications/subscribe`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    } // body: {\n    //     email: emailAddress,\n    //     type: type.toString(),\n    // }\n    // commented out as breaks the build\n\n  });\n  return await response.json();\n};\nexport const GetTrustPilotRatingAPI = async () => {\n  const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/systemvalues/trustpilotrating`);\n  return await response.json();\n};","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/Website/API/SystemAPI.tsx"],"names":["getApiResponse","queryString","require","SendPricingFeedbackAPI","pricingFeedback","response","fetch","process","env","NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL","stringify","HasSeenMarketingFormAPI","emailAddress","CheckInformationNoticAcceptanceAPI","telephone","VerifySalesPersonAPI","salesPersonId","SetToSeenMarketingFormAPI","json","GetValuationAPI","payload","vrm","mileage","fullName","email","postCode","GetSalesPeopleAPI","NewsletterSignupAPI","type","method","headers","GetTrustPilotRatingAPI"],"mappings":"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","sourcesContent":["import { GetValuationRequest } from \"types/value-your-car/GetValuationRequest\";\r\nimport { PricingErrorFeedback } from \"types/internal/PricingErrorFeedback\";\r\nimport { getApiResponse } from \"helpers/apiResponseHelper\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nexport const SendPricingFeedbackAPI = async (pricingFeedback: PricingErrorFeedback) =>{\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/internaltools/sendpricefeedback?` + queryString.stringify(pricingFeedback));\r\n    return getApiResponse(response);\r\n}\r\n\r\nexport const HasSeenMarketingFormAPI = async(emailAddress: string) =>{\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/consentforms/hasseenmarketingform?email=${emailAddress}`);\r\n    return getApiResponse(response);\r\n}\r\n\r\nexport const CheckInformationNoticAcceptanceAPI = async(emailAddress: string, telephone: string)=> {\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/bmaccounts/checkinformationnoticacceptance?email=${emailAddress}&telephone=${telephone}`);\r\n    return getApiResponse(response);\r\n}\r\n\r\nexport const VerifySalesPersonAPI = async(salesPersonId: string, emailAddress: string, telephone: string)=> {\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/bmaccounts/verifysalesperson?salespersonid=${salesPersonId}&email=${emailAddress}&telephone=${telephone}`);\r\n    return getApiResponse(response);\r\n}\r\n\r\nexport const SetToSeenMarketingFormAPI = async(emailAddress: string) =>{\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/consentforms/settoseenmarketingform?email=${emailAddress}`);\r\n    return await response.json();\r\n}\r\n\r\nexport const GetValuationAPI = async(payload: GetValuationRequest) =>{\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/valuecars/getvaluation?vrm=${payload.vrm}&mileage=${payload.mileage}&fullName=${payload.fullName}&telephone=${payload.telephone}&email=${payload.email}&postCode=${payload.postCode}`);\r\n    return await response.json();\r\n}\r\n\r\nexport const GetSalesPeopleAPI = async() =>{\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/salespersons/list`);\r\n    return await response.json();\r\n}\r\n\r\nexport const NewsletterSignupAPI = async(emailAddress: string, type: number) => {\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/communications/subscribe`, {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        // body: {\r\n        //     email: emailAddress,\r\n        //     type: type.toString(),\r\n        // }\r\n        // commented out as breaks the build\r\n    });\r\n    return await response.json();\r\n}\r\n\r\nexport const GetTrustPilotRatingAPI = async() => {\r\n    const response = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL + `api/systemvalues/trustpilotrating`);\r\n    return await response.json();\r\n}"]},"metadata":{},"sourceType":"module"}