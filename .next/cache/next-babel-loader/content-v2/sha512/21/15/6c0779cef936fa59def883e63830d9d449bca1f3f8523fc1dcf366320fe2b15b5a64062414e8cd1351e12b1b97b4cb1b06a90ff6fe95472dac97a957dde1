{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport style from './navigation.module.scss';\nimport { VehicleTypes } from 'enums/VehicleTypes';\nimport { GetDealTypeUrl } from 'helpers/urlHelper';\nimport { connect } from 'react-redux';\nimport { GetModels } from 'business-logic/vehicleService';\n\nfunction mapStateToProps(state) {\n  return {\n    carManufacturerList: state.carManufacturerList,\n    vanManufacturerList: state.vanManufacturerList\n  };\n}\n\nconst NavModel = (_ref) => {\n  let {\n    id,\n    VehicleType,\n    dealSelector\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"id\", \"VehicleType\", \"dealSelector\"]);\n\n  const {\n    0: manfacturer,\n    1: setManufacturer\n  } = useState();\n  const {\n    0: modelList,\n    1: setModelList\n  } = useState([]);\n  let manufacturerList = VehicleType === VehicleTypes.Commercial ? otherProps.vanManufacturerList : otherProps.carManufacturerList;\n\n  const handleModelRequest = evt => {\n    const manfacturerUrl = evt.currentTarget.value;\n    setManufacturer(manfacturerUrl);\n\n    if (manfacturerUrl) {\n      GetModels(VehicleType, manfacturerUrl).then(data => {\n        setModelList(data.data);\n      });\n    }\n  };\n\n  const handleModelClick = model => {\n    if (manfacturer) {\n      GetModels(VehicleType, manfacturer).then(data => {\n        setModelList(data.data);\n      });\n    }\n\n    Router.push(GetDealTypeUrl(dealSelector, '/[make]/[shortModel]'), GetDealTypeUrl(dealSelector, '/' + manfacturer + '/' + model));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    id: id,\n    className: style['panel-content'],\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxs(\"select\", {\n        className: \"form-control\",\n        onChange: evt => handleModelRequest(evt),\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"\",\n          children: \"Select Make\"\n        }), manufacturerList.map(manufacturer => /*#__PURE__*/_jsx(\"option\", {\n          value: manufacturer.id,\n          children: manufacturer.text\n        }, manufacturer.id))]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxs(\"select\", {\n        className: \"form-control\",\n        onChange: evt => handleModelClick(evt.currentTarget.value),\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"\",\n          children: \"Select Model\"\n        }), modelList.map(model => /*#__PURE__*/_jsx(\"option\", {\n          value: model.id,\n          children: model.text\n        }, model.id))]\n      })\n    })]\n  });\n};\n\nexport default connect(mapStateToProps)(NavModel);","map":null,"metadata":{},"sourceType":"module"}