{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useFormContext } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nimport GarageVehicleSelector from '../garage-item/garage-vehicle-selector';\nimport GarageVehicle from '../garage-item/garage-vehicle';\nimport _ from 'underscore';\nimport { LeasingDealTypes } from 'enums/LeasingDealTypes';\nimport { GarageViewModes } from 'enums/GarageViewModes';\nimport { isNullOrWhiteSpace } from 'helpers/stringHelper';\nimport { formatMoney, unformat } from 'helpers/currencyHelper';\nimport { getQueryParams, getUrl } from 'helpers/urlsHelper';\nimport { GetVehicleUrl } from 'helpers/urlHelper';\nimport { CustomOptionsHelper } from 'helpers/customOptionsHelper';\nimport { GarageStorageHelper } from '../_libs/helpers/garageStorageHelper';\nimport { GarageService } from 'business-logic/garageService';\nimport { GetVehicleGarage, GetVehiclePricesDetails } from 'business-logic/vehicleService';\n\n//TODO: consider integration with redux, keeping customOptions state on vehicle component level\nconst GarageManager = ({\n  settings\n}) => {\n  const router = useRouter();\n  const {\n    register,\n    errors,\n    setValue\n  } = useFormContext();\n  const pricesDefaultState = {\n    fullMonthlyPrice: \"Please Call\",\n    initialRental: \"POA\",\n    salesCode: \"POA\",\n    monthlyMaintenancePrice: \"POA\",\n    processingFee: \"POA\",\n    extraOptions: [],\n    extraOptionsTotal: formatMoney(0),\n    p11d: \"N/A\",\n    bikTax: \"-\"\n  };\n  const {\n    0: viewMode,\n    1: setViewMode\n  } = useState(GarageViewModes.Price);\n  const {\n    0: isCloneAllowed,\n    1: setIsCloneAllowed\n  } = useState(true);\n  const {\n    0: items,\n    1: setItems\n  } = useState([{\n    idx: 0,\n    id: \"\",\n    vehicle: null,\n    loadDataTimerId: null\n  }, {\n    idx: 1,\n    id: \"\",\n    vehicle: null,\n    loadDataTimerId: null\n  }, {\n    idx: 2,\n    id: \"\",\n    vehicle: null,\n    loadDataTimerId: null\n  }, {\n    idx: 3,\n    id: \"\",\n    vehicle: null,\n    loadDataTimerId: null\n  }]);\n  useEffect(() => {\n    const parts = router.asPath.split('?');\n    const garageId = parts[1] ? getQueryParams(parts[1].split('&'))[\"load\"] : null;\n\n    if (garageId) {\n      GarageStorageHelper.clear();\n      GarageService.GetGarage(garageId).then(result => {\n        if (result.isSucceed && result.data) {\n          const data = result.data;\n\n          for (let i = 0; i < data.length; i++) {\n            const item = data[i];\n\n            if (item) {\n              GarageStorageHelper.addItem(item.index, item.customOptions);\n            }\n          }\n        }\n\n        initGarageVehicles();\n      });\n    } else {\n      initGarageVehicles();\n    }\n  }, []);\n  useEffect(() => {\n    if (settings.onStateChanged) {\n      settings.onStateChanged(items);\n    }\n  }, [items]);\n\n  const initGarageVehicles = () => {\n    const storageItems = GarageStorageHelper.getItems(false);\n\n    if (storageItems) {\n      for (let idx = 0; idx < storageItems.length; idx++) {\n        const storageItem = storageItems[idx];\n        showGarageItemVehicle(storageItem);\n      }\n    }\n  };\n\n  const getPrices = (leasingDealType, originalPrices) => {\n    let prices = _.clone(pricesDefaultState);\n\n    prices.processingFee = formatMoney(parseFloat(leasingDealType === LeasingDealTypes.Personal ? process.env.NEXT_PUBLIC_PCH_PROC_FEE : process.env.NEXT_PUBLIC_CH_PROC_FEE));\n\n    if (originalPrices) {\n      const hasAllowedPrice = originalPrices.baseMonthlyPrice && originalPrices.baseMonthlyPrice > 0;\n      prices.extraOptions = originalPrices.extraOptions || [];\n      prices.extraOptionsTotal = formatMoney(originalPrices.extraOptionsTotal);\n      prices.p11d = originalPrices.p11D ? formatMoney(originalPrices.p11D) : \"N/A\";\n      prices.bikTax = originalPrices.bik20Tax && originalPrices.bik40Tax ? formatMoney(originalPrices.bik20Tax) + \"/\" + formatMoney(originalPrices.bik40Tax) + \" p/m\" : \"-\";\n\n      if (hasAllowedPrice) {\n        prices.fullMonthlyPrice = originalPrices.fullMonthlyPrice ? formatMoney(originalPrices.fullMonthlyPrice) : \"Please Call\";\n        prices.initialRental = formatMoney(originalPrices.initialRental);\n        prices.salesCode = formatMoney(originalPrices.salesCode);\n        prices.monthlyPrice = formatMoney(originalPrices.baseMonthlyPrice);\n        prices.monthlyMaintenancePrice = formatMoney(originalPrices.monthlyMaintenancePrice);\n      }\n    }\n\n    return prices;\n  };\n\n  const setGarageItemVehicle = (idx, itemId, vehicleData) => {\n    const garageItem = items[idx];\n\n    if (garageItem) {\n      setItems(prevState => {\n        const newItems = prevState.map((item, itemIdx) => {\n          if (item && itemIdx === idx && item.idx === idx) {\n            const prices = getPrices(vehicleData.customOptions.leasingDealType, vehicleData.prices);\n\n            const updatedItem = _objectSpread(_objectSpread({}, item), {}, {\n              id: itemId,\n              vehicle: {\n                baseDetails: vehicleData.baseDetails,\n                customOptions: vehicleData.customOptions,\n                prices: prices,\n                vehicleOptions: {\n                  specifications: vehicleData.specifications.map(category => ({\n                    name: category.name,\n                    options: category.options.map(option => ({\n                      name: option\n                    }))\n                  })),\n                  technicals: vehicleData.technicals,\n                  extras: vehicleData.extras\n                },\n                availableMileages: vehicleData.availableMileages\n              }\n            });\n\n            return updatedItem;\n          }\n\n          return item;\n        });\n        return newItems;\n      });\n      setIsCloneAllowed(!GarageStorageHelper.isFull());\n    }\n  };\n\n  const showGarageItemVehicle = initData => {\n    if (initData) {\n      const vehicle = initData.vehicle;\n      const vehicleRef = vehicle.vehicleRef;\n      const leasingDealType = vehicle.leasingDealType;\n      const customOptions = {\n        term: vehicle.term,\n        mileage: vehicle.mileage,\n        maintenance: vehicle.maintenance,\n        initialRentalMonths: vehicle.initialRentalMonths,\n        options: vehicle.options,\n        salesCode: vehicle.salesCode,\n        ageCategory: vehicle.ageCategory\n      };\n      GetVehicleGarage(vehicleRef, leasingDealType, customOptions).then(result => {\n        if (result.isSucceed && result.data) {\n          let data = result.data;\n          GarageStorageHelper.updateItem(initData.id, data.customOptions, false); //TODO: should we fix options mutations? Might heppen for on internal page for public user (salescode value). Other cases?\n\n          setGarageItemVehicle(initData.index, initData.id, data);\n        } else {\n          GarageStorageHelper.removeItem(initData.id);\n        }\n      });\n    }\n  };\n\n  const onAdd = (idx, item) => {\n    if (item) {\n      const vehicleRef = item.vehicleRef;\n      const leasingDealType = item.leasingDealType;\n      GetVehicleGarage(vehicleRef, leasingDealType, null).then(result => {\n        if (result.isSucceed && result.data) {\n          let data = result.data;\n          const storageItem = GarageStorageHelper.addItem(idx, data.customOptions);\n\n          if (storageItem) {\n            setGarageItemVehicle(storageItem.index, storageItem.id, data);\n          }\n        }\n      });\n    }\n  };\n\n  const onClone = idx => {\n    const garageItem = items[idx];\n\n    if (garageItem && !isNullOrWhiteSpace(garageItem.id) && isCloneAllowed) {\n      const itemId = garageItem.id;\n      const storageItem = GarageStorageHelper.cloneItem(itemId);\n      showGarageItemVehicle(storageItem);\n    }\n  };\n\n  const onRefresh = (idx, id, customOptions) => {\n    if (customOptions && !isNullOrWhiteSpace(id)) {\n      const storageItem = GarageStorageHelper.updateItem(id, customOptions, false);\n\n      if (storageItem && storageItem.index === idx) {\n        const sourceGarageItem = items[idx];\n\n        if (sourceGarageItem) {\n          if (sourceGarageItem.loadDataTimerId) {\n            clearTimeout(sourceGarageItem.loadDataTimerId);\n          }\n\n          sourceGarageItem.loadDataTimerId = setTimeout(function () {\n            GetVehiclePricesDetails({\n              pricingType: undefined,\n              postcode: undefined,\n              vehicleRef: storageItem.vehicle.vehicleRef,\n              leasingDealType: storageItem.vehicle.leasingDealType,\n              term: storageItem.vehicle.term,\n              mileage: storageItem.vehicle.mileage,\n              maintenance: storageItem.vehicle.maintenance,\n              initialRentalMonths: storageItem.vehicle.initialRentalMonths,\n              options: storageItem.vehicle.options,\n              salesCode: storageItem.vehicle.salesCode,\n              ageCategory: storageItem.vehicle.ageCategory\n            }).then(result => {\n              let data = null;\n\n              if (result.isSucceed && result.data) {\n                data = result.data;\n              }\n\n              setItems(prevState => {\n                const newItems = prevState.map((item, itemIdx) => {\n                  if (item && itemIdx === idx && item.idx === idx && item.id === id) {\n                    const prices = getPrices(customOptions.leasingDealType, data);\n\n                    const updatedItem = _objectSpread(_objectSpread({}, item), {}, {\n                      vehicle: _objectSpread(_objectSpread({}, item.vehicle), {}, {\n                        customOptions,\n                        prices\n                      })\n                    });\n\n                    return updatedItem;\n                  }\n\n                  return item;\n                });\n                return newItems;\n              });\n            });\n          }, 200);\n        }\n      }\n    }\n  };\n\n  const onRemove = idx => {\n    const garageItem = items[idx];\n\n    if (garageItem && !isNullOrWhiteSpace(garageItem.id)) {\n      const itemId = garageItem.id;\n\n      if (GarageStorageHelper.removeItem(itemId)) {\n        setItems(prevState => {\n          const newItems = prevState.map((item, itemIdx) => {\n            if (item && itemIdx === idx && item.idx === idx && item.id === itemId) {\n              const updatedItem = _objectSpread(_objectSpread({}, item), {}, {\n                id: \"\",\n                vehicle: null\n              });\n\n              return updatedItem;\n            }\n\n            return item;\n          });\n          return newItems;\n        });\n        setIsCloneAllowed(!GarageStorageHelper.isFull());\n      }\n    }\n  };\n\n  const onEnquire = idx => {\n    //TODO: add check if enquiry is allowed? Hide enquiry button if not\n    const garageItem = items[idx];\n\n    if (garageItem && garageItem.vehicle) {\n      const vehicleData = garageItem.vehicle.baseDetails;\n      const customOptions = garageItem.vehicle.customOptions;\n      CustomOptionsHelper.storeVehicleCustomOptions(customOptions);\n      const url = getUrl(GetVehicleUrl(false, null, customOptions.leasingDealType, vehicleData.manufacturer, vehicleData.shortModel, vehicleData.model, vehicleData.derivative, customOptions.vehicleRef), [\"showordermodal=1\"]);\n      router.push(url);\n    }\n  };\n\n  const handlePriceInput = evt => {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    setValue(name, value ? formatMoney(unformat(value)) : null);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"w-100 bg-blue text-white text-center h2 mb-0 py-3\",\n          children: \"Compare by\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"w-100 bg-light-grey p-3 d-md-flex flex-md-nowrap\",\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            className: `w-100 d-block d-md-inline-flex justify-content-center btn btn-fluid h3 py-3 py-md-2 mb-0 text-dark-grey ${viewMode === GarageViewModes.Price ? \"is-active\" : \"\"}`,\n            onClick: () => setViewMode(GarageViewModes.Price),\n            children: \"Price\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: `w-100 d-block d-md-inline-flex justify-content-center btn btn-fluid h3 py-3 py-md-2 mb-0 text-dark-grey ${viewMode === GarageViewModes.Specification ? \"is-active\" : \"\"}`,\n            onClick: () => setViewMode(GarageViewModes.Specification),\n            children: \"Specification\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: `w-100 d-block d-md-inline-flex justify-content-center btn btn-fluid h3 py-3 py-md-2 mb-0 text-dark-grey ${viewMode === GarageViewModes.Technical ? \"is-active\" : \"\"}`,\n            onClick: () => setViewMode(GarageViewModes.Technical),\n            children: \"Technical\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: `w-100 d-block d-md-inline-flex justify-content-center btn btn-fluid h3 py-3 py-md-2 mb-0 text-dark-grey ${viewMode === GarageViewModes.Extras ? \"is-active\" : \"\"}`,\n            onClick: () => setViewMode(GarageViewModes.Extras),\n            children: \"Add Optional Exras\"\n          })]\n        })]\n      })\n    }), settings.isInternal ? /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"row my-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24\",\n          children: /*#__PURE__*/_jsx(\"strong\", {\n            children: \"Not Maintained Processing Fee\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-sm-8 form-group\",\n          children: [\"Personal\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fees.notMaintained.personal\",\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-sm-8 form-group\",\n          children: [\"Business\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fees.notMaintained.business\",\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-sm-8 form-group\",\n          children: [\"Van\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fees.notMaintained.van\",\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row my-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24\",\n          children: /*#__PURE__*/_jsx(\"strong\", {\n            children: \"Maintained Processing Fee\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-sm-8 form-group\",\n          children: [\"Personal\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fees.maintained.personal\",\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-sm-8 form-group\",\n          children: [\"Business\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fees.maintained.business\",\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-sm-8 form-group\",\n          children: [\"Van\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fees.maintained.van\",\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        })]\n      })]\n    }) : null, /*#__PURE__*/_jsx(\"div\", {\n      className: \"row my-3 my-md-5\",\n      children: items.map(item => /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-24 col-md-12 col-lg-6 mb-3 mb-lg-0\",\n        children: item.vehicle ? /*#__PURE__*/_jsx(GarageVehicle, {\n          idx: item.idx,\n          id: item.id,\n          baseDetails: item.vehicle.baseDetails,\n          customOptions: item.vehicle.customOptions,\n          prices: item.vehicle.prices,\n          vehicleOptions: item.vehicle.vehicleOptions,\n          settings: {\n            isInternal: settings.isInternal,\n            useBlackFridayTheme: process.env.NEXT_PUBLIC_BLACK_FRIDAY_THEME === 'true',\n            viewMode: viewMode,\n            isCloneAllowed: isCloneAllowed,\n            availableMileages: item.vehicle.availableMileages,\n            onRefresh: onRefresh,\n            onClone: onClone,\n            onRemove: onRemove,\n            onEnquire: onEnquire\n          }\n        }) : /*#__PURE__*/_jsx(GarageVehicleSelector, {\n          idx: item.idx,\n          settings: {\n            onSelect: onAdd\n          }\n        })\n      }, item.idx))\n    })]\n  });\n};\n\nexport default GarageManager;","map":null,"metadata":{},"sourceType":"module"}