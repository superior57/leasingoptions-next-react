{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\n\nconst Gallery360 = ({\n  alt,\n  dir\n}) => {\n  const pixelsPerDegree = 2;\n  const {\n    0: dragging,\n    1: setDragging\n  } = useState(false);\n  const {\n    0: imageIndex,\n    1: setImageIndex\n  } = useState(1);\n  const {\n    0: dragStart,\n    1: setDragStart\n  } = useState(0);\n  const {\n    0: dragStartIndex,\n    1: setDragStartIndex\n  } = useState(1);\n  const externalWrapper = React.useRef(null);\n  useEffect(() => {\n    if (externalWrapper.current) {\n      externalWrapper.current.addEventListener(\"mousemove\", handleMouseMove, false);\n      externalWrapper.current.addEventListener(\"mouseup\", handleMouseUp, false);\n    }\n  }, [dragging]);\n\n  const handleMouseDown = e => {\n    e.persist();\n    setDragging(true);\n    setDragStart(e.screenX);\n    setDragStartIndex(imageIndex);\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const updateImageIndex = currentPosition => {\n    let numImages = 36;\n    const pixelsPerImage = pixelsPerDegree * (360 / numImages);\n    let dx = (currentPosition - dragStart) / pixelsPerImage;\n    let index = Math.floor(dx) % numImages;\n\n    if (index < 1) {\n      index = numImages + index;\n    }\n\n    index = (index + dragStartIndex) % numImages;\n\n    if (index === 0) {\n      setImageIndex(1);\n    } else if (index !== imageIndex) {\n      setImageIndex(index);\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (dragging) {\n      updateImageIndex(e.screenX);\n    }\n  };\n\n  const preventDragHandler = e => {\n    e.preventDefault();\n  };\n\n  if (dir) {\n    const renderImage = () => /*#__PURE__*/_jsx(\"img\", {\n      src: `${process.env.NEXT_PUBLIC_CDN}/${dir + imageIndex}.png`,\n      className: \"img-fluid\",\n      alt: `${alt} angle ${imageIndex}`\n    });\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"external-360\",\n      ref: externalWrapper,\n      onMouseDown: handleMouseDown,\n      onDragStart: preventDragHandler,\n      children: renderImage()\n    });\n  }\n\n  return null;\n};\n\nexport default Gallery360;","map":null,"metadata":{},"sourceType":"module"}