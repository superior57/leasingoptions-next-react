{"ast":null,"code":"import _defineProperty from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useForm, FormContext } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nimport Modal from 'react-bootstrap/Modal';\nimport MarketingConsent from 'components/marketing-consent';\nimport PrivacyPolicyConsent from 'components/privacy-policy-consent';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/pro-regular-svg-icons\";\nimport style from './price-promise.module.scss';\nimport { setPrivacyAccepted } from 'helpers/cookiesHelper';\nimport { PhoneNumberIsValid, EmailAddressIsValid } from 'helpers/validation';\nimport { GetThankYouPageUrl } from 'helpers/urlHelper';\nimport { EnquiryService } from \"business-logic/enquiryService\";\nimport { MarketingCommunicationsService } from 'business-logic/marketingCommunicationsService';\nimport { FilesAPI } from 'API/FilesAPI';\n\nvar ModalPricePromise = function ModalPricePromise(_ref) {\n  var _errors$telephone, _errors$email;\n\n  var isInternal = _ref.isInternal,\n      onRequestClose = _ref.onRequestClose,\n      otherProps = _objectWithoutProperties(_ref, [\"isInternal\", \"onRequestClose\"]);\n\n  var router = useRouter();\n  var methods = useForm();\n  var register = methods.register,\n      handleSubmit = methods.handleSubmit,\n      errors = methods.errors;\n  var bucket = \"leasingoptions\";\n  var filesKeyPrefix = \"website/temp/price-promise\";\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      marketingConsentIsVerifying = _useState2[0],\n      setMarketingConsentIsVerifying = _useState2[1];\n\n  var _useState3 = useState(null),\n      emailAddressConsent = _useState3[0],\n      setEmailAddressConsent = _useState3[1];\n\n  var _useState4 = useState(null),\n      selectedFilename = _useState4[0],\n      setSelectedFilename = _useState4[1];\n\n  var _useState5 = useState(null),\n      fileId = _useState5[0],\n      setFileId = _useState5[1]; //Fires only when input loses focus and triggers marketing-consent to reinitialize\n\n\n  var onEmailFocusOut = function onEmailFocusOut(event) {\n    if (!isInternal) {\n      if (event.target.value && EmailAddressIsValid(event.target.value)) {\n        setEmailAddressConsent(event.target.value);\n      } else {\n        setEmailAddressConsent(null);\n      }\n    }\n  };\n\n  var onFileChange = function onFileChange(event) {\n    var uploadedFile = event.target.files[0]; // Update the state \n\n    setSelectedFilename(event.target.files[0].name); // Create an object of formData \n\n    var formData = new FormData(); // Update the formData object \n\n    formData.append(\"PricePromise\", uploadedFile, uploadedFile.name);\n    FilesAPI.UploadFile(formData, bucket, filesKeyPrefix).then(function (result) {\n      if (result.status.code === 0) {\n        setFileId(result.data.id);\n      }\n    });\n  };\n\n  var onSubmit = function onSubmit(data) {\n    if (!isLoading && !marketingConsentIsVerifying) {\n      setIsLoading(true);\n      var communicationTypes = null; //Should check if form was visible or user did any updates to those fields\n      //If no form is displayed data.contactEmail and other checkbox properties are \"undefined\"\n\n      if (!isInternal && data.contactEmail != undefined && data.allowedCommunicationTypes) {\n        communicationTypes = data.allowedCommunicationTypes;\n      }\n\n      var promise = new Promise(function (resolve) {\n        var fileKey = filesKeyPrefix + \"/\" + fileId;\n        EnquiryService.SubmitPricePromiseEnquiry(data.fullName, data.companyName, data.telephone, data.email, data.comments, fileKey, communicationTypes).then(function (result) {\n          //TODO; check is required\n          if (result.data) {\n            if (!isInternal) {\n              var expiryDate = new Date();\n              expiryDate.setFullYear(expiryDate.getFullYear() + 1);\n\n              if (data.privacyConfirmed) {\n                setPrivacyAccepted(expiryDate);\n              }\n\n              if (communicationTypes) {\n                MarketingCommunicationsService.SetToSeenMarketingForm(data.email, expiryDate);\n              }\n            }\n\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n      promise.then(function (result) {\n        if (result) {\n          router.push(GetThankYouPageUrl(isInternal, \"pricepromise\"));\n        }\n      })[\"catch\"](function (error) {\n        console.log(error);\n      })[\"finally\"](function () {\n        setIsLoading(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/_jsxs(Modal, _objectSpread(_objectSpread({\n      onHide: onRequestClose,\n      centered: true\n    }, otherProps), {}, {\n      children: [/*#__PURE__*/_jsx(Modal.Header, {\n        className: \"d-flex flex-nowrap justify-content-center align-items-center\",\n        closeButton: true,\n        children: /*#__PURE__*/_jsx(Modal.Title, {\n          className: \"text-left mb-0\",\n          children: \"Price Match Promise\"\n        })\n      }), /*#__PURE__*/_jsx(Modal.Body, {\n        children: /*#__PURE__*/_jsx(FormContext, _objectSpread(_objectSpread({}, methods), {}, {\n          children: /*#__PURE__*/_jsx(\"form\", {\n            className: \"px-md-3\",\n            onSubmit: handleSubmit(onSubmit),\n            children: /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: \"mb-4\",\n                children: \"A member of our team will contact you shortly after your submission.\"\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxs(\"label\", {\n                    children: [\"Full Name \", /*#__PURE__*/_jsx(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    })]\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    placeholder: \"Full Name\",\n                    maxLength: 100,\n                    name: \"fullName\",\n                    ref: register({\n                      required: true\n                    })\n                  }), errors.fullName && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"This field is required\"\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-lg-12  form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    htmlFor: \"companyName\",\n                    children: \"Company Name\"\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"companyName\",\n                    name: \"companyName\",\n                    \"aria-describedby\": \"companyName\",\n                    placeholder: \"Company Name\",\n                    ref: register()\n                  })]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxs(\"label\", {\n                    children: [\"Telephone \", /*#__PURE__*/_jsx(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    })]\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"tel\",\n                    className: \"form-control \".concat(errors.telephone ? \"is-invalid\" : \"\"),\n                    placeholder: \"Telephone\",\n                    maxLength: 50,\n                    name: \"telephone\",\n                    ref: register({\n                      required: 'This field is required',\n                      validate: function validate(value) {\n                        return PhoneNumberIsValid(value) === true || 'Invalid phone number';\n                      }\n                    })\n                  }), errors.telephone && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: (_errors$telephone = errors.telephone) === null || _errors$telephone === void 0 ? void 0 : _errors$telephone.message\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxs(\"label\", {\n                    children: [\"Email \", /*#__PURE__*/_jsx(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    })]\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"text\",\n                    className: \"form-control \".concat(errors.email ? \"is-invalid\" : \"\"),\n                    placeholder: \"Email\",\n                    maxLength: 70,\n                    name: \"email\",\n                    onBlur: onEmailFocusOut,\n                    ref: register({\n                      required: 'This field is required',\n                      validate: function validate(value) {\n                        return EmailAddressIsValid(value) === true || 'Invalid email address';\n                      }\n                    })\n                  }), errors.email && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n                  })]\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    children: \"Additional Comments\"\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    placeholder: \"Additional Comments\",\n                    name: \"comments\",\n                    ref: register()\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 form-group\",\n                  children: [/*#__PURE__*/_jsx(\"input\", {\n                    id: \"attachedFile\",\n                    name: \"attachedFile\",\n                    type: \"file\",\n                    className: \"form-control \".concat(style[\"fileUpload\"]),\n                    onChange: onFileChange,\n                    accept: \".pdf, image/*\",\n                    ref: register({\n                      required: true\n                    })\n                  }), /*#__PURE__*/_jsx(\"label\", {\n                    className: style[\"cstm-upload\"],\n                    htmlFor: \"attachedFile\",\n                    \"data-bind\": \"validationElement: $parent.fileId\",\n                    children: /*#__PURE__*/_jsx(\"span\", {\n                      className: \"txt\",\n                      children: selectedFilename !== null && selectedFilename !== void 0 ? selectedFilename : \"Upload file...\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"strong\", {\n                    className: \"d-block\",\n                    children: \"* Only PDF or JPG files accepted\"\n                  }), errors.attachedFile && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"No file selected\"\n                  })]\n                })\n              }), !isInternal ? /*#__PURE__*/_jsx(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24\",\n                  children: [/*#__PURE__*/_jsx(MarketingConsent, {\n                    emailAddress: emailAddressConsent,\n                    settings: {\n                      onVerificationStart: function onVerificationStart() {\n                        setMarketingConsentIsVerifying(true);\n                      },\n                      onVerificationComplete: function onVerificationComplete() {\n                        setMarketingConsentIsVerifying(false);\n                      }\n                    }\n                  }), /*#__PURE__*/_jsx(PrivacyPolicyConsent, {})]\n                })\n              }) : null]\n            })\n          })\n        }))\n      }), /*#__PURE__*/_jsx(Modal.Footer, {\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 d-flex justify-content-end\",\n            children: /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary btn-lg\",\n              onClick: handleSubmit(onSubmit),\n              children: isLoading ? /*#__PURE__*/_jsx(FontAwesomeIcon, {\n                width: \"16\",\n                height: \"16\",\n                icon: faSpinner,\n                className: \"fa-spin\"\n              }) : \"Match My Price\"\n            })\n          })\n        })\n      })]\n    }))\n  });\n};\n\nexport default ModalPricePromise;","map":null,"metadata":{},"sourceType":"module"}