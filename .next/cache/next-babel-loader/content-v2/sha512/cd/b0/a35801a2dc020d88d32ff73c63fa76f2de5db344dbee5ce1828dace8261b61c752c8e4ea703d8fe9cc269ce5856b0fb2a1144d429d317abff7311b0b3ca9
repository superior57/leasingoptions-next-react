{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport PostcodeLookup from './../postcode-lookup/index';\nimport { getFieldName, getFieldId, getFieldError } from 'helpers/fieldArrayHelper';\nimport { useFormContext } from 'react-hook-form';\n\nconst AddressInput = ({\n  excludeTownAndCounty,\n  formData,\n  index,\n  collectionName\n}) => {\n  const {\n    setValue,\n    register,\n    errors\n  } = useFormContext();\n\n  const onAddressSelected = address => {\n    setValue(fieldName(\"address1\"), address.address1);\n    setValue(fieldName(\"address2\"), address.address2);\n    setValue(fieldName(\"address3\"), address.address3);\n    setValue(fieldName(\"town\"), address.town);\n    setValue(fieldName(\"county\"), address.county);\n    setValue(fieldName(\"postcode\"), address.postcode);\n    setValue(fieldName(\"timestamp\"), Date.now());\n  };\n\n  const fieldName = name => {\n    return getFieldName(name, collectionName, index);\n  }; //Used to avoid warning for non unique IDs\n\n\n  const fieldId = name => {\n    return getFieldId(name, collectionName, index);\n  };\n\n  const fieldError = (name, errors) => {\n    return getFieldError(name, collectionName, index, errors);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: fieldName(\"timestamp\"),\n      defaultValue: formData.timestamp,\n      ref: register()\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"postcodeLookup\",\n          children: \"Start typing an address or postcode\"\n        }), /*#__PURE__*/_jsx(PostcodeLookup, {\n          minQueryLength: 4,\n          excludeTownAndCounty: excludeTownAndCounty,\n          onAddressSelected: onAddressSelected\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: fieldId(\"address1\"),\n          children: [\"Address \", /*#__PURE__*/_jsx(\"small\", {\n            children: \"(Required)\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: `form-control ${fieldError(\"address1\", errors) ? \"is-invalid\" : \"\"}`,\n          id: fieldId(\"address1\"),\n          name: fieldName(\"address1\"),\n          placeholder: \"Number and street\",\n          maxLength: 100,\n          ref: register({\n            required: true\n          }),\n          defaultValue: formData.address1\n        }), fieldError(\"address1\", errors) && /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: \"This field is required\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: fieldId(\"address2\"),\n          children: \"Address Line 2\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: fieldId(\"address2\"),\n          name: fieldName(\"address2\"),\n          placeholder: \"Address 2\",\n          maxLength: 100,\n          ref: register(),\n          defaultValue: formData.address2\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: fieldId(\"address3\"),\n          children: \"Address Line 3\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: fieldId(\"address3\"),\n          name: fieldName(\"address3\"),\n          placeholder: \"Address 3\",\n          maxLength: 100,\n          ref: register(),\n          defaultValue: formData.address3\n        })]\n      })\n    }), !excludeTownAndCounty && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"form-row mb-3\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-12\",\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            htmlFor: fieldId(\"town\"),\n            children: [\"Town / City \", /*#__PURE__*/_jsx(\"small\", {\n              children: \"(Required)\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: `form-control ${fieldError(\"town\", errors) ? \"is-invalid\" : \"\"}`,\n            id: fieldId(\"town\"),\n            name: fieldName(\"town\"),\n            placeholder: \"Town\",\n            maxLength: 100,\n            ref: register({\n              required: true\n            }),\n            defaultValue: formData.town\n          }), fieldError(\"town\", errors) && /*#__PURE__*/_jsx(\"span\", {\n            className: \"invalid-feedback d-block\",\n            children: \"This field is required\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"form-row mb-3\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-12\",\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            htmlFor: fieldId(\"county\"),\n            children: [\"County \", /*#__PURE__*/_jsx(\"small\", {\n              children: \"(Required)\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            className: `form-control ${fieldError(\"county\", errors) ? \"is-invalid\" : \"\"}`,\n            id: fieldId(\"county\"),\n            name: fieldName(\"county\"),\n            placeholder: \"County\",\n            maxLength: 100,\n            ref: register({\n              required: true\n            }),\n            defaultValue: formData.county\n          }), fieldError(\"county\", errors) && /*#__PURE__*/_jsx(\"span\", {\n            className: \"invalid-feedback d-block\",\n            children: \"This field is required\"\n          })]\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: fieldId(\"postcode\"),\n          children: [\"Postcode \", /*#__PURE__*/_jsx(\"small\", {\n            children: \"(Required)\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: `form-control ${fieldError(\"postcode\", errors) ? \"is-invalid\" : \"\"}`,\n          id: fieldId(\"postcode\"),\n          name: fieldName(\"postcode\"),\n          placeholder: \"Postcode\",\n          maxLength: 10,\n          ref: register({\n            required: true\n          }),\n          defaultValue: formData.postcode,\n          onChange: () => {\n            setValue(fieldName(\"timestamp\"), Date.now());\n          }\n        }), fieldError(\"postcode\", errors) && /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: \"This field is required\"\n        })]\n      })\n    })]\n  });\n};\n\nexport default AddressInput;","map":null,"metadata":{},"sourceType":"module"}