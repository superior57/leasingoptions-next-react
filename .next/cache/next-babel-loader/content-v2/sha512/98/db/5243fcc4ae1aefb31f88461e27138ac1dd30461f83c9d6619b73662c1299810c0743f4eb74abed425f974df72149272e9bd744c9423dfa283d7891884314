{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport style from './expandable-text.module.scss';\nimport DropDown from 'components/layout/drop-down';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClipboardListCheck, faChevronDoubleDown } from \"@fortawesome/pro-solid-svg-icons\";\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\nimport { GetDealTypeUrl } from 'helpers/urlHelper';\n\nconst ExpandableText = ({\n  children,\n  theme,\n  isATC = false,\n  galleryButton = false,\n  reviewButton = false,\n  modelDropDown = false,\n  modelDropDownData,\n  vehicleFilter,\n  leasingDealType,\n  handleModelChange,\n  handleScrollToTabs\n}) => {\n  const innerText = React.useRef();\n  const {\n    0: textLimited,\n    1: setTextLimited\n  } = useState(false);\n  const {\n    0: textToggle,\n    1: setTextToggle\n  } = useState(false);\n\n  const handleTextToggle = evt => {\n    evt.preventDefault();\n    setTextToggle(!textToggle);\n  };\n\n  useEffect(() => {\n    let wrapperHeight = ReactDOM.findDOMNode(innerText.current).clientHeight;\n    let windowWidth = window.innerWidth;\n    let screenLimited = 0;\n\n    if (windowWidth > 767) {\n      screenLimited = 200;\n    } else {\n      screenLimited = 100;\n    }\n\n    if (wrapperHeight) {\n      if (wrapperHeight > screenLimited) {\n        setTextLimited(true);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: `${style['expandable-text']} ${theme === \"dark\" ? style['expandable-text--dark'] : \"\"} ${textLimited && !textToggle ? style['is-limited'] : ''} ${textToggle ? style['is-open'] : ''}`,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      ref: innerText,\n      className: style['expandable-text__inner'],\n      dangerouslySetInnerHTML: {\n        __html: children\n      }\n    }), textLimited && /*#__PURE__*/_jsxs(\"button\", {\n      role: \"button\",\n      className: `btn ${theme === \"dark\" ? \"btn-outline-light\" : \"btn-outline-black\"} btn-labeled btn-labeled--right ${textToggle ? \"btn-labeled--rotate\" : \"\"} ${!galleryButton || !reviewButton ? \"btn-block-xs\" : \"\"} btn-fluid btn-lg mr-sm-3 mt-3`,\n      onClick: evt => handleTextToggle(evt),\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: \"btn-text\",\n        children: textToggle ? \"Show less\" : \"Read more\"\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"btn-label\",\n        children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          width: \"17\",\n          height: \"17\",\n          icon: faChevronDoubleDown\n        })\n      })]\n    }), galleryButton && /*#__PURE__*/_jsxs(\"button\", {\n      role: \"button\",\n      onClick: () => handleScrollToTabs('gallery'),\n      className: `btn ${isATC ? \"btn-outline-light\" : \"btn-outline-primary\"} btn-labeled btn-fluid btn-lg mr-3 d-none d-md-inline-block mt-3`,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: \"btn-label\",\n        children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          width: \"16\",\n          height: \"16\",\n          icon: faImage\n        })\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"btn-text\",\n        children: \"View Gallery\"\n      })]\n    }), reviewButton && /*#__PURE__*/_jsxs(\"button\", {\n      role: \"button\",\n      onClick: () => handleScrollToTabs('review'),\n      className: `btn ${isATC ? \"btn-outline-light\" : \"btn-outline-primary\"} btn-labeled btn-fluid btn-lg d-none d-md-inline-block mt-3`,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: \"btn-label\",\n        children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          width: \"16\",\n          height: \"16\",\n          icon: faClipboardListCheck\n        })\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"btn-text\",\n        children: \"View Review\"\n      })]\n    }), modelDropDown && modelDropDownData && /*#__PURE__*/_jsx(DropDown, {\n      wrapperClass: \"w-100-xs float-md-right\",\n      buttonClass: `${isATC ? \" btn-outline-light\" : \"btn-outline-primary\"} btn-fluid btn-lg btn-block-xs mt-3`,\n      buttonText: \"Quick model select\",\n      children: modelDropDownData === null || modelDropDownData === void 0 ? void 0 : modelDropDownData.map(model => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        className: \"text-left\",\n        onClick: () => handleModelChange(GetDealTypeUrl(leasingDealType) + '/' + (vehicleFilter === null || vehicleFilter === void 0 ? void 0 : vehicleFilter.manufacturerUrl) + '/' + model.shortModTextUrl),\n        children: model.shortModText\n      }, model.shortModText))\n    })]\n  });\n};\n\nexport default ExpandableText;","map":null,"metadata":{},"sourceType":"module"}