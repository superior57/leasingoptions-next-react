{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ModalContext from './modalContext';\n\nvar ModalProvider = /*#__PURE__*/function (_Component) {\n  _inherits(ModalProvider, _Component);\n\n  var _super = _createSuper(ModalProvider);\n\n  function ModalProvider() {\n    var _this;\n\n    _classCallCheck(this, ModalProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"showModal\", function (component) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _this.setState({\n        component: component,\n        props: props\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideModal\", function () {\n      _this.setState({\n        component: null,\n        props: {}\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      component: null,\n      props: {},\n      showModal: _this.showModal,\n      hideModal: _this.hideModal\n    });\n\n    return _this;\n  }\n\n  _createClass(ModalProvider, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(ModalContext.Provider, {\n        value: this.state,\n        children: this.props.children\n      });\n    }\n  }]);\n\n  return ModalProvider;\n}(Component);\n\nexport default ModalProvider;","map":null,"metadata":{},"sourceType":"module"}