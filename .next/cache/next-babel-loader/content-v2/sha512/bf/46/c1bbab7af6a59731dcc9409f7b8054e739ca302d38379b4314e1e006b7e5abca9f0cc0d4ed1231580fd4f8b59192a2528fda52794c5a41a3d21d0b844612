{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport style from './doofinder-search.module.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { VehicleTypes } from 'enums/VehicleTypes';\n\nconst DoofinderSearch = ({\n  vehiclePreference,\n  dispatchvehiclePreference\n}) => {\n  const handleVehicleTypeChange = vehicleType => {\n    dispatchvehiclePreference(vehicleType);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: style['doofinder-block'],\n    children: [/*#__PURE__*/_jsxs(\"ul\", {\n      children: [/*#__PURE__*/_jsx(\"li\", {\n        children: /*#__PURE__*/_jsx(\"button\", {\n          className: `btn btn-text btn-block text-center ${vehiclePreference === VehicleTypes.Car ? style['is-selected'] : ''}`,\n          onClick: () => handleVehicleTypeChange(VehicleTypes.Car),\n          children: \"Car Leasing\"\n        })\n      }), /*#__PURE__*/_jsx(\"li\", {\n        children: /*#__PURE__*/_jsx(\"button\", {\n          className: `btn btn-text btn-block text-center ${vehiclePreference === VehicleTypes.Commercial ? style['is-selected'] : ''}`,\n          onClick: () => handleVehicleTypeChange(VehicleTypes.Commercial),\n          children: \"Van Leasing\"\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: style['doofinder-block__input'],\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: style['input-wrapper'],\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style['input-icon'],\n          children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n            width: \"16\",\n            height: \"16\",\n            icon: faSearch\n          })\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"search\",\n          id: \"doofinderSearch\",\n          placeholder: vehiclePreference === VehicleTypes.Car ? \"e.g. BMW 3 Series\" : \"e.g. Ford Transit\"\n        })]\n      })\n    })]\n  });\n};\n\nconst mapStateToProps = state => ({\n  vehiclePreference: state.vehiclePreference,\n  isInternal: state.isInternal\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchvehiclePreference: data => {\n      dispatch({\n        type: \"UPDATE_VEHICLE_PREFERENCE\",\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoofinderSearch);","map":null,"metadata":{},"sourceType":"module"}