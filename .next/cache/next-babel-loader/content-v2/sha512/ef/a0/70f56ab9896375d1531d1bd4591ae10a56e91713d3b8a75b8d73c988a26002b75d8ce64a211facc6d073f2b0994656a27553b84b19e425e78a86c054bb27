{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getApiResponse } from \"helpers/apiResponseHelper\";\nexport class GarageAPI {\n  static async GetGarage(garageId) {\n    const res = await fetch(this.baseUrl + 'api/garage/get/' + garageId);\n    return getApiResponse(res);\n  }\n\n  static async SubmitGarageAction(payload) {\n    const response = await fetch(this.baseUrl + \"api/garage/garageaction\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    return getApiResponse(response);\n  } //TOTO: implement input class\n\n\n  static async SaveGarage(payload) {\n    const response = await fetch(this.baseUrl + \"api/garage/save\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    return getApiResponse(response);\n  }\n\n}\n\n_defineProperty(GarageAPI, \"baseUrl\", process.env.NEXT_PUBLIC_MICROSERVICE_SYSTEM_URL);","map":null,"metadata":{},"sourceType":"module"}