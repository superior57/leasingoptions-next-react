{"ast":null,"code":"import { VehicleTypes } from 'enums/VehicleTypes';\nimport { LeasingDealTypes } from 'enums/LeasingDealTypes';\nimport { getBaseUrl } from 'helpers/urlsHelper';\nimport { getLOSSRFetchHeaders } from 'helpers/apiHelper';\nimport { GetCanonicalUrl } from 'helpers/urlHelper';\nimport { isNullOrWhiteSpace } from 'helpers/stringHelper';\nimport { getVehiclesFilter } from 'helpers/vehiclesFilterHelper';\nimport { GetTopLoPickVehicles, GetVehicleModelPreviews } from 'business-logic/vehicleService';\nimport { ContentService } from 'business-logic/contentService';\nimport { dispatchUpdateDealToggle, dispatchUpdateVehicleFilterSearch, dispatchSearchType } from 'redux/dispatches/dispatchs';\nexport const getProps = async context => {\n  var _GetCanonicalUrl;\n\n  const vehiclesFilter = getVehiclesFilter(context);\n  const vehicleType = vehiclesFilter.vehicleType;\n  const leasingDealType = vehiclesFilter.leasingDealType;\n\n  if (vehicleType === VehicleTypes.None || leasingDealType === LeasingDealTypes.None) {\n    //Do we have custom page to show?\n    context.res.writeHead(404);\n    context.res.end();\n    return;\n  }\n\n  vehiclesFilter.isInStock = true;\n  await dispatchUpdateVehicleFilterSearch(context, vehiclesFilter);\n\n  if (vehicleType === VehicleTypes.Car) {\n    //TODO: set from filter?\n    dispatchUpdateDealToggle(context);\n  }\n\n  const fetchHeaders = getLOSSRFetchHeaders(context);\n  const modelPreviews = (await GetVehicleModelPreviews(vehiclesFilter, {\n    pageSize: 99999,\n    pageIndex: 1\n  }, {\n    sortBy: 'OrderPrice',\n    sortDirection: 'ASC'\n  }, fetchHeaders)).data;\n  const topPicks = (await GetTopLoPickVehicles(vehicleType, '', null, null, fetchHeaders)).data;\n  const pageContent = (await ContentService.GetInStockPageContent(vehicleType)).data;\n  let title = (pageContent === null || pageContent === void 0 ? void 0 : pageContent.title) || null;\n  let description = (pageContent === null || pageContent === void 0 ? void 0 : pageContent.text) || null; //TODO: HTML format required on render. Check other pages as well\n\n  if (isNullOrWhiteSpace(title)) {\n    title = `In Stock ${vehicleType === VehicleTypes.Commercial ? \"Van\" : \"Car\"} Lease Deals`;\n  }\n\n  const metaData = {\n    title: (pageContent === null || pageContent === void 0 ? void 0 : pageContent.metaPageTitle) || null,\n    description: (pageContent === null || pageContent === void 0 ? void 0 : pageContent.metaDescription) || null,\n    keywords: (pageContent === null || pageContent === void 0 ? void 0 : pageContent.metaKeywords) || null,\n    canonicalUrl: (_GetCanonicalUrl = GetCanonicalUrl(getBaseUrl(context.req.url))) === null || _GetCanonicalUrl === void 0 ? void 0 : _GetCanonicalUrl.toLowerCase()\n  };\n\n  if (isNullOrWhiteSpace(metaData.title)) {\n    metaData.title = `In Stock ${vehicleType === VehicleTypes.Commercial ? \"Van\" : \"Car\"} Lease Deals | Fast Delivery | Leasing Options`;\n  }\n\n  if (isNullOrWhiteSpace(metaData.description)) {\n    if (vehicleType === VehicleTypes.Car) {\n      metaData.description = `Looking for a car lease but need something quick? Leasing Options offer a wide selection of cars that are in stock right now. View our in stock cars today.`;\n    } else if (vehicleType === VehicleTypes.Commercial) {\n      metaData.description = `Check out our in stock van lease deals and drive a brand-new vehicle in less than two weeks.`;\n    }\n  }\n\n  if (!isNullOrWhiteSpace(metaData.description)) {\n    metaData.description = metaData.description.replace(/[\\r\\n]+/g, \" \").trim();\n  }\n\n  dispatchSearchType(context, \"stock\", \"Search stock only\");\n  return {\n    props: {\n      title: title,\n      description: description,\n      metaData: metaData,\n      modelPreviews: modelPreviews,\n      topPicks: topPicks,\n      vehicleFilter: vehiclesFilter\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}