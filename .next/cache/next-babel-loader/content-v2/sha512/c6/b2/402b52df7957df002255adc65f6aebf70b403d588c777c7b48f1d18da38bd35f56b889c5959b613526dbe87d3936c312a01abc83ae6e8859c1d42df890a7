{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\current_project\\\\PPH\\\\tfs\\\\Website\\\\Website\\\\components\\\\search\\\\search-accordion.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport style from './search.module.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faChevronDown } from \"@fortawesome/pro-regular-svg-icons\";\n\nconst SearchAccordion = ({\n  selected,\n  title,\n  subtitle,\n  autoclose = true,\n  children\n}) => {\n  const {\n    0: accordionToggle,\n    1: setAccordionToggle\n  } = useState(false);\n\n  const handleAccordionToggle = evt => setAccordionToggle(!accordionToggle);\n\n  useEffect(() => {\n    if (autoclose) {\n      setAccordionToggle(false);\n    }\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `${style['accordion']} ${accordionToggle ? style['is-active'] : ''} ${selected !== null && selected !== void 0 && selected.id && (selected === null || selected === void 0 ? void 0 : selected.id) != '' ? style['is-selected'] : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: evt => handleAccordionToggle(evt),\n      className: style['accordion-toggle'],\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-inline-flex justify-content-between align-items-center m-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"- \", selected !== null && selected !== void 0 && selected.id && (selected === null || selected === void 0 ? void 0 : selected.id) != '' ? '' : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"E.g. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 168\n          }, this), subtitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 116\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), \" \", accordionToggle ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        width: \"25\",\n        height: \"25\",\n        icon: faChevronUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 232\n      }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        width: \"25\",\n        height: \"25\",\n        icon: faChevronDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 296\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style['accordion-content'],\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\nexport default SearchAccordion;","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/Website/components/search/search-accordion.tsx"],"names":["React","useState","useEffect","style","FontAwesomeIcon","faChevronUp","faChevronDown","SearchAccordion","selected","title","subtitle","autoclose","children","accordionToggle","setAccordionToggle","handleAccordionToggle","evt","id"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,oCAA3C;;AAUA,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,SAAS,GAAG,IAAzC;AAA+CC,EAAAA;AAA/C,CAAD,KAA+D;AACpG,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCb,QAAQ,CAAC,KAAD,CAAtD;;AACA,QAAMc,qBAAqB,GAAIC,GAAD,IAASF,kBAAkB,CAAC,CAACD,eAAF,CAAzD;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,SAAJ,EAAe;AACXG,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH;AACJ,GAJQ,EAIN,CAACN,QAAD,CAJM,CAAT;AAMA,sBACI;AAAI,IAAA,SAAS,EAAG,GAAEL,KAAK,CAAC,WAAD,CAAc,IAAGU,eAAe,GAAGV,KAAK,CAAC,WAAD,CAAR,GAAwB,EAAG,IAAGK,QAAQ,SAAR,IAAAA,QAAQ,WAAR,IAAAA,QAAQ,CAAES,EAAV,IAAgB,CAAAT,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAES,EAAV,KAAgB,EAAhC,GAAqCd,KAAK,CAAC,aAAD,CAA1C,GAA4D,EAAG,EAApJ;AAAA,4BACI;AAAK,MAAA,OAAO,EAAGa,GAAD,IAASD,qBAAqB,CAACC,GAAD,CAA5C;AAAmD,MAAA,SAAS,EAAEb,KAAK,CAAC,kBAAD,CAAnE;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,8DAAhB;AAAA,gCAA+E;AAAA,oBAAOM;AAAP;AAAA;AAAA;AAAA;AAAA,gBAA/E,eAAmG;AAAA,2BAAUD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,IAAAA,QAAQ,CAAES,EAAV,IAAgB,CAAAT,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAES,EAAV,KAAgB,EAAhC,GAAqC,EAArC,gBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApD,EAAwEP,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnG;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACyMG,eAAe,gBAAG,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,IAAvB;AAA4B,QAAA,MAAM,EAAC,IAAnC;AAAwC,QAAA,IAAI,EAAER;AAA9C;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAmE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,IAAvB;AAA4B,QAAA,MAAM,EAAC,IAAnC;AAAwC,QAAA,IAAI,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAD3R;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEH,KAAK,CAAC,mBAAD,CAArB;AAAA,gBAA6CS;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlBD;;AAmBA,eAAeL,eAAf","sourcesContent":["import React, { ReactNode, useState, useEffect } from 'react';\r\nimport style from './search.module.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronUp, faChevronDown } from \"@fortawesome/pro-regular-svg-icons\";\r\n\r\ntype Props = {\r\n    selected: any;\r\n    title: string;\r\n    subtitle: any;\r\n    autoclose?: boolean;\r\n    children?: ReactNode,\r\n}\r\n\r\nconst SearchAccordion: React.FC<Props> = ({ selected, title, subtitle, autoclose = true, children }) => {\r\n    const [accordionToggle, setAccordionToggle] = useState(false);\r\n    const handleAccordionToggle = (evt) => setAccordionToggle(!accordionToggle);\r\n\r\n    useEffect(() => {\r\n        if (autoclose) {\r\n            setAccordionToggle(false);\r\n        }\r\n    }, [selected]);\r\n\r\n    return (\r\n        <li className={`${style['accordion']} ${accordionToggle ? style['is-active'] : ''} ${selected?.id && selected?.id != '' ? style['is-selected'] : ''}`}>\r\n            <div onClick={(evt) => handleAccordionToggle(evt)} className={style['accordion-toggle']}>\r\n                <span className=\"d-inline-flex justify-content-between align-items-center m-0\"><span>{title}</span><small>- {selected?.id && selected?.id != '' ? '' : <span>E.g. </span>}{subtitle}</small></span> {accordionToggle ? <FontAwesomeIcon width=\"25\" height=\"25\" icon={faChevronUp} /> : <FontAwesomeIcon width=\"25\" height=\"25\" icon={faChevronDown} />}\r\n            </div>\r\n            <div className={style['accordion-content']}>{children}</div>\r\n        </li>\r\n    )\r\n}\r\nexport default SearchAccordion;"]},"metadata":{},"sourceType":"module"}