{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm, FormContext } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nimport Modal from 'react-bootstrap/Modal';\nimport MarketingConsent from 'components/marketing-consent';\nimport PrivacyPolicyConsent from 'components/privacy-policy-consent';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/pro-regular-svg-icons\";\nimport { LeasingDealTypes } from \"enums/LeasingDealTypes\";\nimport { formatMoney } from 'helpers/currencyHelper';\nimport { PhoneNumberIsValid, EmailAddressIsValid } from 'helpers/validation';\nimport { getGAClientId } from 'helpers/analytics';\nimport { setPrivacyAccepted } from 'helpers/cookiesHelper';\nimport { GetThankYouPageUrl } from 'helpers/urlHelper';\nimport { MarketingCommunicationsService } from 'business-logic/marketingCommunicationsService';\nimport { EnquiryService } from \"business-logic/enquiryService\";\nimport { QuotesService } from 'business-logic/quotesService';\nimport { GetSalesPeople } from 'business-logic/systemService';\n\nconst VehicleQuoteEnquiryModal = (_ref) => {\n  var _errors$telephone, _errors$email, _errors$ownerId, _errors$informationNo;\n\n  let {\n    title,\n    baseData,\n    settings,\n    onRequestClose\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"title\", \"baseData\", \"settings\", \"onRequestClose\"]);\n\n  const router = useRouter();\n  const methods = useForm();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = methods;\n  const procFee = parseFloat(process.env.NEXT_PUBLIC_PCH_PROC_FEE);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: marketingConsentIsVerifying,\n    1: setMarketingConsentIsVerifying\n  } = useState(false);\n  const {\n    0: emailAddressConsent,\n    1: setEmailAddressConsent\n  } = useState(null);\n  const {\n    0: salesPersons,\n    1: setSalesPersons\n  } = useState(settings.salesPersons || []);\n  const {\n    0: salesPersonVerificationRequired,\n    1: setSalesPersonVerificationRequired\n  } = useState(false);\n  const {\n    0: ownerConfirmRequired,\n    1: setOwnerConfirmRequired\n  } = useState(false);\n  const {\n    0: owners,\n    1: setOwners\n  } = useState([]);\n  const {\n    0: owner,\n    1: setOwner\n  } = useState(null);\n  const {\n    0: step,\n    1: setStep\n  } = useState(1);\n  const {\n    0: formState,\n    1: setFormState\n  } = useState({\n    fullName: null,\n    telephone: null,\n    email: null,\n    companyName: null,\n    ownerId: null,\n    allowedCommunicationTypes: null,\n    informationNoticeConfirmed: false\n  }); //TODO: get salespersons with settings\n\n  useEffect(() => {\n    if (salesPersons.length === 0 && settings.isInternal) {\n      GetSalesPeople().then(result => {\n        setSalesPersons(result.data);\n      });\n    }\n  }, []);\n\n  const getTitle = step => {\n    let result = title;\n\n    if (step === 2) {\n      result = \"Information Notice\";\n    }\n\n    return result;\n  }; //Fires only when input loses focus and triggers marketing-consent to reinitialize\n\n\n  const handleEmailFocusOut = event => {\n    if (!settings.isInternal) {\n      if (event.target.value && EmailAddressIsValid(event.target.value)) {\n        setEmailAddressConsent(event.target.value);\n      } else {\n        setEmailAddressConsent(null);\n      }\n    }\n\n    setSalesPersonVerificationFlag();\n  };\n\n  const handleTelephoneFocusOut = event => {\n    setSalesPersonVerificationFlag();\n  };\n\n  const handleSalesPersonChange = event => {\n    setSalesPersonVerificationFlag();\n  };\n\n  const setSalesPersonVerificationFlag = () => {\n    if (settings.isInternal) {\n      setSalesPersonVerificationRequired(true);\n      setOwnerConfirmRequired(false);\n      setOwners([]);\n      setOwner(null);\n    }\n  };\n\n  const verifySalesPerson = (salesPersonId, email, telephone) => {\n    return new Promise(resolve => {\n      if (salesPersonVerificationRequired) {\n        setOwnerConfirmRequired(false);\n        setOwner(null);\n      }\n\n      if (salesPersonVerificationRequired && salesPersonId) {\n        QuotesService.VerifySalesPerson(salesPersonId, email, telephone).then(result => {\n          let stopExecutionFlag = false;\n          setSalesPersonVerificationRequired(false);\n\n          if (result.isSucceed && result.data.isRequired && result.data.salesPersons) {\n            setOwnerConfirmRequired(true);\n            const ownersList = result.data.salesPersons;\n            var existingOwner = ownersList.find(item => {\n              return item.isExisting;\n            });\n\n            if (existingOwner) {\n              setOwner({\n                id: existingOwner.id,\n                name: existingOwner.text\n              });\n            }\n\n            setOwners(ownersList);\n            stopExecutionFlag = true;\n          } else {\n            setOwner({\n              id: salesPersonId,\n              name: null\n            });\n          }\n\n          resolve(stopExecutionFlag);\n        });\n      } else {\n        setSalesPersonVerificationRequired(false);\n        resolve(false);\n      }\n    });\n  };\n\n  const onSubmit = data => {\n    if (!isLoading && !marketingConsentIsVerifying) {\n      if (step === 1) {\n        setIsLoading(true);\n        const email = data.email;\n        const telephone = data.telephone;\n        const salesPersonId = data.salesPersonId;\n        verifySalesPerson(salesPersonId, email, telephone).then(verifySalesPersonStopExecutionFlag => {\n          if (verifySalesPersonStopExecutionFlag) {\n            setIsLoading(false);\n          } else {\n            let formData = {\n              fullName: data.fullName,\n              telephone: data.telephone,\n              email: data.email,\n              companyName: data.companyName,\n              ownerId: data.ownerId || data.salesPersonId || null,\n              allowedCommunicationTypes: data.allowedCommunicationTypes\n            };\n\n            if (settings.proceededToApplyForFinanceDirectly) {\n              QuotesService.CheckInformationNoticAcceptance(email, telephone).then(result => {\n                if (result) {\n                  setFormState(prevState => {\n                    return _objectSpread(_objectSpread({}, prevState), formData);\n                  });\n                  setIsLoading(false);\n                  setStep(2);\n                } else {\n                  doSubmit(formData);\n                }\n              });\n            } else {\n              doSubmit(formData);\n            }\n          }\n        });\n      } else if (step === 2) {\n        let formData = _objectSpread({}, formState);\n\n        formData.informationNoticeConfirmed = data.informationNoticeConfirmed;\n        doSubmit(formData);\n      }\n    }\n  };\n\n  const doSubmit = formData => {\n    if (formData && baseData) {\n      setIsLoading(true);\n\n      let enquiryData = _objectSpread(_objectSpread({}, baseData), {}, {\n        quoteEnquiryType: settings.proceededToApplyForFinanceDirectly ? 2 : 1,\n        isIDDAccepted: settings.proceededToApplyForFinanceDirectly && formData.informationNoticeConfirmed,\n        fullName: formData.fullName,\n        telephone: formData.telephone,\n        email: formData.email,\n        companyName: baseData.leasingDealType !== 2 ? formData.companyName : null,\n        gaClientId: getGAClientId()\n      });\n\n      if (settings.isInternal) {\n        enquiryData.salesPersonId = formData.ownerId;\n      } else {\n        enquiryData.allowedCommunicationTypes = formData.allowedCommunicationTypes || null;\n      }\n\n      EnquiryService.SubmitQuoteEnquiry(enquiryData).then(result => {\n        setIsLoading(false);\n\n        if (result.isSucceed && result.data) {\n          if (!settings.isInternal) {\n            let expiryDate = new Date();\n            expiryDate.setFullYear(expiryDate.getFullYear() + 1);\n\n            if (enquiryData.allowedCommunicationTypes) {\n              MarketingCommunicationsService.SetToSeenMarketingForm(enquiryData.email, expiryDate);\n            }\n\n            if (formData.privacyConfirmed) {\n              setPrivacyAccepted(expiryDate);\n            }\n          }\n\n          if (settings.proceededToApplyForFinanceDirectly) {\n            switch (enquiryData.leasingDealType.toString()) {\n              case \"1\":\n              case \"3\":\n                var url = \"/proposal_business?directfinance=1&fromconfirmquote=1&enquiryid=\" + result.data + \"&email=\" + encodeURI(enquiryData.email) + \"&fromInsuredLeasing=\" + (window.location.href.includes(\"car-leasing-with-insurance\") ? \"1\" : \"0\");\n                router.push(url);\n                break;\n\n              case \"2\":\n                var url = \"/proposal_personal?directfinance=1&fromconfirmquote=1&enquiryid=\" + result.data + \"&email=\" + encodeURI(enquiryData.email) + \"&fromInsuredLeasing=\" + (window.location.href.includes(\"car-leasing-with-insurance\") ? \"1\" : \"0\");\n                router.push(url);\n                break;\n            }\n          } else {\n            if (settings.isInternal) {\n              router.push(GetThankYouPageUrl(true));\n            } else {\n              router.push(GetThankYouPageUrl(false, \"quoteconfirm\"));\n            }\n          }\n\n          onRequestClose();\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Modal, _objectSpread(_objectSpread({\n    onHide: onRequestClose,\n    centered: true,\n    scrollable: false\n  }, otherProps), {}, {\n    children: [/*#__PURE__*/_jsx(Modal.Header, {\n      className: \"d-flex flex-nowrap justify-content-center align-items-center\",\n      closeButton: true,\n      children: /*#__PURE__*/_jsx(Modal.Title, {\n        className: \"mb-0\",\n        children: getTitle(step)\n      })\n    }), /*#__PURE__*/_jsx(Modal.Body, {\n      children: /*#__PURE__*/_jsxs(FormContext, _objectSpread(_objectSpread({}, methods), {}, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              children: \"A member of our team will contact you shortly after your submission.\"\n            })\n          })\n        }), step === 1 ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [settings.leasingMessage ? /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-24\",\n              children: /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"I\\u2019m interested in leasing of \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: settings.leasingMessage\n                })]\n              })\n            }) : null, /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                children: [\"Full Name \", /*#__PURE__*/_jsx(\"span\", {\n                  children: \"(Required)\"\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: `form-control ${errors.fullName ? \"is-invalid\" : \"\"}`,\n                placeholder: \"First & Last Name\",\n                maxLength: 50,\n                name: \"fullName\",\n                disabled: ownerConfirmRequired,\n                ref: register({\n                  required: true\n                })\n              }), errors.fullName ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: \"Full Name is required.\"\n              }) : null]\n            }), baseData.leasingDealType !== LeasingDealTypes.Personal ? /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"Company Name\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Company Name\",\n                maxLength: 50,\n                name: \"companyName\",\n                disabled: ownerConfirmRequired,\n                ref: register()\n              })]\n            }) : null, /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                children: [\"Telephone \", /*#__PURE__*/_jsx(\"span\", {\n                  children: \"(Required)\"\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"tel\",\n                className: `form-control ${errors.telephone ? \"is-invalid\" : \"\"}`,\n                placeholder: \"Mobile or Home\",\n                maxLength: 20,\n                name: \"telephone\",\n                onBlur: handleTelephoneFocusOut,\n                disabled: ownerConfirmRequired,\n                ref: register({\n                  required: 'Telephone is required.',\n                  validate: value => PhoneNumberIsValid(value) === true || 'Please specify a valid UK phone number.'\n                })\n              }), errors.telephone ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$telephone = errors.telephone) === null || _errors$telephone === void 0 ? void 0 : _errors$telephone.message\n              }) : null]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                children: [\"Email \", /*#__PURE__*/_jsx(\"span\", {\n                  children: \"(Required)\"\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"email\",\n                className: `form-control ${errors.email ? \"is-invalid\" : \"\"}`,\n                placeholder: \"E.g. johnsmith@website.co.uk\",\n                maxLength: 50,\n                name: \"email\",\n                onBlur: handleEmailFocusOut,\n                disabled: ownerConfirmRequired,\n                ref: register({\n                  required: 'Email is required.',\n                  validate: value => EmailAddressIsValid(value) === true || 'Email is invalid.'\n                })\n              }), errors.email ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n              }) : null]\n            }), settings.isInternal ? /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"Salesperson\"\n              }), /*#__PURE__*/_jsxs(\"select\", {\n                className: \"form-control\",\n                name: \"salesPersonId\",\n                onChange: handleSalesPersonChange,\n                disabled: ownerConfirmRequired,\n                ref: register,\n                children: [/*#__PURE__*/_jsx(\"option\", {\n                  value: \"\",\n                  children: \"Please select\"\n                }), salesPersons.map(item => /*#__PURE__*/_jsx(\"option\", {\n                  value: item.id,\n                  children: item.fullName\n                }, item.id))]\n              })]\n            }) : null]\n          }), settings.isInternal && ownerConfirmRequired ? /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24\",\n              children: [owner && owner.name ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [\"Account with these details already exists for Owner: \", owner.name]\n              }) : null, owners.map((item, idx) => /*#__PURE__*/_jsxs(\"div\", {\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"radio\",\n                  className: \"d-inline mr-1\",\n                  name: \"ownerId\",\n                  id: `salesPerson_${idx}`,\n                  value: item.id,\n                  defaultChecked: owner.id === item.id,\n                  ref: register({\n                    required: 'Owner is required.'\n                  })\n                }), /*#__PURE__*/_jsx(\"label\", {\n                  className: \"d-inline\",\n                  htmlFor: `salesPerson_${idx}`,\n                  children: item.text\n                })]\n              }, item.id)), errors.ownerId ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$ownerId = errors.ownerId) === null || _errors$ownerId === void 0 ? void 0 : _errors$ownerId.message\n              }) : null]\n            })\n          }) : null, !settings.isInternal ? /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24\",\n              children: [/*#__PURE__*/_jsx(MarketingConsent, {\n                emailAddress: emailAddressConsent,\n                settings: {\n                  onVerificationStart: () => {\n                    setMarketingConsentIsVerifying(true);\n                  },\n                  onVerificationComplete: () => {\n                    setMarketingConsentIsVerifying(false);\n                  }\n                }\n              }), /*#__PURE__*/_jsx(PrivacyPolicyConsent, {})]\n            })\n          }) : null]\n        }) : null, step === 2 ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-24\",\n            children: [/*#__PURE__*/_jsxs(\"ul\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxs(\"li\", {\n                children: [\"We are \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: \"Leasing Options Limited\"\n                }), \", a credit intermediary for vehicle finance and insurance related products. Our registered office is \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: \"Options House, Atkin Street, Worsley, Manchester, M28 3DG\"\n                })]\n              }), /*#__PURE__*/_jsxs(\"li\", {\n                children: [\"We are authorised and regulated by the Financial Conduct Authority. Registered no: \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: \"660061\"\n                }), \".\"]\n              }), /*#__PURE__*/_jsx(\"li\", {\n                children: \"We are a credit broker of vehicle finance, we are not a funder or a lender.\"\n              }), /*#__PURE__*/_jsxs(\"li\", {\n                children: [\"We charge a Processing Fee of \", formatMoney(procFee), \" including VAT which is only payable at order stage, once acceptable finance has been obtained, as a contribution to the costs incurred in processing the vehicle finance agreement. We do not charge fees for processing insurance products. Payment of the Processing Fee can be made on-line using a credit or debit card or by BACs transfer.\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-check form-check-inline privacy-agreement\",\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"checkbox\",\n                  className: \"form-check-input\",\n                  id: \"infoConfirmed\",\n                  name: \"informationNoticeConfirmed\",\n                  ref: register({\n                    validate: value => value === true || \"Information Notice confirmation required.\"\n                  })\n                }), /*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"infoConfirmed\",\n                  className: errors.informationNoticeConfirmed ? \"invalid-feedback\" : null,\n                  children: \"Please respond to this 'Information Notice' confirming that you understand and acknowledge the above and that you are happy to proceed. Any delays in receiving confirmation may impact on the rates quoted.\"\n                })]\n              }), errors.informationNoticeConfirmed && /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$informationNo = errors.informationNoticeConfirmed) === null || _errors$informationNo === void 0 ? void 0 : _errors$informationNo.message\n              })]\n            })]\n          })\n        }) : null, settings.showPriceWarning ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"alert alert-warning\",\n              role: \"alert\",\n              children: [/*#__PURE__*/_jsx(\"strong\", {\n                children: \"IMPORTANT:\"\n              }), \" This is an indicative price, please speak to your account manager for the exact rental.\"]\n            })\n          })\n        }) : null]\n      }))\n    }), /*#__PURE__*/_jsx(Modal.Footer, {\n      children: /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-lg\",\n        onClick: handleSubmit(onSubmit),\n        children: isLoading ? /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          width: \"16\",\n          height: \"16\",\n          icon: faSpinner,\n          className: \"fa-spin\"\n        }) : \"Submit\"\n      })\n    })]\n  }));\n};\n\nexport default VehicleQuoteEnquiryModal;","map":null,"metadata":{},"sourceType":"module"}