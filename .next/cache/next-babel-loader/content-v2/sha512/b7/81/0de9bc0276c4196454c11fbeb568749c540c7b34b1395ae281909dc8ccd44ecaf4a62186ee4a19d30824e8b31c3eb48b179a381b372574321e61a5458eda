{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm, FormContext } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nimport Modal from 'react-bootstrap/Modal';\nimport MarketingConsent from 'components/marketing-consent';\nimport PrivacyPolicyConsent from 'components/privacy-policy-consent';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/pro-regular-svg-icons\";\nimport { LeasingDealTypes } from \"enums/LeasingDealTypes\";\nimport { formatMoney } from 'helpers/currencyHelper';\nimport { PhoneNumberIsValid, EmailAddressIsValid } from 'helpers/validation';\nimport { getGAClientId } from 'helpers/analytics';\nimport { setPrivacyAccepted } from 'helpers/cookiesHelper';\nimport { GetThankYouPageUrl } from 'helpers/urlHelper';\nimport { MarketingCommunicationsService } from 'business-logic/marketingCommunicationsService';\nimport { EnquiryService } from \"business-logic/enquiryService\";\nimport { QuotesService } from 'business-logic/quotesService';\nimport { GetSalesPeople } from 'business-logic/systemService';\n\nvar VehicleQuoteEnquiryModal = function VehicleQuoteEnquiryModal(_ref) {\n  var _errors$telephone, _errors$email, _errors$ownerId, _errors$informationNo;\n\n  var title = _ref.title,\n      baseData = _ref.baseData,\n      settings = _ref.settings,\n      onRequestClose = _ref.onRequestClose,\n      otherProps = _objectWithoutProperties(_ref, [\"title\", \"baseData\", \"settings\", \"onRequestClose\"]);\n\n  var router = useRouter();\n  var methods = useForm();\n  var register = methods.register,\n      handleSubmit = methods.handleSubmit,\n      errors = methods.errors;\n  var procFee = parseFloat(process.env.NEXT_PUBLIC_PCH_PROC_FEE);\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      marketingConsentIsVerifying = _useState2[0],\n      setMarketingConsentIsVerifying = _useState2[1];\n\n  var _useState3 = useState(null),\n      emailAddressConsent = _useState3[0],\n      setEmailAddressConsent = _useState3[1];\n\n  var _useState4 = useState(settings.salesPersons || []),\n      salesPersons = _useState4[0],\n      setSalesPersons = _useState4[1];\n\n  var _useState5 = useState(false),\n      salesPersonVerificationRequired = _useState5[0],\n      setSalesPersonVerificationRequired = _useState5[1];\n\n  var _useState6 = useState(false),\n      ownerConfirmRequired = _useState6[0],\n      setOwnerConfirmRequired = _useState6[1];\n\n  var _useState7 = useState([]),\n      owners = _useState7[0],\n      setOwners = _useState7[1];\n\n  var _useState8 = useState(null),\n      owner = _useState8[0],\n      setOwner = _useState8[1];\n\n  var _useState9 = useState(1),\n      step = _useState9[0],\n      setStep = _useState9[1];\n\n  var _useState10 = useState({\n    fullName: null,\n    telephone: null,\n    email: null,\n    companyName: null,\n    ownerId: null,\n    allowedCommunicationTypes: null,\n    informationNoticeConfirmed: false\n  }),\n      formState = _useState10[0],\n      setFormState = _useState10[1]; //TODO: get salespersons with settings\n\n\n  useEffect(function () {\n    if (salesPersons.length === 0 && settings.isInternal) {\n      GetSalesPeople().then(function (result) {\n        setSalesPersons(result.data);\n      });\n    }\n  }, []);\n\n  var getTitle = function getTitle(step) {\n    var result = title;\n\n    if (step === 2) {\n      result = \"Information Notice\";\n    }\n\n    return result;\n  }; //Fires only when input loses focus and triggers marketing-consent to reinitialize\n\n\n  var handleEmailFocusOut = function handleEmailFocusOut(event) {\n    if (!settings.isInternal) {\n      if (event.target.value && EmailAddressIsValid(event.target.value)) {\n        setEmailAddressConsent(event.target.value);\n      } else {\n        setEmailAddressConsent(null);\n      }\n    }\n\n    setSalesPersonVerificationFlag();\n  };\n\n  var handleTelephoneFocusOut = function handleTelephoneFocusOut(event) {\n    setSalesPersonVerificationFlag();\n  };\n\n  var handleSalesPersonChange = function handleSalesPersonChange(event) {\n    setSalesPersonVerificationFlag();\n  };\n\n  var setSalesPersonVerificationFlag = function setSalesPersonVerificationFlag() {\n    if (settings.isInternal) {\n      setSalesPersonVerificationRequired(true);\n      setOwnerConfirmRequired(false);\n      setOwners([]);\n      setOwner(null);\n    }\n  };\n\n  var verifySalesPerson = function verifySalesPerson(salesPersonId, email, telephone) {\n    return new Promise(function (resolve) {\n      if (salesPersonVerificationRequired) {\n        setOwnerConfirmRequired(false);\n        setOwner(null);\n      }\n\n      if (salesPersonVerificationRequired && salesPersonId) {\n        QuotesService.VerifySalesPerson(salesPersonId, email, telephone).then(function (result) {\n          var stopExecutionFlag = false;\n          setSalesPersonVerificationRequired(false);\n\n          if (result.isSucceed && result.data.isRequired && result.data.salesPersons) {\n            setOwnerConfirmRequired(true);\n            var ownersList = result.data.salesPersons;\n            var existingOwner = ownersList.find(function (item) {\n              return item.isExisting;\n            });\n\n            if (existingOwner) {\n              setOwner({\n                id: existingOwner.id,\n                name: existingOwner.text\n              });\n            }\n\n            setOwners(ownersList);\n            stopExecutionFlag = true;\n          } else {\n            setOwner({\n              id: salesPersonId,\n              name: null\n            });\n          }\n\n          resolve(stopExecutionFlag);\n        });\n      } else {\n        setSalesPersonVerificationRequired(false);\n        resolve(false);\n      }\n    });\n  };\n\n  var onSubmit = function onSubmit(data) {\n    if (!isLoading && !marketingConsentIsVerifying) {\n      if (step === 1) {\n        setIsLoading(true);\n        var email = data.email;\n        var telephone = data.telephone;\n        var salesPersonId = data.salesPersonId;\n        verifySalesPerson(salesPersonId, email, telephone).then(function (verifySalesPersonStopExecutionFlag) {\n          if (verifySalesPersonStopExecutionFlag) {\n            setIsLoading(false);\n          } else {\n            var formData = {\n              fullName: data.fullName,\n              telephone: data.telephone,\n              email: data.email,\n              companyName: data.companyName,\n              ownerId: data.ownerId || data.salesPersonId || null,\n              allowedCommunicationTypes: data.allowedCommunicationTypes\n            };\n\n            if (settings.proceededToApplyForFinanceDirectly) {\n              QuotesService.CheckInformationNoticAcceptance(email, telephone).then(function (result) {\n                if (result) {\n                  setFormState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), formData);\n                  });\n                  setIsLoading(false);\n                  setStep(2);\n                } else {\n                  doSubmit(formData);\n                }\n              });\n            } else {\n              doSubmit(formData);\n            }\n          }\n        });\n      } else if (step === 2) {\n        var formData = _objectSpread({}, formState);\n\n        formData.informationNoticeConfirmed = data.informationNoticeConfirmed;\n        doSubmit(formData);\n      }\n    }\n  };\n\n  var doSubmit = function doSubmit(formData) {\n    if (formData && baseData) {\n      setIsLoading(true);\n\n      var enquiryData = _objectSpread(_objectSpread({}, baseData), {}, {\n        quoteEnquiryType: settings.proceededToApplyForFinanceDirectly ? 2 : 1,\n        isIDDAccepted: settings.proceededToApplyForFinanceDirectly && formData.informationNoticeConfirmed,\n        fullName: formData.fullName,\n        telephone: formData.telephone,\n        email: formData.email,\n        companyName: baseData.leasingDealType !== 2 ? formData.companyName : null,\n        gaClientId: getGAClientId()\n      });\n\n      if (settings.isInternal) {\n        enquiryData.salesPersonId = formData.ownerId;\n      } else {\n        enquiryData.allowedCommunicationTypes = formData.allowedCommunicationTypes || null;\n      }\n\n      EnquiryService.SubmitQuoteEnquiry(enquiryData).then(function (result) {\n        setIsLoading(false);\n\n        if (result.isSucceed && result.data) {\n          if (!settings.isInternal) {\n            var expiryDate = new Date();\n            expiryDate.setFullYear(expiryDate.getFullYear() + 1);\n\n            if (enquiryData.allowedCommunicationTypes) {\n              MarketingCommunicationsService.SetToSeenMarketingForm(enquiryData.email, expiryDate);\n            }\n\n            if (formData.privacyConfirmed) {\n              setPrivacyAccepted(expiryDate);\n            }\n          }\n\n          if (settings.proceededToApplyForFinanceDirectly) {\n            switch (enquiryData.leasingDealType.toString()) {\n              case \"1\":\n              case \"3\":\n                var url = \"/proposal_business?directfinance=1&fromconfirmquote=1&enquiryid=\" + result.data + \"&email=\" + encodeURI(enquiryData.email) + \"&fromInsuredLeasing=\" + (window.location.href.includes(\"car-leasing-with-insurance\") ? \"1\" : \"0\");\n                router.push(url);\n                break;\n\n              case \"2\":\n                var url = \"/proposal_personal?directfinance=1&fromconfirmquote=1&enquiryid=\" + result.data + \"&email=\" + encodeURI(enquiryData.email) + \"&fromInsuredLeasing=\" + (window.location.href.includes(\"car-leasing-with-insurance\") ? \"1\" : \"0\");\n                router.push(url);\n                break;\n            }\n          } else {\n            if (settings.isInternal) {\n              router.push(GetThankYouPageUrl(true));\n            } else {\n              router.push(GetThankYouPageUrl(false, \"quoteconfirm\"));\n            }\n          }\n\n          onRequestClose();\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Modal, _objectSpread(_objectSpread({\n    onHide: onRequestClose,\n    centered: true,\n    scrollable: false\n  }, otherProps), {}, {\n    children: [/*#__PURE__*/_jsx(Modal.Header, {\n      className: \"d-flex flex-nowrap justify-content-center align-items-center\",\n      closeButton: true,\n      children: /*#__PURE__*/_jsx(Modal.Title, {\n        className: \"mb-0\",\n        children: getTitle(step)\n      })\n    }), /*#__PURE__*/_jsx(Modal.Body, {\n      children: /*#__PURE__*/_jsxs(FormContext, _objectSpread(_objectSpread({}, methods), {}, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              children: \"A member of our team will contact you shortly after your submission.\"\n            })\n          })\n        }), step === 1 ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [settings.leasingMessage ? /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-24\",\n              children: /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"I\\u2019m interested in leasing of \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: settings.leasingMessage\n                })]\n              })\n            }) : null, /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                children: [\"Full Name \", /*#__PURE__*/_jsx(\"span\", {\n                  children: \"(Required)\"\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control \".concat(errors.fullName ? \"is-invalid\" : \"\"),\n                placeholder: \"First & Last Name\",\n                maxLength: 50,\n                name: \"fullName\",\n                disabled: ownerConfirmRequired,\n                ref: register({\n                  required: true\n                })\n              }), errors.fullName ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: \"Full Name is required.\"\n              }) : null]\n            }), baseData.leasingDealType !== LeasingDealTypes.Personal ? /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"Company Name\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Company Name\",\n                maxLength: 50,\n                name: \"companyName\",\n                disabled: ownerConfirmRequired,\n                ref: register()\n              })]\n            }) : null, /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                children: [\"Telephone \", /*#__PURE__*/_jsx(\"span\", {\n                  children: \"(Required)\"\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"tel\",\n                className: \"form-control \".concat(errors.telephone ? \"is-invalid\" : \"\"),\n                placeholder: \"Mobile or Home\",\n                maxLength: 20,\n                name: \"telephone\",\n                onBlur: handleTelephoneFocusOut,\n                disabled: ownerConfirmRequired,\n                ref: register({\n                  required: 'Telephone is required.',\n                  validate: function validate(value) {\n                    return PhoneNumberIsValid(value) === true || 'Please specify a valid UK phone number.';\n                  }\n                })\n              }), errors.telephone ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$telephone = errors.telephone) === null || _errors$telephone === void 0 ? void 0 : _errors$telephone.message\n              }) : null]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsxs(\"label\", {\n                children: [\"Email \", /*#__PURE__*/_jsx(\"span\", {\n                  children: \"(Required)\"\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"email\",\n                className: \"form-control \".concat(errors.email ? \"is-invalid\" : \"\"),\n                placeholder: \"E.g. johnsmith@website.co.uk\",\n                maxLength: 50,\n                name: \"email\",\n                onBlur: handleEmailFocusOut,\n                disabled: ownerConfirmRequired,\n                ref: register({\n                  required: 'Email is required.',\n                  validate: function validate(value) {\n                    return EmailAddressIsValid(value) === true || 'Email is invalid.';\n                  }\n                })\n              }), errors.email ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n              }) : null]\n            }), settings.isInternal ? /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24 col-lg-12 form-group\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"Salesperson\"\n              }), /*#__PURE__*/_jsxs(\"select\", {\n                className: \"form-control\",\n                name: \"salesPersonId\",\n                onChange: handleSalesPersonChange,\n                disabled: ownerConfirmRequired,\n                ref: register,\n                children: [/*#__PURE__*/_jsx(\"option\", {\n                  value: \"\",\n                  children: \"Please select\"\n                }), salesPersons.map(function (item) {\n                  return /*#__PURE__*/_jsx(\"option\", {\n                    value: item.id,\n                    children: item.fullName\n                  }, item.id);\n                })]\n              })]\n            }) : null]\n          }), settings.isInternal && ownerConfirmRequired ? /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24\",\n              children: [owner && owner.name ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [\"Account with these details already exists for Owner: \", owner.name]\n              }) : null, owners.map(function (item, idx) {\n                return /*#__PURE__*/_jsxs(\"div\", {\n                  children: [/*#__PURE__*/_jsx(\"input\", {\n                    type: \"radio\",\n                    className: \"d-inline mr-1\",\n                    name: \"ownerId\",\n                    id: \"salesPerson_\".concat(idx),\n                    value: item.id,\n                    defaultChecked: owner.id === item.id,\n                    ref: register({\n                      required: 'Owner is required.'\n                    })\n                  }), /*#__PURE__*/_jsx(\"label\", {\n                    className: \"d-inline\",\n                    htmlFor: \"salesPerson_\".concat(idx),\n                    children: item.text\n                  })]\n                }, item.id);\n              }), errors.ownerId ? /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$ownerId = errors.ownerId) === null || _errors$ownerId === void 0 ? void 0 : _errors$ownerId.message\n              }) : null]\n            })\n          }) : null, !settings.isInternal ? /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-24\",\n              children: [/*#__PURE__*/_jsx(MarketingConsent, {\n                emailAddress: emailAddressConsent,\n                settings: {\n                  onVerificationStart: function onVerificationStart() {\n                    setMarketingConsentIsVerifying(true);\n                  },\n                  onVerificationComplete: function onVerificationComplete() {\n                    setMarketingConsentIsVerifying(false);\n                  }\n                }\n              }), /*#__PURE__*/_jsx(PrivacyPolicyConsent, {})]\n            })\n          }) : null]\n        }) : null, step === 2 ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-24\",\n            children: [/*#__PURE__*/_jsxs(\"ul\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxs(\"li\", {\n                children: [\"We are \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: \"Leasing Options Limited\"\n                }), \", a credit intermediary for vehicle finance and insurance related products. Our registered office is \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: \"Options House, Atkin Street, Worsley, Manchester, M28 3DG\"\n                })]\n              }), /*#__PURE__*/_jsxs(\"li\", {\n                children: [\"We are authorised and regulated by the Financial Conduct Authority. Registered no: \", /*#__PURE__*/_jsx(\"strong\", {\n                  children: \"660061\"\n                }), \".\"]\n              }), /*#__PURE__*/_jsx(\"li\", {\n                children: \"We are a credit broker of vehicle finance, we are not a funder or a lender.\"\n              }), /*#__PURE__*/_jsxs(\"li\", {\n                children: [\"We charge a Processing Fee of \", formatMoney(procFee), \" including VAT which is only payable at order stage, once acceptable finance has been obtained, as a contribution to the costs incurred in processing the vehicle finance agreement. We do not charge fees for processing insurance products. Payment of the Processing Fee can be made on-line using a credit or debit card or by BACs transfer.\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-check form-check-inline privacy-agreement\",\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"checkbox\",\n                  className: \"form-check-input\",\n                  id: \"infoConfirmed\",\n                  name: \"informationNoticeConfirmed\",\n                  ref: register({\n                    validate: function validate(value) {\n                      return value === true || \"Information Notice confirmation required.\";\n                    }\n                  })\n                }), /*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"infoConfirmed\",\n                  className: errors.informationNoticeConfirmed ? \"invalid-feedback\" : null,\n                  children: \"Please respond to this 'Information Notice' confirming that you understand and acknowledge the above and that you are happy to proceed. Any delays in receiving confirmation may impact on the rates quoted.\"\n                })]\n              }), errors.informationNoticeConfirmed && /*#__PURE__*/_jsx(\"span\", {\n                className: \"invalid-feedback d-block\",\n                children: (_errors$informationNo = errors.informationNoticeConfirmed) === null || _errors$informationNo === void 0 ? void 0 : _errors$informationNo.message\n              })]\n            })]\n          })\n        }) : null, settings.showPriceWarning ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"alert alert-warning\",\n              role: \"alert\",\n              children: [/*#__PURE__*/_jsx(\"strong\", {\n                children: \"IMPORTANT:\"\n              }), \" This is an indicative price, please speak to your account manager for the exact rental.\"]\n            })\n          })\n        }) : null]\n      }))\n    }), /*#__PURE__*/_jsx(Modal.Footer, {\n      children: /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-lg\",\n        onClick: handleSubmit(onSubmit),\n        children: isLoading ? /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          width: \"16\",\n          height: \"16\",\n          icon: faSpinner,\n          className: \"fa-spin\"\n        }) : \"Submit\"\n      })\n    })]\n  }));\n};\n\nexport default VehicleQuoteEnquiryModal;","map":null,"metadata":{},"sourceType":"module"}