{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\current_project\\\\PPH\\\\tfs\\\\Website\\\\website\\\\components\\\\value-your-car\\\\modal-part-exchange.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport accounting from 'accounting';\nimport Modal from 'react-bootstrap/Modal';\nimport { useForm, FormContext } from \"react-hook-form\";\nimport style from './px.module.scss';\nimport { setPrivacyAccepted } from 'helpers/cookiesHelper';\nimport { EnquiryService } from \"business-logic/enquiryService\";\nimport { ValueYourCarService } from \"business-logic/valueYourCarService\";\nimport { MarketingCommunicationsService } from 'business-logic/marketingCommunicationsService';\nimport { VehicleTypes } from 'enums/VehicleTypes';\nimport { ValuationEnquiry } from \"types/enquiry/ValuationEnquiry\";\nimport { PhoneNumberIsValid, EmailAddressIsValid } from 'helpers/validation';\nimport { getGAClientId } from 'helpers/analytics';\nimport ModalContext from 'components/HOCs/modal/modalContext';\nimport MarketingConsent from 'components/marketing-consent';\nimport PrivacyPolicyConsent from 'components/privacy-policy-consent';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/pro-regular-svg-icons\";\nimport Search from 'components/search';\nimport { GetThankYouPageUrl } from 'helpers/urlHelper';\nimport { useRouter } from 'next/router';\nimport { GetSalesPeople } from 'business-logic/systemService';\nimport { GetModels } from 'business-logic/vehicleService';\n\nfunction mapStateToProps(state) {\n  return {\n    carManufacturerList: state.carManufacturerList\n  };\n}\n\nconst ModalPartExchange = (_ref) => {\n  var _errors$mileage, _errors$email, _errors$telephone;\n\n  let {\n    isInternal,\n    onRequestClose,\n    registration = '',\n    carManufacturerList\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"isInternal\", \"onRequestClose\", \"registration\", \"carManufacturerList\"]);\n\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: marketingConsentIsVerifying,\n    1: setMarketingConsentIsVerifying\n  } = useState(false);\n  const {\n    0: emailAddressConsent,\n    1: setEmailAddressConsent\n  } = useState(null);\n  const router = useRouter();\n  const {\n    0: modelsList,\n    1: setModelsList\n  } = useState([]);\n  const {\n    0: selectedMake,\n    1: setSelectedMake\n  } = useState(null);\n  const {\n    0: salesPeopleList,\n    1: setSalesPeopleList\n  } = useState([]);\n  const {\n    0: valuationData,\n    1: setValuationData\n  } = useState(null); //used later to close current dialog and open searh\n\n  const modalContext = useContext(ModalContext);\n  const methods = useForm();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = methods;\n  useEffect(() => {\n    GetSalesPeople().then(result => {\n      setSalesPeopleList(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedMake) {\n      GetModels(VehicleTypes.Car, selectedMake).then(data => {\n        setModelsList(data.data);\n      });\n    } else {\n      setModelsList([]);\n    }\n  }, [selectedMake]);\n\n  const onMakeSelected = evt => {\n    setSelectedMake(evt.target.value);\n  }; //Fires only when input loses focus and triggers marketing-consent to reinitialize\n\n\n  const onEmailFocusOut = event => {\n    if (!isInternal) {\n      if (event.target.value && EmailAddressIsValid(event.target.value)) {\n        setEmailAddressConsent(event.target.value);\n      } else {\n        setEmailAddressConsent(null);\n      }\n    }\n  };\n\n  const handleSearchClick = evt => {\n    modalContext.hideModal();\n    modalContext.showModal(Search, {\n      show: true,\n      title: \"Start Your Search\"\n    });\n  };\n\n  const onSubmit = data => {\n    setIsLoading(false);\n\n    if (!isLoading && !marketingConsentIsVerifying) {\n      setIsLoading(true); //Send valuation request\n\n      var request = {\n        vrm: data.vrm,\n        mileage: data.mileage,\n        fullName: data.fullName,\n        telephone: data.telephone,\n        email: data.email,\n        postCode: data.postCode\n      };\n      var promise = new Promise(resolve => {\n        ValueYourCarService.GetValuation(request).then(valuationResult => {\n          var _valuationResult$data;\n\n          if (valuationResult !== null && valuationResult !== void 0 && (_valuationResult$data = valuationResult.data) !== null && _valuationResult$data !== void 0 && _valuationResult$data.id) {\n            setValuationData(valuationResult.data);\n            let communicationTypes = null; //Should check if form was visible or user did any updates to those fields\n            //If no form is displayed data.contactEmail and other checkbox properties are \"undefined\"\n\n            if (!isInternal && data.contactEmail != undefined && data.allowedCommunicationTypes) {\n              communicationTypes = data.allowedCommunicationTypes;\n            }\n\n            const enquiry = new ValuationEnquiry();\n            enquiry.vrm = data.vrm;\n            enquiry.mileage = data.mileage;\n            enquiry.fullName = data.fullName;\n            enquiry.telephone = data.telephone;\n            enquiry.email = data.email;\n            enquiry.postCode = data.postCode;\n            enquiry.allowedCommunicationTypes = communicationTypes;\n            enquiry.valuationCap = valuationResult.data.cap;\n            enquiry.valuationId = valuationResult.data.id;\n            enquiry.valuationValue = valuationResult.data.value;\n            enquiry.make = data.make.replace(\"-\", \" \");\n            enquiry.model = data.model.replace(\"-\", \" \");\n            enquiry.salesPersonId = isInternal ? data.salesPersonId : null;\n            enquiry.gaClientId = getGAClientId();\n            EnquiryService.SubmitValuationEnquiry(enquiry).then(result => {\n              //TODO; check is required\n              if (result.data) {\n                if (!isInternal) {\n                  let expiryDate = new Date();\n                  expiryDate.setFullYear(expiryDate.getFullYear() + 1);\n\n                  if (data.privacyConfirmed) {\n                    setPrivacyAccepted(expiryDate);\n                  }\n\n                  if (communicationTypes) {\n                    MarketingCommunicationsService.SetToSeenMarketingForm(data.email, expiryDate);\n                  }\n                }\n\n                resolve(true);\n              } else {\n                resolve(false);\n              }\n            });\n          } else {\n            setValuationData(null);\n            resolve(false);\n          }\n        });\n      });\n      promise.then(result => {\n        //do nothing\n        router.push(GetThankYouPageUrl(false, \"valuation\"));\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, _objectSpread(_objectSpread({\n      onHide: onRequestClose,\n      centered: true\n    }, otherProps), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"d-flex flex-nowrap justify-content-center align-items-center\",\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"text-left mb-0\",\n          children: valuationData == null ? \"Value Your Part Exchange\" : \"Your Valuation Is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: `${style['px']}`,\n        children: /*#__PURE__*/_jsxDEV(FormContext, _objectSpread(_objectSpread({}, methods), {}, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"px-md-3\",\n            onSubmit: handleSubmit(onSubmit),\n            children: [valuationData == null && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-4\",\n                children: [\"We and our partners will give you a fair value for your part-exchange.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 127\n                }, this), \"You can even have it collected for FREE!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Simply enter the number plate of the car you'd like a valuation for below.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"yourReg\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: `${style[\"your-registration\"]} ${errors.vrm ? style['is-invalid'] : \"\"}`,\n                      type: \"text\",\n                      placeholder: \"ENTER YOUR REG\",\n                      defaultValue: registration,\n                      maxLength: 10,\n                      name: \"vrm\",\n                      ref: register({\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 45\n                  }, this), errors.vrm && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"This field is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 60\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: `form-control ${errors.mileage ? \"is-invalid\" : \"\"}`,\n                    placeholder: \"Enter Your Current Mileage (required)\",\n                    maxLength: 10,\n                    name: \"mileage\",\n                    ref: register({\n                      required: {\n                        value: true,\n                        message: \"This field is required\"\n                      },\n                      pattern: {\n                        value: /^\\d+$/,\n                        message: \"A valid numeric value is expected\"\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 45\n                  }, this), errors.mileage && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: (_errors$mileage = errors.mileage) === null || _errors$mileage === void 0 ? void 0 : _errors$mileage.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 64\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"I'm interested in leasing:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Make \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: `form-control ${errors.make ? \"is-invalid\" : \"\"}`,\n                    onChange: evt => onMakeSelected(evt),\n                    name: \"make\",\n                    ref: register({\n                      required: true\n                    }),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"- Select Make -\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 49\n                    }, this), carManufacturerList === null || carManufacturerList === void 0 ? void 0 : carManufacturerList.map(make => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: make.id,\n                      children: make.text\n                    }, make.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 54\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this), errors.make && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"This field is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Model \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 58\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: `form-control ${errors.model ? \"is-invalid\" : \"\"}`,\n                    name: \"model\",\n                    ref: register({\n                      required: true\n                    }),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"- Select Model -\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 49\n                    }, this), modelsList === null || modelsList === void 0 ? void 0 : modelsList.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: model.id,\n                      children: model.text\n                    }, model.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 54\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 45\n                  }, this), errors.model && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"This field is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Full Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 62\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    placeholder: \"Full Name\",\n                    maxLength: 100,\n                    name: \"fullName\",\n                    ref: register({\n                      required: true\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 45\n                  }, this), errors.fullName && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"This field is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 58\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: `form-control ${errors.email ? \"is-invalid\" : \"\"}`,\n                    placeholder: \"Email\",\n                    maxLength: 70,\n                    name: \"email\",\n                    onBlur: onEmailFocusOut,\n                    ref: register({\n                      required: 'This field is required',\n                      validate: value => EmailAddressIsValid(value) === true || 'Invalid email address'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 45\n                  }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Telephone \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 62\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"tel\",\n                    className: `form-control ${errors.telephone ? \"is-invalid\" : \"\"}`,\n                    placeholder: \"Telephone\",\n                    maxLength: 50,\n                    name: \"telephone\",\n                    ref: register({\n                      required: 'This field is required',\n                      validate: value => PhoneNumberIsValid(value) === true || 'Invalid phone number'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 45\n                  }, this), errors.telephone && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: (_errors$telephone = errors.telephone) === null || _errors$telephone === void 0 ? void 0 : _errors$telephone.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Post Code \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: style[\"required\"],\n                      children: \"(Required)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 62\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: `form-control ${errors.postCode ? \"is-invalid\" : \"\"}`,\n                    placeholder: \"Post Code\",\n                    maxLength: 10,\n                    name: \"postCode\",\n                    ref: register({\n                      required: true\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 45\n                  }, this), errors.postCode && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"This field is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 37\n              }, this), isInternal && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24 col-lg-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Salesperson \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-control\",\n                    name: \"salesPersonId\",\n                    ref: register(),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"- Select Salesperson -\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 53\n                    }, this), salesPeopleList === null || salesPeopleList === void 0 ? void 0 : salesPeopleList.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: user.id,\n                      children: user.fullName\n                    }, user.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 58\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 41\n              }, this), !isInternal ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-24\",\n                  children: [/*#__PURE__*/_jsxDEV(MarketingConsent, {\n                    emailAddress: emailAddressConsent,\n                    settings: {\n                      onVerificationStart: () => {\n                        setMarketingConsentIsVerifying(true);\n                      },\n                      onVerificationComplete: () => {\n                        setMarketingConsentIsVerifying(false);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(PrivacyPolicyConsent, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 45\n              }, this) : null]\n            }, void 0, true), valuationData != null && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-24\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style[\"valuation-result\"],\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fal fa-gbp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    dangerouslySetInnerHTML: {\n                      __html: accounting.formatMoney(valuationData.value)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 75\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This is an approximate value dependant on the condition, exact mileage, service history and other factors. To take this further or accept this please click on the link below.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"The amount you get may be more or less dependent on the factors mentioned above. Have you been offered more elsewhere? Tell our team!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-24 d-flex justify-content-center justify-content-md-end\",\n            children: [valuationData == null && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary btn-lg\",\n              onClick: handleSubmit(onSubmit),\n              children: isLoading ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                width: \"16\",\n                height: \"16\",\n                icon: faSpinner,\n                className: \"fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 50\n              }, this) : \"Get Valuation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this), valuationData != null && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary btn-lg\",\n              onClick: evt => handleSearchClick(evt),\n              children: \"Ready to find a new car?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this); //}\n};\n\nexport default connect(mapStateToProps)(ModalPartExchange);","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/website/components/value-your-car/modal-part-exchange.tsx"],"names":["React","useState","useEffect","useContext","connect","accounting","Modal","useForm","FormContext","style","setPrivacyAccepted","EnquiryService","ValueYourCarService","MarketingCommunicationsService","VehicleTypes","ValuationEnquiry","PhoneNumberIsValid","EmailAddressIsValid","getGAClientId","ModalContext","MarketingConsent","PrivacyPolicyConsent","FontAwesomeIcon","faSpinner","Search","GetThankYouPageUrl","useRouter","GetSalesPeople","GetModels","mapStateToProps","state","carManufacturerList","ModalPartExchange","isInternal","onRequestClose","registration","otherProps","isLoading","setIsLoading","marketingConsentIsVerifying","setMarketingConsentIsVerifying","emailAddressConsent","setEmailAddressConsent","router","modelsList","setModelsList","selectedMake","setSelectedMake","salesPeopleList","setSalesPeopleList","valuationData","setValuationData","modalContext","methods","register","handleSubmit","errors","then","result","data","catch","error","console","log","Car","onMakeSelected","evt","target","value","onEmailFocusOut","event","handleSearchClick","hideModal","showModal","show","title","onSubmit","request","vrm","mileage","fullName","telephone","email","postCode","promise","Promise","resolve","GetValuation","valuationResult","id","communicationTypes","contactEmail","undefined","allowedCommunicationTypes","enquiry","valuationCap","cap","valuationId","valuationValue","make","replace","model","salesPersonId","gaClientId","SubmitValuationEnquiry","expiryDate","Date","setFullYear","getFullYear","privacyConfirmed","SetToSeenMarketingForm","push","finally","required","message","pattern","map","text","validate","user","onVerificationStart","onVerificationComplete","__html","formatMoney"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport accounting from 'accounting';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useForm, FormContext } from \"react-hook-form\";\r\nimport style from './px.module.scss';\r\n\r\nimport { setPrivacyAccepted } from 'helpers/cookiesHelper';\r\nimport { EnquiryService } from \"business-logic/enquiryService\";\r\nimport { ValueYourCarService } from \"business-logic/valueYourCarService\";\r\nimport { MarketingCommunicationsService } from 'business-logic/marketingCommunicationsService';\r\n\r\nimport { VehicleTypes } from 'enums/VehicleTypes';\r\nimport { ContactRequestTypes } from \"enums/ContactRequestTypes\"\r\nimport { GetValuationRequest } from \"types/value-your-car/GetValuationRequest\";\r\nimport { ValuationEnquiry } from \"types/enquiry/ValuationEnquiry\";\r\nimport { PhoneNumberIsValid, EmailAddressIsValid } from 'helpers/validation';\r\nimport { getGAClientId } from 'helpers/analytics';\r\nimport ModalContext from 'components/HOCs/modal/modalContext';\r\n\r\nimport MarketingConsent from 'components/marketing-consent';\r\nimport PrivacyPolicyConsent from 'components/privacy-policy-consent';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/pro-regular-svg-icons\";\r\nimport Search from 'components/search';\r\nimport { Make } from 'types/Make';\r\nimport { GetThankYouPageUrl } from 'helpers/urlHelper';\r\nimport { useRouter } from 'next/router';\r\nimport { GetSalesPeople } from 'business-logic/systemService';\r\nimport { GetModels } from 'business-logic/vehicleService';\r\n\r\ntype Props = {\r\n    isInternal: boolean;\r\n    onRequestClose: any,\r\n    registration?: string,\r\n    carManufacturerList: Array<Make>,\r\n}\r\n\r\ntype ValuationResult = {\r\n    cap: any,\r\n    id: any,\r\n    value: any\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        carManufacturerList: state.carManufacturerList,\r\n    };\r\n}\r\n\r\nconst ModalPartExchange: React.FC<Props> = ({ isInternal, onRequestClose, registration = '', carManufacturerList, ...otherProps }) => {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [marketingConsentIsVerifying, setMarketingConsentIsVerifying] = useState<boolean>(false);\r\n    const [emailAddressConsent, setEmailAddressConsent] = useState<string>(null);\r\n    const router = useRouter();\r\n\r\n    const [modelsList, setModelsList] = useState([]);\r\n    const [selectedMake, setSelectedMake] = useState(null);\r\n    const [salesPeopleList, setSalesPeopleList] = useState([]);\r\n\r\n    const [valuationData, setValuationData] = useState<ValuationResult>(null);\r\n\r\n    //used later to close current dialog and open searh\r\n    const modalContext = useContext(ModalContext);\r\n\r\n\r\n    const methods = useForm();\r\n    const { register, handleSubmit, errors } = methods;\r\n\r\n    useEffect(() => {\r\n        GetSalesPeople()\r\n            .then(result => {\r\n                setSalesPeopleList(result.data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedMake) {\r\n            GetModels(VehicleTypes.Car, selectedMake).then((data) => {\r\n                setModelsList(data.data);\r\n            });\r\n        }\r\n        else {\r\n            setModelsList([]);\r\n        }\r\n    }, [selectedMake]);\r\n\r\n\r\n    const onMakeSelected = (evt) => {\r\n        setSelectedMake(evt.target.value);\r\n    }\r\n\r\n    //Fires only when input loses focus and triggers marketing-consent to reinitialize\r\n    const onEmailFocusOut = (event) => {\r\n        if (!isInternal) {\r\n            if (event.target.value && EmailAddressIsValid(event.target.value)) {\r\n                setEmailAddressConsent(event.target.value);\r\n            } else {\r\n                setEmailAddressConsent(null);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSearchClick = (evt) => {\r\n        modalContext.hideModal();\r\n        modalContext.showModal(Search, { show: true, title: \"Start Your Search\" })\r\n    }\r\n\r\n    const onSubmit = data => {\r\n        setIsLoading(false);\r\n\r\n        if (!isLoading && !marketingConsentIsVerifying) {\r\n            setIsLoading(true);\r\n\r\n            //Send valuation request\r\n            var request: GetValuationRequest = {\r\n                vrm: data.vrm,\r\n                mileage: data.mileage,\r\n                fullName: data.fullName,\r\n                telephone: data.telephone,\r\n                email: data.email,\r\n                postCode: data.postCode\r\n            }\r\n\r\n            var promise = new Promise(resolve => {\r\n\r\n                ValueYourCarService.GetValuation(request).then(valuationResult => {\r\n\r\n                    if (valuationResult?.data?.id) {\r\n                        setValuationData(valuationResult.data);\r\n\r\n                        let communicationTypes: number[] = null;\r\n                        //Should check if form was visible or user did any updates to those fields\r\n                        //If no form is displayed data.contactEmail and other checkbox properties are \"undefined\"\r\n                        if (!isInternal && data.contactEmail != undefined && data.allowedCommunicationTypes) {\r\n                            communicationTypes = data.allowedCommunicationTypes;\r\n                        }\r\n\r\n                        const enquiry: ValuationEnquiry = new ValuationEnquiry();\r\n                        enquiry.vrm = data.vrm;\r\n                        enquiry.mileage = data.mileage;\r\n                        enquiry.fullName = data.fullName;\r\n                        enquiry.telephone = data.telephone;\r\n                        enquiry.email = data.email;\r\n                        enquiry.postCode = data.postCode;\r\n                        enquiry.allowedCommunicationTypes = communicationTypes;\r\n\r\n                        enquiry.valuationCap = valuationResult.data.cap;\r\n                        enquiry.valuationId = valuationResult.data.id;\r\n                        enquiry.valuationValue = valuationResult.data.value;\r\n                        enquiry.make = data.make.replace(\"-\", \" \");\r\n                        enquiry.model = data.model.replace(\"-\", \" \");\r\n                        enquiry.salesPersonId = isInternal ? data.salesPersonId : null;\r\n                        enquiry.gaClientId = getGAClientId();\r\n\r\n                        EnquiryService.SubmitValuationEnquiry(enquiry)\r\n                            .then(result => {\r\n                                //TODO; check is required\r\n                                if (result.data) {\r\n                                    if (!isInternal) {\r\n                                        let expiryDate = new Date();\r\n                                        expiryDate.setFullYear(expiryDate.getFullYear() + 1);\r\n\r\n                                        if (data.privacyConfirmed) {\r\n                                            setPrivacyAccepted(expiryDate);\r\n                                        }\r\n\r\n                                        if (communicationTypes) {\r\n                                            MarketingCommunicationsService.SetToSeenMarketingForm(data.email, expiryDate);\r\n                                        }\r\n                                    }\r\n\r\n                                    resolve(true);\r\n                                }\r\n                                else {\r\n                                    resolve(false);\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        setValuationData(null);\r\n                        resolve(false);\r\n                    }\r\n                });\r\n            });\r\n\r\n            promise.then(result => {\r\n                //do nothing\r\n\r\n                router.push(GetThankYouPageUrl(false, \"valuation\"));\r\n\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal onHide={onRequestClose} centered={true} {...otherProps}>\r\n                <Modal.Header className=\"d-flex flex-nowrap justify-content-center align-items-center\" closeButton>\r\n                    <Modal.Title className=\"text-left mb-0\">{valuationData == null ? \"Value Your Part Exchange\" : \"Your Valuation Is:\"}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className={`${style['px']}`}>\r\n                    <FormContext {...methods}>\r\n                        <form className=\"px-md-3\" onSubmit={handleSubmit(onSubmit)}>\r\n                            {valuationData == null &&\r\n                                <>\r\n                                    <p className=\"mb-4\">We and our partners will give you a fair value for your part-exchange.<br />You can even have it collected for FREE!</p>\r\n                                    <p>Simply enter the number plate of the car you'd like a valuation for below.</p>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <div id=\"yourReg\">\r\n                                                <input className={`${style[\"your-registration\"]} ${errors.vrm ? style['is-invalid'] : \"\"}`} type=\"text\" placeholder=\"ENTER YOUR REG\" defaultValue={registration} maxLength={10} name=\"vrm\" ref={register({ required: true })} />\r\n                                            </div>\r\n                                            {errors.vrm && <span className=\"invalid-feedback d-block\">This field is required</span>}\r\n                                        </div>\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <input type=\"text\" className={`form-control ${errors.mileage ? \"is-invalid\" : \"\"}`} placeholder=\"Enter Your Current Mileage (required)\" maxLength={10} name=\"mileage\"\r\n                                                ref={register(\r\n                                                    {\r\n                                                        required: {\r\n                                                            value: true,\r\n                                                            message: \"This field is required\"\r\n                                                        },\r\n                                                        pattern: {\r\n                                                            value: /^\\d+$/,\r\n                                                            message: \"A valid numeric value is expected\"\r\n                                                        }\r\n                                                    })\r\n                                                } />\r\n                                            {errors.mileage && <span className=\"invalid-feedback d-block\">{errors.mileage?.message}</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <h3>I'm interested in leasing:</h3>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <label>Make <span className={style[\"required\"]}>(Required)</span></label>\r\n                                            <select className={`form-control ${errors.make ? \"is-invalid\" : \"\"}`} onChange={(evt) => onMakeSelected(evt)} name=\"make\" ref={register({ required: true })} >\r\n                                                <option value=\"\">- Select Make -</option>\r\n                                                {carManufacturerList?.map(make =>\r\n                                                    (<option key={make.id} value={make.id}>{make.text}</option>)\r\n                                                )}\r\n                                            </select>\r\n                                            {errors.make && <span className=\"invalid-feedback d-block\">This field is required</span>}\r\n                                        </div>\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <label>Model <span className={style[\"required\"]}>(Required)</span></label>\r\n                                            <select className={`form-control ${errors.model ? \"is-invalid\" : \"\"}`} name=\"model\" ref={register({ required: true })} >\r\n                                                <option value=\"\">- Select Model -</option>\r\n                                                {modelsList?.map(model =>\r\n                                                    (<option key={model.id} value={model.id}>{model.text}</option>)\r\n                                                )}\r\n                                            </select>\r\n                                            {errors.model && <span className=\"invalid-feedback d-block\">This field is required</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <label>Full Name <span className={style[\"required\"]}>(Required)</span></label>\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Full Name\" maxLength={100} name=\"fullName\" ref={register({ required: true })} />\r\n                                            {errors.fullName && <span className=\"invalid-feedback d-block\">This field is required</span>}\r\n                                        </div>\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <label>Email <span className={style[\"required\"]}>(Required)</span></label>\r\n                                            <input type=\"text\" className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`} placeholder=\"Email\" maxLength={70} name=\"email\"\r\n                                                onBlur={onEmailFocusOut}\r\n                                                ref={register({\r\n                                                    required: 'This field is required',\r\n                                                    validate: value => EmailAddressIsValid(value) === true || 'Invalid email address'\r\n                                                })}\r\n                                            />\r\n                                            {errors.email && <span className=\"invalid-feedback d-block\">{errors.email?.message}</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <label>Telephone <span className={style[\"required\"]}>(Required)</span></label>\r\n                                            <input type=\"tel\" className={`form-control ${errors.telephone ? \"is-invalid\" : \"\"}`} placeholder=\"Telephone\" maxLength={50} name=\"telephone\"\r\n                                                ref={register({\r\n                                                    required: 'This field is required',\r\n                                                    validate: value => PhoneNumberIsValid(value) === true || 'Invalid phone number'\r\n                                                })}\r\n                                            />\r\n                                            {errors.telephone && <span className=\"invalid-feedback d-block\">{errors.telephone?.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-24 col-lg-12 form-group\">\r\n                                            <label>Post Code <span className={style[\"required\"]}>(Required)</span></label>\r\n                                            <input type=\"text\" className={`form-control ${errors.postCode ? \"is-invalid\" : \"\"}`} placeholder=\"Post Code\" maxLength={10} name=\"postCode\" ref={register({ required: true })} />\r\n                                            {errors.postCode && <span className=\"invalid-feedback d-block\">This field is required</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        isInternal &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-24 col-lg-12 form-group\">\r\n                                                <label>Salesperson </label>\r\n                                                <select className=\"form-control\" name=\"salesPersonId\" ref={register()}>\r\n                                                    <option value=\"\">- Select Salesperson -</option>\r\n                                                    {salesPeopleList?.map(user =>\r\n                                                        (<option key={user.id} value={user.id}>{user.fullName}</option>)\r\n                                                    )}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {!isInternal ?\r\n                                        (\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-24\">\r\n                                                    <MarketingConsent\r\n                                                        emailAddress={emailAddressConsent}\r\n                                                        settings={{\r\n                                                            onVerificationStart: () => {\r\n                                                                setMarketingConsentIsVerifying(true);\r\n                                                            },\r\n                                                            onVerificationComplete: () => {\r\n                                                                setMarketingConsentIsVerifying(false);\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <PrivacyPolicyConsent />\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            {\r\n                                valuationData != null &&\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-24\">\r\n                                        <div className={style[\"valuation-result\"]}>\r\n                                            <i className=\"fal fa-gbp\"></i><span dangerouslySetInnerHTML={{ __html: accounting.formatMoney(valuationData.value) }}></span>\r\n                                        </div>\r\n                                        <p>This is an approximate value dependant on the condition, exact mileage, service history and other factors. To take this further or accept this please click on the link below.</p>\r\n                                        <p>The amount you get may be more or less dependent on the factors mentioned above. Have you been offered more elsewhere? Tell our team!</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </form>\r\n                    </FormContext>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"w-100 row\">\r\n                        <div className=\"col-24 d-flex justify-content-center justify-content-md-end\">\r\n                            {\r\n                                valuationData == null &&\r\n                                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={handleSubmit(onSubmit)}>\r\n                                    {isLoading ? <FontAwesomeIcon width=\"16\" height=\"16\" icon={faSpinner} className=\"fa-spin\" /> : \"Get Valuation\"}\r\n                                </button>\r\n                            }\r\n                            {\r\n                                valuationData != null &&\r\n                                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={(evt) => handleSearchClick(evt)}>Ready to find a new car?</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n    //}\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps)(ModalPartExchange);"]},"metadata":{},"sourceType":"module"}