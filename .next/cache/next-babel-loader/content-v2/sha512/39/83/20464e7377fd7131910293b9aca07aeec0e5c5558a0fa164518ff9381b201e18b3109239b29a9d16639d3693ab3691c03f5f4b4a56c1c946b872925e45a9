{"ast":null,"code":"import { PricingTypes } from 'enums/PricingTypes';\nimport { isNullOrWhiteSpace } from 'helpers/stringHelper';\nimport { getUrl } from 'helpers/urlsHelper';\nimport { getApiResponse } from \"helpers/apiResponseHelper\";\nimport CollectionsHelper from \"helpers/collectionsHelper\";\nimport { SiteSettings } from \"environment/siteSettings\";\n\nconst queryString = require('query-string'); // Work out a way to implement cleaner + error handling global approach\n\n\nexport const GetMakesAPI = async (vehicleType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/manufacturers', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetAllMakesAPI = async fetchHeaders => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/manufacturers', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetVehiclePricesDetailsAPI = async (payload, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclepricesdetails?' + queryString.stringify(payload), fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetVehicleCheapestPriceTermAPI = async (vehicleRef, leasingDealType, maintenance, mileage, initialRentalMonths, pricingData, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + \"/\" + leasingDealType + \"/\" + maintenance + \"/\" + mileage + \"/\" + initialRentalMonths + \"/cheapestpriceterm?\" + queryString.stringify(pricingData), fetchHeaders);\n  return getApiResponse(res);\n};\nexport const getTopVehiclesAPI = async (leaseDealType, take, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopvehicles?leasingDealType=' + leaseDealType + '&take=' + take, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelsAPI = async (vehicleType, manufacturerUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/shortmodels', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetManufacturersModelsAPI = async fetchHeaders => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/manufacturers/models', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetManufacturersModelsGarageAPI = async (vehicleType, manufacturerUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/models', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelsTrimsGarageAPI = async (vehicleType, manufacturerUrl, shortModTextUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/derivatives', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetTrimLevelsAPI = async (vehicleType, manufacturerUrl, shortModTextUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/trimlevels', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleAlternativeModelsAPI = async (vehicleType, manufacturerUrl, shortModTextUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/alternativemodels?take=10', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleGarageAPI = async (vehicleRef, leaseDealType, options, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + '/' + leaseDealType + '/customized';\n\n  if (options) {\n    url += \"?\" + queryString.stringify(options, {\n      skipNull: true\n    });\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetCapIdAPI = async (manufacturerUrl, modelUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclecapid?manufacturerUrl=' + manufacturerUrl + '&shortModelUrl=' + modelUrl + '&modelUrl=', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleModelPreviewsAPI = async (vehiclesFilter, paginationCriteria, sortingCriteria, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclemodelpreviews?' + queryString.stringify(vehiclesFilter, {\n    skipNull: true\n  });\n\n  if (paginationCriteria) {\n    url += \"&\" + queryString.stringify(paginationCriteria, {\n      skipNull: true\n    });\n  }\n\n  if (sortingCriteria) {\n    url += \"&\" + queryString.stringify(sortingCriteria, {\n      skipNull: true\n    });\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehiclePreviewsAPI = async (vehiclesFilter, paginationCriteria, sortingCriteria, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclepreviews?' + queryString.stringify(vehiclesFilter, {\n    skipNull: true\n  }, fetchHeaders);\n\n  if (paginationCriteria) {\n    url += \"&\" + queryString.stringify(paginationCriteria, {\n      skipNull: true\n    });\n  }\n\n  if (sortingCriteria) {\n    url += \"&\" + queryString.stringify(sortingCriteria, {\n      skipNull: true\n    });\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetRecommendedForModelAPI = async (pricingType, postcode, vehicleType, leaseDealType, manufacturerUrl, modelUrl, fetchHeaders) => {\n  let mileage = SiteSettings.GetVehicleTypeDefaultMileage(vehicleType);\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/getrecommendedformodel?pricingType=' + pricingType + '&postcode=' + postcode + '&vehicleType=' + vehicleType + '&leasingDealType=' + leaseDealType + '&initialRentals=6&mileage=' + mileage + '&maintenance=false&manufacturerUrl=' + manufacturerUrl + '&shortModTextUrl=' + modelUrl, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetTopLoPickVehiclesAPI = async (vehicleType, manufacturerUrl, pricingType, postcode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettoplopickvehicles?pricingType=' + pricingType + '&postcode=' + postcode + '&vehicleType=' + vehicleType + '&manufacturer=' + manufacturerUrl, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetTopScoredVehiclesAPI = async (pricingType, vehicleType, postcode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopscoredvehicles?pricingType=' + pricingType + '&vehicleType=' + vehicleType + '&postcode=' + postcode, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleDenotationsAPI = async (manufacturerUrl, modelUrl = null, maintenance = null, fetchHeaders) => {\n  // implement generic approach for query params next\n  var obj = {\n    modelUrl: modelUrl,\n    maintenance: maintenance\n  };\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicledenotations/' + manufacturerUrl + \"?\" + queryString.stringify(obj), fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetTopSpecialOffersAPI = async (vehicleType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopspecialoffers?vehicleType=' + vehicleType, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecialOffersGroupedAPI = async (vehicleType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialoffers/grouped/' + vehicleType, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetPricingMatrixAPI = async (vehicleRef, pricingType, postcode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + '/pricingmatrix?pricingType=' + pricingType + '&postcode=' + postcode, fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetDealDataAPI = async (vehicleRef, term, mileage, initialRentalMonths, dealType, maintenance, pricingType, postcode, fetchHeaders) => {\n  const url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + `api/vehicles/vehicle/${vehicleRef}/${dealType}/deal?term=${term}&mileage=${mileage}&initialRentalMonths=${initialRentalMonths}&maintenance=${maintenance}&pricingType=${pricingType}&postcode=${postcode}`;\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelReviewAPI = async (vehicleType, manufacturerUrl, shortModelUrl, modelUrl = null, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleType + '/' + manufacturerUrl + '/' + shortModelUrl + '/review';\n\n  if (!isNullOrWhiteSpace(modelUrl)) {\n    url += \"?model=\" + modelUrl;\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelGalleryImagesAPI = async (vehicleType, capId, width, height, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicleimages/info/' + vehicleType + '/' + capId + '/' + width + '/' + height + '/gallery', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleModelDealsSummaryAPI = async (manufacturerUrl, modelUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + manufacturerUrl + '/' + modelUrl + '/dealssummary', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleImageAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicleimages/info/' + vehicleType + '/' + capId + '/image', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleInfoAPI = async (vehicleRef, pricingType = null, postcode = null, includeImages = false, includePriceRanges = false, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehiclebase/' + vehicleRef;\n\n  if (includeImages || includePriceRanges) {\n    let obj = {\n      images: includeImages ? \"true\" : \"false\",\n      priceRanges: includePriceRanges ? \"true\" : \"false\"\n    };\n    url += \"?\" + queryString.stringify(obj);\n  }\n\n  let queryParts = [];\n\n  if (pricingType && (pricingType === PricingTypes.Atc || pricingType === PricingTypes.Standard)) {\n    queryParts.push(`pricingtype=${pricingType}`);\n  }\n\n  if (!isNullOrWhiteSpace(postcode)) {\n    queryParts.push(`postcode=${postcode}`);\n  }\n\n  url = getUrl(url, queryParts);\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecOptionsAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedspecifications', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetExtraOptionsAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedextraoptions', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetTechOptionsAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedtechdata', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetAvailableMakesAPI = async (pricingType, postCode, leaseDealType, vehicleType, term, initialRentals, mileage, fuelType, transmission, co2, mpg, doors, seats, driveTrain, vehicleSize, vehicleStyle, engineSize, priceFrom, priceTo, isInStock, isSpecial, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/availablemakes?pricingType=' + pricingType + '&postcode=' + postCode + '&leasingDealType=' + leaseDealType + '&vehicleType=' + vehicleType + '&term=' + term + '&initialRentals=' + initialRentals + '&mileage=' + mileage + '&fuelType=' + fuelType + '&transmission=' + transmission + '&co2=' + co2 + '&mpg=' + mpg + '&doors=' + doors + '&seats=' + seats + '&driveTrain=' + driveTrain + '&vehicleSize=' + vehicleSize + '&vehicleStyle=' + vehicleStyle + '&engineSize=' + engineSize + '&priceFrom=' + priceFrom + '&priceTo=' + priceTo + '&isInStock=' + isInStock + '&isSpecial=' + isSpecial, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetAvailableShortModelsAPI = async (vehiclesFilter, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/availableshortmodels?' + queryString.stringify(vehiclesFilter, {\n    skipNull: true\n  }, fetchHeaders));\n  const data = await res.json();\n  return data;\n};\nexport const GetVehiclesFilterOptionsAPI = async (leaseDealType, vehicleType, manufacturerUrl, modelUrl, shortDerTextUrl, term, initialRentals, mileage, fuelType, transmission, co2, mpg, doors, seats, driveTrain, vehicleSize, vehicleStyle, engineSize, priceFrom, priceTo, isInStock, isSpecial, pricingType, postCode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclesfilteroptions?pricingType=' + pricingType + '&postcode=' + postCode + '&leasingDealType=' + leaseDealType + '&vehicleType=' + vehicleType + '&manufacturerUrl=' + manufacturerUrl + '&shortModTextUrl=' + modelUrl + '&shortDerTextUrl=' + shortDerTextUrl + '&term=' + term + '&initialRentals=' + initialRentals + '&mileage=' + mileage + '&fuelType=' + fuelType + '&transmission=' + transmission + '&co2=' + co2 + '&mpg=' + mpg + '&doors=' + doors + '&seats=' + seats + '&driveTrain=' + driveTrain + '&vehicleSize=' + vehicleSize + '&vehicleStyle=' + vehicleStyle + '&engineSize=' + engineSize + '&priceFrom=' + priceFrom + '&priceTo=' + priceTo + '&isInStock=' + isInStock + '&isSpecial=' + isSpecial, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetShortTermDealsAPI = async (vehicleType, leaseDealType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + '/api/shorttermdeals/list?filter[vehicleType]=' + vehicleType + '&filter[leasingDealType]=' + leaseDealType, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSearchResultsAPI = async (searchQuery, isInternal = false, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + `api/vehicles/search/${searchQuery}?isInternal=${isInternal}`, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecialDealContentAPI = async (id, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialdeals/get/' + id + '/content', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecialDealPricingAPI = async (id, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialdeals/get/' + id + '/pricing', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetStickerListAPI = async fetchHeaders => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/stickers/list', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSeatValuesAPI = () => {\n  return CollectionsHelper.seats();\n};\nexport const GetPriceToValuesAPI = () => {\n  return CollectionsHelper.prices();\n};\nexport const GetMpgValuesAPI = () => {\n  return CollectionsHelper.mpgs();\n};\nexport const GetC02ValuesAPI = () => {\n  return CollectionsHelper.co2s();\n};\nexport const GetDriveTrainValuesAPI = () => {\n  return CollectionsHelper.driveTrains();\n};\nexport const GetEngineSizeValuesAPI = () => {\n  return CollectionsHelper.engineSizes();\n};\nexport const GetTransmissionValuesAPI = () => {\n  return CollectionsHelper.transmissions();\n};\nexport const GetFuelTypesValuesAPI = () => {\n  return CollectionsHelper.fuelTypes();\n};\nexport const GetVehicleSizeValuesAPI = () => {\n  return CollectionsHelper.vehicleSizes();\n};\nexport const GetVehicleStyleValuesAPI = () => {\n  return CollectionsHelper.vehicleStyles();\n};\nexport const GetVehicleMileageValuesAPI = () => {\n  return CollectionsHelper.mileages();\n};\nexport const GetContractValuesAPI = () => {\n  return CollectionsHelper.terms();\n};\nexport const GetRentalValuesAPI = () => {\n  return CollectionsHelper.rentalMonths();\n};","map":null,"metadata":{},"sourceType":"module"}