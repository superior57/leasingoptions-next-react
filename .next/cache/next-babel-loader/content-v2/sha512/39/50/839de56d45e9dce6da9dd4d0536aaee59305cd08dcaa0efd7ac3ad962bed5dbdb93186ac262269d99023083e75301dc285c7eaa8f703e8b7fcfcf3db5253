{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { useForm, FormContext } from \"react-hook-form\";\nimport VehicleShortInfo from 'components/vehicle/vehicle-short-info';\nimport VehicleInfo from 'components/vehicle/vehicle-info/';\nimport VehicleImageGalleryTabs from 'components/vehicle/vehicle-image-gallery-tabs';\nimport VehicleKeyInfo from 'components/vehicle/vehicle-key-info';\nimport VehicleFeatures from 'components/vehicle/vehicle-features';\nimport VehicleSummary from 'components/vehicle/vehicle-summary';\nimport VehicleOptionsTabs from 'components/vehicle/vehicle-options-tabs';\nimport VehicleSlideup from 'components/vehicle/vehicle-slideup';\nimport TrustBox from 'components/trustpilot/trust-box';\nimport ModalContext from 'components/HOCs/modal/modalContext';\nimport ModalGarage from 'components/layout/modal-garage';\nimport VehicleExtarOptionsConfirmModal from 'components/vehicle/vehicle-extra-options-confirm-modal';\nimport VehicleQuoteEnquiryModal from 'components/vehicle/vehicle-quote-enquiry-modal';\nimport VehicleAdditionalTaxModal from 'components/vehicle/vehicle-additional-tax-modal';\nimport VehiclePricingMatrixModal from 'components/layout/vehicle-pricing-matrix-modal';\nimport VehicleErrorFeedbackModal from 'components/layout/vehicle-pricing-error-feedback-modal';\nimport VehicleSocial from 'components/layout/vehicle-social';\nimport PopOver from 'components/layout/popover';\nimport InternalVehicleDetails from 'components/internal/vehicle-details';\nimport InternalVehicleOptions from 'components/internal/vehicle-options';\nimport InternalVehicleManualDetails from 'components/internal/vehicle-manual-details';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/pro-regular-svg-icons\";\nimport _ from 'underscore';\nimport { PricingTypes } from 'enums/PricingTypes';\nimport { LeasingDealTypes } from 'enums/LeasingDealTypes';\nimport { VehicleTypes } from 'enums/VehicleTypes';\nimport { formatMoney, unformat } from 'helpers/currencyHelper';\nimport { CustomOptionsHelper } from \"helpers/customOptionsHelper\";\nimport { getVehicleMonthlyPrice } from 'helpers/vehiclePricingHelper';\nimport { VehicleExtraOptionsHelper } from 'components/vehicle/_libs/helpers/VehicleExtraOptionsHelper';\nimport { VehicleExtraOptionsManager } from 'components/vehicle/_libs/VehicleExtraOptionsManager';\nimport { GarageStorageHelper } from '../../garage/_libs/helpers/garageStorageHelper';\nimport { HistoryStorageHelper } from '../../history/_libs/helpers/historyStorageHelper';\nimport { GetFriendlyName } from 'helpers/helpers';\nimport { capitalize } from 'helpers/stringHelper';\nimport { logLabelEvent } from \"helpers/analytics\";\nimport { parseCookies } from 'nookies';\nimport { SiteSettings } from 'environment/siteSettings';\nimport { GetVehiclePricesDetails } from 'business-logic/vehicleService';\nimport ReactPlaceholder from 'react-placeholder';\nimport \"react-placeholder/lib/reactPlaceholder.css\";\n\nconst VehiclePage = ({\n  isInternal,\n  pricingType,\n  userPostcode,\n  leasingDealType,\n  vehicle,\n  orderModalOpenned\n}) => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const modalContext = useContext(ModalContext);\n  const methods = useForm();\n  const cookies = parseCookies();\n  const {\n    handleSubmit\n  } = methods; //const [selectedTerm, setselectedTerm] = useState(term);\n  //const [selectedMileage, setselectedMileage] = useState(mileage || process.env.NEXT_PUBLIC_DEFAULT_CAR_MILEAGE);\n  //const [selectedMaintenance, setselectedMaintenance] = useState(maintenance || process.env.NEXT_PUBLIC_DEFAULT_MAINTENANCE);\n  //const [selectedInitialRentals, setselectedInitialRentals] = useState(initialRentalMonths || process.env.NEXT_PUBLIC_DEFAULT_INITIAL_RENTALS);\n  //TODO: implement maintenanceEnabled setting\n\n  const maintenanceEnabled = isInternal || true;\n  const isAtc = pricingType && pricingType === PricingTypes.Atc;\n  const blackFridayTheme = process.env.NEXT_PUBLIC_BLACK_FRIDAY_THEME;\n\n  const isClientSideRendering = () => {\n    return false && window.document;\n  };\n\n  const pricesDefaultState = {\n    fullMonthlyPrice: \"Please Call\",\n    initialRental: \"POA\",\n    salesCode: \"POA\",\n    monthlyPrice: \"POA\",\n    monthlyMaintenancePrice: \"POA\",\n    processingFee: formatMoney(parseFloat(leasingDealType === LeasingDealTypes.Personal ? process.env.NEXT_PUBLIC_PCH_PROC_FEE : process.env.NEXT_PUBLIC_CH_PROC_FEE)),\n    extraOptions: [],\n    extraOptionsTotal: formatMoney(0),\n    p11d: \"N/A\",\n    bikTax: \"-\"\n  };\n  const {\n    0: enquiryAllowed,\n    1: setEnquiryAllowed\n  } = useState(false);\n  const {\n    0: addToGarageAllowed,\n    1: setAddToGarageAllowed\n  } = useState(false);\n  const {\n    0: isGarageFull,\n    1: setIsGarageFull\n  } = useState(false);\n  const {\n    0: customOptionsInitialized,\n    1: setCustomOptionsInitialized\n  } = useState(false);\n  const {\n    0: shownAdditionalTaxNotification,\n    1: setShownAdditionalTaxNotification\n  } = useState(true);\n  const {\n    0: shownInitialOrderModal,\n    1: setShownInitialOrderModal\n  } = useState(orderModalOpenned);\n  const {\n    0: customOptions,\n    1: setCustomOptions\n  } = useState({\n    vehicleRef: vehicle.vehicleRef,\n    leasingDealType: leasingDealType,\n    term: SiteSettings.DefaultTerm,\n    mileage: SiteSettings.GetDealTypeDefaultMileage(leasingDealType),\n    maintenance: SiteSettings.DefaultMaintenance,\n    initialRentalMonths: SiteSettings.DefaultInitialRentals,\n    options: [],\n    salesCode: 0,\n    ageCategory: null\n  });\n  const {\n    0: prices,\n    1: setPrices\n  } = useState(pricesDefaultState);\n  const {\n    0: extraOptions,\n    1: setExtraOptions\n  } = useState([]);\n  const {\n    0: extraOptionsRelationships,\n    1: setExtraOptionsRelationships\n  } = useState([]);\n  const {\n    0: extraOptionsStates,\n    1: setExtraOptionsStates\n  } = useState([]);\n  const {\n    0: interiorColors,\n    1: setInteriorColors\n  } = useState([]);\n  const {\n    0: exteriorColors,\n    1: setExteriorColors\n  } = useState([]);\n  const {\n    0: manualDetails,\n    1: setManualDetails\n  } = useState({\n    mileage: null,\n    maintenance: null,\n    monthlyPrice: null,\n    monthlyMaintenancePrice: null,\n    initialRentalPrice: null,\n    processingFee: null,\n    exteriorColor: null,\n    interiorColor: null\n  });\n  const {\n    0: selectedColors,\n    1: setSelectedColors\n  } = useState({\n    interiorColor: {\n      id: null,\n      name: null\n    },\n    exteriorColor: {\n      id: null,\n      name: null\n    }\n  });\n  const {\n    0: changeColorDump,\n    1: setChangeColorDump\n  } = useState(null);\n  useEffect(() => {\n    setIsGarageFull(GarageStorageHelper.isFull());\n    let data = {\n      pricingType: pricingType || undefined,\n      postcode: userPostcode || undefined,\n      vehicleRef: vehicle.vehicleRef,\n      leasingDealType: leasingDealType,\n      url: router.asPath,\n      maintenanceAllowed: vehicle.hasMaintenance && maintenanceEnabled\n    };\n    CustomOptionsHelper.getVehicleCustomOptions(data, customOptionsState => {\n      setCustomOptions(prevState => {\n        let updatedValues = {\n          term: customOptionsState.term,\n          mileage: customOptionsState.mileage,\n          maintenance: customOptionsState.maintenance,\n          initialRentalMonths: customOptionsState.initialRentalMonths,\n          options: customOptionsState.options,\n          salesCode: customOptionsState.salesCode,\n          ageCategory: customOptionsState.ageCategory\n        };\n        return _objectSpread(_objectSpread({}, prevState), updatedValues);\n      });\n      setCustomOptionsInitialized(true);\n    });\n  }, []);\n  useEffect(() => {\n    // Check for not internal\n    if (!isInternal) {\n      // Check user hasn't dismissed modal and for an empty garage\n      if (!cookies.HasClosedGaragePromo && GarageStorageHelper.countItems() === 0) {\n        // Add item to vehicle history \n        let historyItem = customOptions;\n        historyItem.ageCategory = 1;\n        let storageItem = HistoryStorageHelper.addOrUpdateItem(historyItem, {\n          make: vehicle.make,\n          model: vehicle.model,\n          derivative: vehicle.derivative,\n          imageUrl: vehicle.imageUrl\n        }); // If vehicle history is full\n\n        if (storageItem && HistoryStorageHelper.isTriggered()) {\n          // Launch promo modal after 10 seconds\n          const modalTimer = setTimeout(() => {\n            modalContext.showModal(ModalGarage, {\n              show: true\n            });\n            logLabelEvent('my-garage-modal', 'impression', 'modal');\n          }, 10000);\n          return () => clearTimeout(modalTimer);\n        }\n      }\n    }\n  }, [vehicle, customOptions]);\n  useEffect(() => {\n    setCustomOptions(prevState => {\n      let updatedValues = {\n        leasingDealType: leasingDealType\n      };\n      return _objectSpread(_objectSpread({}, prevState), updatedValues);\n    });\n  }, [leasingDealType]);\n  useEffect(() => {\n    if (customOptionsInitialized) {\n      dispatch({\n        type: 'UPDATE_OVERLAY_STATE',\n        state: true\n      });\n      CustomOptionsHelper.storeVehicleCustomOptions(customOptions);\n      GetVehiclePricesDetails({\n        pricingType: pricingType || undefined,\n        postcode: userPostcode || undefined,\n        vehicleRef: customOptions.vehicleRef,\n        leasingDealType: customOptions.leasingDealType,\n        term: customOptions.term,\n        mileage: customOptions.mileage,\n        maintenance: customOptions.maintenance,\n        initialRentalMonths: customOptions.initialRentalMonths,\n        options: customOptions.options,\n        salesCode: customOptions.salesCode,\n        ageCategory: customOptions.ageCategory\n      }).then(result => {\n        let pricesState = _.clone(pricesDefaultState);\n\n        if (result.isSucceed && result.data) {\n          let newPrices = result.data;\n          let hasAllowedPrice = newPrices.baseMonthlyPrice && newPrices.baseMonthlyPrice > 0;\n          pricesState.extraOptions = newPrices.extraOptions || [];\n          pricesState.extraOptionsTotal = formatMoney(newPrices.extraOptionsTotal);\n          pricesState.p11d = newPrices.p11D ? formatMoney(newPrices.p11D) : \"N/A\";\n          pricesState.bikTax = newPrices.bik20Tax && newPrices.bik40Tax ? formatMoney(newPrices.bik20Tax) + \"/\" + formatMoney(newPrices.bik40Tax) + \" p/m\" : \"-\";\n\n          if (hasAllowedPrice) {\n            //TODO: Should we have separate object for manual prices or should we store prices as numbers here to format them on display later?\n            pricesState.fullMonthlyPrice = newPrices.fullMonthlyPrice ? formatMoney(newPrices.fullMonthlyPrice) : \"Please Call\";\n            pricesState.initialRental = formatMoney(newPrices.initialRental);\n            pricesState.salesCode = formatMoney(newPrices.salesCode);\n            pricesState.monthlyPrice = formatMoney(newPrices.baseMonthlyPrice);\n            pricesState.monthlyMaintenancePrice = formatMoney(newPrices.monthlyMaintenancePrice);\n          }\n\n          setPrices(pricesState);\n          setEnquiryAllowed(hasAllowedPrice);\n          setAddToGarageAllowed(true);\n          let suppressTaxNotification = false;\n\n          if (shownInitialOrderModal) {\n            suppressTaxNotification = hasAllowedPrice;\n            setShownInitialOrderModal(false);\n            onEnquiry(hasAllowedPrice, \"order\");\n          }\n\n          if (shownAdditionalTaxNotification && newPrices.p11DTaxApplied) {\n            setShownAdditionalTaxNotification(false);\n\n            if (!suppressTaxNotification) {\n              modalContext.showModal(VehicleAdditionalTaxModal, {\n                show: true\n              });\n            }\n          } //TODO: implement?\n          //if (options.onPricesLoaded) {\n          //    options.onPricesLoaded(dataOptions.leasingDealType);\n          //}\n          //onPricesLoaded: function (dealTypeId) {\n          //    if (\"@((byte)leasingDealType)\" !== dealTypeId) {\n          //        switch (dealTypeId) {\n          //            case \"1\":\n          //                window.location = \"@businessUrl\";\n          //                break;\n          //            case \"2\":\n          //                window.location = \"@personalUrl\";\n          //                break;\n          //        }\n          //    }\n          //}\n\n        } else {\n          setPrices(pricesState);\n          setEnquiryAllowed(false);\n          setAddToGarageAllowed(false);\n        }\n\n        dispatch({\n          type: 'UPDATE_OVERLAY_STATE',\n          state: false\n        });\n      });\n    }\n  }, [customOptionsInitialized, customOptions]);\n  useEffect(() => {\n    let exteriorColor = {\n      id: null,\n      name: null\n    };\n    let interiorColor = {\n      id: null,\n      name: null\n    };\n    const exteriorColorOption = getColorExtraOption(0, customOptions.options);\n\n    if (exteriorColorOption) {\n      exteriorColor.id = exteriorColorOption.id;\n      exteriorColor.name = exteriorColorOption.name;\n    } else {\n      if (changeColorDump && changeColorDump.type === \"exteriorColor\" && (!changeColorDump.newId || changeColorDump.newId === 1000)) {\n        exteriorColor.id = changeColorDump.newId;\n        exteriorColor.name = changeColorDump.newId === 1000 ? \"TBC\" : null;\n      }\n    }\n\n    const interiorColorOption = getColorExtraOption(1, customOptions.options);\n\n    if (interiorColorOption) {\n      interiorColor.id = interiorColorOption.id;\n      interiorColor.name = interiorColorOption.name;\n    } else {\n      if (changeColorDump && changeColorDump.type === \"interiorColor\" && (!changeColorDump.newId || changeColorDump.newId === 1000)) {\n        interiorColor.id = changeColorDump.newId;\n        interiorColor.name = changeColorDump.newId === 1000 ? \"TBC\" : null;\n      }\n    }\n\n    setSelectedColors(prevState => {\n      let updatedValues = {\n        interiorColor: interiorColor,\n        exteriorColor: exteriorColor\n      };\n      return _objectSpread(_objectSpread({}, prevState), updatedValues);\n    });\n    setChangeColorDump(null);\n  }, [interiorColors, exteriorColors, customOptions.options]);\n  useEffect(() => {\n    if (customOptionsInitialized && isInternal && !isAtc) {\n      setManualDetails(prevState => {\n        let updatedValues = {\n          mileage: customOptions.mileage,\n          maintenance: customOptions.maintenance,\n          monthlyPrice: prices.monthlyPrice,\n          monthlyMaintenancePrice: prices.monthlyMaintenancePrice,\n          initialRentalPrice: prices.initialRental,\n          processingFee: prices.processingFee,\n          exteriorColor: selectedColors.exteriorColor.id,\n          interiorColor: selectedColors.interiorColor.id\n        };\n        return _objectSpread(_objectSpread({}, prevState), updatedValues);\n      });\n    }\n  }, [customOptionsInitialized, prices, selectedColors]);\n\n  const setOptions = (name, value) => {\n    if (customOptions[name] !== value) {\n      setCustomOptions(prevState => {\n        let updatedValues = {};\n        updatedValues[name] = value;\n        return _objectSpread(_objectSpread({}, prevState), updatedValues);\n      });\n    }\n  };\n\n  const getColorExtraOption = (colorType, selectedOptionIds) => {\n    let result = null;\n\n    if (selectedOptionIds && selectedOptionIds.length > 0) {\n      let colorOptions = [];\n\n      switch (colorType) {\n        case 0:\n          //exterior\n          colorOptions = exteriorColors;\n          break;\n\n        case 1:\n          //interior\n          colorOptions = interiorColors;\n          break;\n      }\n\n      if (colorOptions && colorOptions.length > 0) {\n        result = _.find(colorOptions, function (item) {\n          return _.contains(selectedOptionIds, item.id);\n        });\n      }\n    }\n\n    return result;\n  };\n\n  const addToGarage = () => {\n    if (addToGarageAllowed) {\n      if (!GarageStorageHelper.isFull()) {\n        let item = customOptions;\n        item.ageCategory = 1;\n        var storageItem = GarageStorageHelper.addOrUpdateItem(item);\n\n        if (storageItem) {\n          router.push('/my-garage');\n        }\n      } else {\n        router.push('/my-garage');\n      }\n    }\n  };\n\n  const processOption = optionToProcess => {\n    if (optionToProcess) {\n      let optionsToProcess = [optionToProcess];\n      let manager = new VehicleExtraOptionsManager();\n      manager.init(extraOptions, extraOptionsRelationships);\n      let managerState = manager.processOptions(optionsToProcess, null, customOptions.options, extraOptionsStates);\n\n      if (managerState) {\n        if (managerState.silentlySelectedOptionIds) {\n          setCustomOptions(prevState => {\n            let updatedValues = {\n              options: managerState.selectedOptionIds || []\n            };\n            return _objectSpread(_objectSpread({}, prevState), updatedValues);\n          });\n        }\n\n        if (managerState.confirmRelationshipIds && managerState.confirmRelationshipIds.length > 0) {\n          modalContext.showModal(VehicleExtarOptionsConfirmModal, {\n            show: true,\n            title: \"+ Optional Extras\",\n            data: {\n              extraOptions: extraOptions.map(item => {\n                let result = {\n                  id: item.id,\n                  name: item.name,\n                  price: getVehicleMonthlyPrice(customOptions.leasingDealType, item.price, customOptions.term, customOptions.initialRentalMonths),\n                  linkedRelationshipIds: item.linkedRelationshipIds\n                };\n                return result;\n              }),\n              extraOptionsRelationships: extraOptionsRelationships\n            },\n            options: {\n              leasingDealType: customOptions.leasingDealType\n            },\n            initialState: managerState,\n            settings: {\n              onCancel: () => {\n                setSelectedColors(prevState => {\n                  return _objectSpread({}, prevState);\n                });\n                setChangeColorDump(null);\n              },\n              onApply: confirmedState => {\n                if (confirmedState) {\n                  setCustomOptions(prevState => {\n                    let updatedValues = {\n                      options: confirmedState.selectedOptionIds || []\n                    };\n                    return _objectSpread(_objectSpread({}, prevState), updatedValues);\n                  });\n\n                  if (confirmedState.optionsStates) {\n                    setExtraOptionsStates(confirmedState.optionsStates);\n                  }\n                }\n              }\n            }\n          });\n        }\n      }\n    }\n  };\n\n  const onVehicleExtraOptionClick = option => {\n    if (option && vehicle.optionsSelectAllowed) {\n      //TODO: check usage of optionsSelectAllowed for internal users\n      option.id = option.code;\n      let optionToProcess = VehicleExtraOptionsHelper.getOptionAction(option, customOptions.options || []);\n      processOption(optionToProcess);\n    }\n  };\n\n  const onTryChangeColor = (type, prevId, newId) => {\n    let optionToProcess = null;\n\n    if (newId && newId !== 1000) {\n      optionToProcess = {\n        id: newId,\n        selectionRequiredBy: [0],\n        deselectionRequiredBy: []\n      };\n    } else if (prevId && prevId !== 1000) {\n      optionToProcess = {\n        id: prevId,\n        selectionRequiredBy: [],\n        deselectionRequiredBy: [0]\n      };\n    }\n\n    if (optionToProcess) {\n      setChangeColorDump({\n        type: type,\n        prevId: prevId,\n        newId: newId\n      });\n      processOption(optionToProcess);\n    } else {\n      setSelectedColors(prevState => {\n        let updatedValues = {};\n        updatedValues[type] = {\n          id: newId,\n          name: null\n        };\n        return _objectSpread(_objectSpread({}, prevState), updatedValues);\n      });\n    }\n  };\n\n  const onEnquiryButtonClick = type => {\n    onEnquiry(enquiryAllowed, type);\n  };\n\n  const onEnquiry = (showAllowed, type) => {\n    if (isInternal) {\n      handleSubmit(data => {\n        showEnquiryModal(showAllowed, type, data);\n      })();\n    } else {\n      showEnquiryModal(showAllowed, type);\n    }\n  };\n\n  const showEnquiryModal = (showAllowed, type, internalData) => {\n    if (showAllowed && type) {\n      let enquiryData = {\n        dealType: 1,\n        dealId: customOptions.vehicleRef,\n        pricingType: pricingType,\n        pricingPostcode: userPostcode,\n        details: `${vehicle.make} ${vehicle.model} ${vehicle.derivative}`,\n        vehicleRef: customOptions.vehicleRef,\n        leasingDealType: customOptions.leasingDealType,\n        term: customOptions.term,\n        mileage: customOptions.mileage,\n        initialRentalMonths: customOptions.initialRentalMonths,\n        maintenance: customOptions.maintenance || false,\n        options: customOptions.options,\n        salesCode: customOptions.salesCode,\n        ageCategory: customOptions.ageCategory,\n        manualDetails: null\n      };\n\n      if (isInternal && !isAtc) {\n        enquiryData.manualDetails = {\n          mileage: unformat(internalData.mileage),\n          maintenance: internalData.maintenance === \"true\",\n          monthlyPrice: unformat(internalData.monthlyPrice),\n          monthlyMaintenancePrice: unformat(internalData.monthlyMaintenancePrice),\n          initialRental: unformat(internalData.initialRentalPrice),\n          processingFee: unformat(internalData.processingFee),\n          dealerOption1: internalData.dealerOption1,\n          dealerOption1Price: unformat(internalData.dealerOption1Price) || null,\n          dealerOption2: internalData.dealerOption2,\n          dealerOption2Price: unformat(internalData.dealerOption2Price) || null,\n          dealerOption3: internalData.dealerOption3,\n          dealerOption3Price: unformat(internalData.dealerOption3Price) || null,\n          exteriorColor: unformat(internalData.exteriorColor) || null,\n          exteriorColorManual: internalData.exteriorColorManual,\n          interiorColor: unformat(internalData.interiorColor) || null,\n          interiorColorManual: internalData.interiorColorManual\n        };\n      }\n\n      let enquiryModalOptions = {\n        show: true,\n        title: null,\n        baseData: enquiryData,\n        settings: {\n          isInternal: isInternal,\n          showPriceWarning: isAtc,\n          proceededToApplyForFinanceDirectly: false\n        }\n      };\n\n      if (type === \"enquiry\") {\n        enquiryModalOptions.title = \"Enquire Now\";\n      } else if (type === \"order\") {\n        enquiryModalOptions.title = \"Order this \" + (vehicle.vehicleType === VehicleTypes.Commercial ? \"van\" : \"car\");\n        enquiryModalOptions.settings.proceededToApplyForFinanceDirectly = true;\n      }\n\n      if (enquiryModalOptions) {\n        modalContext.showModal(VehicleQuoteEnquiryModal, enquiryModalOptions);\n      }\n    }\n  };\n\n  const onOptionsDataLoaded = (optionsType, data) => {\n    if (optionsType === \"extras\" && vehicle.optionsSelectAllowed) {\n      setExtraOptions([]);\n      setExtraOptionsRelationships([]);\n      let optionsList = [];\n      let relationshipsList = [];\n      let optiosStatesList = [];\n      let interiorColorsList = [];\n      let exteriorColorsList = [];\n\n      if (data) {\n        let optionCategories = data.options || [];\n        let relationships = data.relationships || [];\n        let interiorColorCategories = [81, 82, 83, 84, 86, 90, 97, 110, 109];\n        let exteriorColorCategories = [44, 45, 73, 74, 75, 76, 103, 104, 105, 106, 107, 108];\n        ;\n        optionCategories.forEach(function (category) {\n          let isInteriorColorsCategory = _.contains(interiorColorCategories, category.code);\n\n          let isExteriorColorsCategory = _.contains(exteriorColorCategories, category.code);\n\n          category.options.forEach(function (option) {\n            let optionRelationshipIds = _.pluck(_.filter(relationships, function (relationship) {\n              return relationship && _.contains(VehicleExtraOptionsHelper.allowedRelationshipTypes, relationship.type) && relationship.options && _.find(relationship.options, function (relationshipOption) {\n                return relationshipOption.id === option.code;\n              });\n            }), \"id\");\n\n            let extraOption = {\n              id: option.code,\n              name: option.name,\n              price: option.price,\n              linkedRelationshipIds: optionRelationshipIds\n            };\n            optionsList.push(extraOption);\n\n            if (isInteriorColorsCategory) {\n              interiorColorsList.push(extraOption);\n            }\n\n            if (isExteriorColorsCategory) {\n              exteriorColorsList.push(extraOption);\n            }\n          });\n        });\n        (data.relationships || []).forEach(function (relationship) {\n          let result = {\n            id: relationship.id,\n            type: relationship.type,\n            primaryOptionIds: _.pluck(_.filter(relationship.options, function (option) {\n              return option.isPrimary;\n            }), \"id\"),\n            regularOptionIds: _.pluck(_.filter(relationship.options, function (option) {\n              return !option.isPrimary;\n            }), \"id\"),\n            mirrorRelationshipIds: relationship.mirrorRelationshipIds\n          };\n          relationshipsList.push(result);\n        });\n      }\n\n      optiosStatesList = VehicleExtraOptionsHelper.getOptionsStates(customOptions.options, relationshipsList);\n      setExtraOptions(optionsList);\n      setInteriorColors(interiorColorsList);\n      setExteriorColors(exteriorColorsList);\n      setExtraOptionsRelationships(relationshipsList);\n      setExtraOptionsStates(optiosStatesList);\n    }\n  };\n\n  const onPricingMatrixButtonClick = () => {\n    if (isInternal) {\n      modalContext.showModal(VehiclePricingMatrixModal, {\n        show: true,\n        vehicleRef: vehicle.vehicleRef,\n        vehicleName: `${vehicle.make} ${vehicle.model} ${vehicle.derivative}`,\n        pricingType: pricingType || undefined,\n        userPostcode: userPostcode || undefined\n      });\n    }\n  };\n\n  const onErrorFeedbackButtonClick = () => {\n    if (isInternal) {\n      modalContext.showModal(VehicleErrorFeedbackModal, {\n        show: true,\n        vehicleRef: vehicle.vehicleRef,\n        capId: vehicle.capId,\n        vehicleName: `${vehicle.make} ${vehicle.model} ${vehicle.derivative}`,\n        vehiclePageUrl: window.location.href,\n        settings: {\n          salespersons: []\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"container-fluid py-3 py-md-5 bg-light-grey\",\n      children: [isInternal && vehicle.extraDetails ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24\",\n          children: /*#__PURE__*/_jsx(InternalVehicleDetails, {\n            data: vehicle.extraDetails\n          })\n        })\n      }) : null, /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 d-md-none order-1\",\n          children: [/*#__PURE__*/_jsx(VehicleShortInfo, {\n            vehicle: vehicle\n          }), /*#__PURE__*/_jsx(\"hr\", {\n            className: \"my-2 my-md-3\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 order-2 col-lg-12 order-lg-3\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: `vehicle-gallery ${blackFridayTheme === 'true' ? 'vehicle-gallery--bf' : ''} mb-3 mb-md-0`,\n            children: [/*#__PURE__*/_jsx(ReactPlaceholder, {\n              type: \"rect\",\n              ready: vehicle ? true : false,\n              color: \"#E0E0E0\",\n              style: {\n                height: 400\n              },\n              children: /*#__PURE__*/_jsx(VehicleImageGalleryTabs, {\n                vehicleType: vehicle.vehicleType,\n                imageDescription: `${capitalize(GetFriendlyName(vehicle.make))} ${capitalize(GetFriendlyName(vehicle.model))} ${capitalize(GetFriendlyName(vehicle.derivative))}`,\n                imageUrls: vehicle.imageUrls,\n                interiorUrl: vehicle.interiorUrl,\n                exteriorUrl: vehicle.exteriorUrl\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              children: /*#__PURE__*/_jsx(\"small\", {\n                children: \"Images are for illustration purposes only\"\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"col-24 col-md-12 d-flex justify-content-between align-items-center mb-3 my-md-4\",\n              children: addToGarageAllowed ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"button\", {\n                  onClick: () => addToGarage(),\n                  className: \"btn btn-outline-primary btn-fluid btn-lg flex-grow-1 mr-3 add-to-garage\",\n                  children: isGarageFull ? \"View Garage\" : `Compare ${vehicle.vehicleType === VehicleTypes.Commercial ? \"Van\" : \"Car\"}s`\n                }), isGarageFull ? /*#__PURE__*/_jsx(PopOver, {\n                  id: \"garage-full\",\n                  trigger: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n                    width: \"20\",\n                    height: \"20\",\n                    icon: faInfoCircle\n                  }),\n                  body: \"You are currently comparing four vehicles. Please remove one if you wish to add.\"\n                }) : null]\n              }) : null\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-24 col-md-12 d-none d-md-flex justify-content-end align-items-center my-3 my-md-4\",\n              children: /*#__PURE__*/_jsx(VehicleSocial, {})\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-24\",\n              children: /*#__PURE__*/_jsx(\"hr\", {\n                className: \"m-0 p-0\"\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 order-4 col-lg-12 order-lg-2 d-md-flex mb-3 mb-md-0\",\n          children: /*#__PURE__*/_jsx(ReactPlaceholder, {\n            type: \"rect\",\n            ready: vehicle ? true : false,\n            color: \"#FFFFFF\",\n            style: {\n              height: 650\n            },\n            children: /*#__PURE__*/_jsx(VehicleInfo, {\n              vehicle: vehicle,\n              options: {\n                leasingDealType: customOptions.leasingDealType,\n                term: customOptions.term,\n                mileage: customOptions.mileage,\n                maintenance: customOptions.maintenance,\n                initialRentalMonths: customOptions.initialRentalMonths\n              },\n              prices: {\n                initialRental: prices.initialRental,\n                monthlyMaintenance: prices.monthlyMaintenancePrice\n              },\n              settings: {\n                availableMileages: vehicle.availableMileages,\n                hasMaintenance: vehicle.hasMaintenance,\n                isAtc: isAtc,\n                maintenanceEnabled: maintenanceEnabled,\n                setOptions: setOptions\n              }\n            })\n          })\n        })]\n      }), isInternal ? /*#__PURE__*/_jsx(FormContext, _objectSpread(_objectSpread({}, methods), {}, {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-lg-12 mt-3 mt-md-5\",\n            children: /*#__PURE__*/_jsx(InternalVehicleOptions, {\n              options: {\n                salesCode: customOptions.salesCode,\n                ageCategory: customOptions.ageCategory\n              },\n              settings: {\n                setOptions: setOptions,\n                onErrorFeedback: onErrorFeedbackButtonClick,\n                onPricingMatrix: onPricingMatrixButtonClick\n              }\n            })\n          }), !isAtc ? /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-lg-12 mt-3 mt-md-5\",\n            children: /*#__PURE__*/_jsx(InternalVehicleManualDetails, {\n              data: manualDetails,\n              settings: {\n                interiorColors: interiorColors,\n                exteriorColors: exteriorColors,\n                onTryChangeColor: onTryChangeColor\n              }\n            })\n          }) : null]\n        })\n      })) : null]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `container-fluid py-5 ${isAtc ? \"bg-atc\" : \"bg-white\"}`,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 mb-5 mb-md-0\",\n          children: /*#__PURE__*/_jsx(ReactPlaceholder, {\n            firstLaunchOnly: true,\n            type: \"text\",\n            showLoadingAnimation: true,\n            ready: vehicle ? true : false,\n            rows: 3,\n            children: /*#__PURE__*/_jsx(VehicleKeyInfo, {\n              leasingDealType: leasingDealType,\n              vehicle: vehicle,\n              prices: {\n                p11d: prices.p11d,\n                bikTax: prices.bikTax\n              },\n              sourceUrl: router.asPath\n            })\n          })\n        }), vehicle.features && vehicle.features.length > 0 ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12\",\n          children: /*#__PURE__*/_jsx(ReactPlaceholder, {\n            firstLaunchOnly: true,\n            type: \"text\",\n            showLoadingAnimation: true,\n            ready: vehicle.features ? true : false,\n            rows: 3,\n            children: /*#__PURE__*/_jsx(VehicleFeatures, {\n              features: vehicle.features\n            })\n          })\n        }) : null]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"container-fluid py-5 bg-light-grey\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24\",\n          children: /*#__PURE__*/_jsx(ReactPlaceholder, {\n            firstLaunchOnly: true,\n            type: \"text\",\n            showLoadingAnimation: true,\n            color: \"#FFFFFF\",\n            ready: customOptions ? true : false,\n            rows: 8,\n            children: /*#__PURE__*/_jsx(VehicleSummary, {\n              options: {\n                leasingDealType: customOptions.leasingDealType,\n                term: customOptions.term,\n                mileage: customOptions.mileage,\n                maintenance: customOptions.maintenance,\n                initialRentalMonths: customOptions.initialRentalMonths,\n                interior: selectedColors.interiorColor.name,\n                exterior: selectedColors.exteriorColor.name\n              },\n              prices: {\n                monthly: prices.fullMonthlyPrice,\n                monthlyMaintenance: prices.monthlyMaintenancePrice,\n                processingFee: prices.processingFee,\n                extraOptions: prices.extraOptions,\n                extraOptionsTotal: prices.extraOptionsTotal\n              },\n              settings: {\n                maintenanceEnabled: maintenanceEnabled,\n                isAtc: isAtc\n              }\n            })\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"container-fluid py-3 py-md-5 bg-white\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24\",\n          children: /*#__PURE__*/_jsx(ReactPlaceholder, {\n            firstLaunchOnly: true,\n            type: \"text\",\n            showLoadingAnimation: true,\n            ready: customOptions ? true : false,\n            rows: 10,\n            children: /*#__PURE__*/_jsx(VehicleOptionsTabs, {\n              vehicleType: vehicle.vehicleType,\n              capId: vehicle.capId,\n              options: {\n                leasingDealType: customOptions.leasingDealType,\n                term: customOptions.term,\n                initialRentalMonths: customOptions.initialRentalMonths,\n                options: customOptions.options,\n                optionsStates: extraOptionsStates\n              },\n              settings: {\n                searchAllowed: isInternal,\n                optionsSelectAllowed: vehicle.optionsSelectAllowed,\n                onOptionClick: onVehicleExtraOptionClick,\n                onOptionsDataLoaded: onOptionsDataLoaded\n              }\n            })\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"container-fluid py-3 py-md-5 bg-light-grey\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24\",\n          children: [/*#__PURE__*/_jsx(\"h2\", {\n            children: \"What our customers think\"\n          }), /*#__PURE__*/_jsx(TrustBox, {})]\n        })\n      })\n    }), /*#__PURE__*/_jsx(VehicleSlideup, {\n      leasingDealType: customOptions.leasingDealType,\n      monthlyPrice: prices.fullMonthlyPrice,\n      settings: {\n        isSimpleMode: !isInternal,\n        proceedAllowed: enquiryAllowed,\n        onProceed: onEnquiryButtonClick\n      }\n    })]\n  });\n};\n\nexport default VehiclePage;","map":null,"metadata":{},"sourceType":"module"}