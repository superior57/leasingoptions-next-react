{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useForm, FormContext } from \"react-hook-form\";\nimport { connect } from 'react-redux';\nimport { EmailAddressIsValid, UKMobileNumberIsValid } from 'helpers/validation';\nimport { PhoneNumberIsValid } from 'helpers/validation';\nimport FullName from '../common/full-name';\nimport { logLabelEvent } from 'helpers/analytics';\n\nfunction mapStateToProps(state) {\n  return {\n    formData: state.formData,\n    stepNumber: state.stepIndicator\n  };\n}\n\nvar PersonalStepTwo = function PersonalStepTwo(props) {\n  var formData = props.formData[props.stepNumber];\n\n  var handleGATracking = function handleGATracking() {\n    return logLabelEvent('prop_form_tracking_personal', 'Click', 'personal-details-completed');\n  };\n\n  var methods = useForm();\n  var register = methods.register,\n      handleSubmit = methods.handleSubmit,\n      errors = methods.errors;\n\n  var onSubmit = function onSubmit(data) {\n    if (props.handleFormSave(props.stepNumber, data)) {\n      props.handleFormStep(props.stepNumber + 1);\n    }\n  };\n\n  var onBack = function onBack() {\n    return props.handleFormStep(props.stepNumber - 1);\n  };\n\n  var queryParams = new URLSearchParams(window.location.search);\n  var emailDefaultValue = queryParams.get(\"email\") ? queryParams.get(\"email\") : formData.emailAddress;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"w-100 bg-white p-3 p-md-5\",\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      className: \"mb-5\",\n      children: \"Your Details\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          children: [\"Email Address\", /*#__PURE__*/_jsx(\"small\", {\n            children: \" (Required)\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control \".concat(errors.emailAddress ? \"is-invalid\" : \"\"),\n          name: \"emailAddress\",\n          placeholder: \"Your Email Address\",\n          maxLength: 100,\n          ref: register({\n            required: true,\n            validate: function validate(value) {\n              return EmailAddressIsValid(value) === true || 'Invalid email address';\n            }\n          }),\n          defaultValue: emailDefaultValue\n        }), errors.emailAddress && /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: \"This field is required\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(FormContext, _objectSpread(_objectSpread({}, methods), {}, {\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Your Name\"\n        }), /*#__PURE__*/_jsx(FullName, {\n          showMiddleName: props.showMiddleName,\n          formData: formData,\n          collectionName: null,\n          index: 0\n        }), /*#__PURE__*/_jsx(\"h3\", {\n          children: \"Contact Details\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"form-row mb-3\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-24 col-md-12\",\n            children: [/*#__PURE__*/_jsxs(\"label\", {\n              htmlFor: \"mobileNumber\",\n              children: [\"Mobile Number \", /*#__PURE__*/_jsx(\"small\", {\n                children: \"(Required)\"\n              })]\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"tel\",\n              className: \"form-control \".concat(errors.mobileNumber ? \"is-invalid\" : \"\"),\n              id: \"mobileNumber\",\n              name: \"mobileNumber\",\n              \"aria-describedby\": \"mobileNumber\",\n              placeholder: \"Mobile Number\",\n              ref: register({\n                required: true,\n                validate: function validate(value) {\n                  return UKMobileNumberIsValid(value, false) === true || 'Please specify a valid UK mobile number.';\n                }\n              }),\n              defaultValue: formData.mobileNumber\n            }), errors.mobileNumber && /*#__PURE__*/_jsx(\"span\", {\n              className: \"invalid-feedback d-block\",\n              children: \"Please specify a valid UK mobile number.\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"form-row mb-3\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-24 col-md-12\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"homeNumber\",\n              children: \"Home Number\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"tel\",\n              className: \"form-control \".concat(errors.homeNumber ? \"is-invalid\" : \"\"),\n              id: \"homeNumber\",\n              name: \"homeNumber\",\n              \"aria-describedby\": \"homeNumber\",\n              placeholder: \"Home Number\",\n              ref: register({\n                validate: function validate(value) {\n                  return PhoneNumberIsValid(value) === true || 'Please specify a valid UK landline number.';\n                }\n              }),\n              defaultValue: formData.homeNumber\n            }), errors.homeNumber && /*#__PURE__*/_jsx(\"span\", {\n              className: \"invalid-feedback d-block\",\n              children: \"Please specify a valid UK landline number.\"\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-row d-flex justify-content-end\",\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-secondary mr-3\",\n            onClick: onBack,\n            children: \"Back\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-lg\",\n            onClick: function onClick() {\n              handleGATracking();\n            },\n            children: \"Next\"\n          })]\n        })]\n      })\n    }))]\n  });\n};\n\nexport default connect(mapStateToProps)(PersonalStepTwo);","map":null,"metadata":{},"sourceType":"module"}