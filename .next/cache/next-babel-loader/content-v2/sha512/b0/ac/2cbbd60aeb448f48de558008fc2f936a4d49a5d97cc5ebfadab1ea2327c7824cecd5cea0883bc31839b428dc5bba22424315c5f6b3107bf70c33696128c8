{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { useFormContext } from \"react-hook-form\";\nimport SortcodeLookup from './../sortcode-lookup/index';\n\nconst AccountDetails = ({\n  formData,\n  showSortCodeLookup,\n  showAccountName,\n  showAccountNumer\n}) => {\n  const {\n    setValue,\n    register,\n    errors\n  } = useFormContext();\n\n  const onBankSelected = address => {\n    setValue(\"bankName\", address.name);\n    setValue(\"address1\", address.address1);\n    setValue(\"address2\", address.address2);\n    setValue(\"address3\", address.address3);\n    setValue(\"town\", address.town);\n    setValue(\"county\", address.county);\n    setValue(\"postcode\", address.postcode);\n    setValue(\"timestamp\", Date.now());\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      id: \"postcode\",\n      name: \"postcode\",\n      ref: register(),\n      defaultValue: formData.postcode\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      id: \"address1\",\n      name: \"address1\",\n      ref: register(),\n      defaultValue: formData.address1\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      id: \"address2\",\n      name: \"address2\",\n      ref: register(),\n      defaultValue: formData.address2\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      id: \"address3\",\n      name: \"address3\",\n      ref: register(),\n      defaultValue: formData.address3\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      id: \"town\",\n      name: \"town\",\n      ref: register(),\n      defaultValue: formData.town\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      id: \"county\",\n      name: \"county\",\n      ref: register(),\n      defaultValue: formData.county\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      id: \"timestamp\",\n      name: \"timestamp\",\n      ref: register(),\n      defaultValue: formData.timestamp || Date.now()\n    }), showSortCodeLookup && /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          children: [\"Sort Code (Lookup) \", /*#__PURE__*/_jsx(\"small\", {\n            children: \"(Required)\"\n          })]\n        }), /*#__PURE__*/_jsx(SortcodeLookup, {\n          onBankSelected: onBankSelected,\n          selectedSortCode: formData.sortCode,\n          register: register,\n          errors: errors\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"bankName\",\n          children: [\"Bank Name \", /*#__PURE__*/_jsx(\"small\", {\n            children: \"(Required)\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: `form-control ${errors.bankName ? \"is-invalid\" : \"\"}`,\n          id: \"bankName\",\n          name: \"bankName\",\n          \"aria-describedby\": \"bankName\",\n          placeholder: \"Your Bank Name\",\n          maxLength: 100,\n          ref: register({\n            required: true\n          }),\n          defaultValue: formData.bankName\n        }), errors.bankName && /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: \"This field is required\"\n        })]\n      })\n    }), showAccountName && /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"accountName\",\n          children: [\"Account Name \", /*#__PURE__*/_jsx(\"small\", {\n            children: \"(Required)\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: `form-control ${errors.accountName ? \"is-invalid\" : \"\"}`,\n          id: \"accountName\",\n          name: \"accountName\",\n          \"aria-describedby\": \"accountName\",\n          placeholder: \"Your Account Name\",\n          maxLength: 100,\n          ref: register({\n            required: true\n          }),\n          defaultValue: formData.accountName\n        }), errors.accountName && /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: \"This field is required\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: \"text-blue\",\n          children: \"Payments must be made from the applicants main account\"\n        })]\n      })\n    }), showAccountNumer && /*#__PURE__*/_jsx(\"div\", {\n      className: \"form-row mb-3\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 col-md-12\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"accountNumber\",\n          children: [\"Account Number \", /*#__PURE__*/_jsx(\"small\", {\n            children: \"(Required)\"\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          className: `form-control ${errors.accountNumber ? \"is-invalid\" : \"\"}`,\n          id: \"accountNumber\",\n          name: \"accountNumber\",\n          \"aria-describedby\": \"accountNumber\",\n          placeholder: \"Your Account Number\",\n          maxLength: 8,\n          ref: register({\n            required: true,\n            minLength: 8,\n            maxLength: 8,\n            pattern: /^[0-9]*$/\n          }),\n          defaultValue: formData.accountNumber\n        }), errors.accountNumber && /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: \"This field is required\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"p\", {\n      className: \"mb-3\",\n      children: \"Please confirm that you are authorised to set-up a direct debit and to allow payments to be made using the bank details provided, without the permission of any other account holders.\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"w-100 text-right form-check pl-0 pr-3 mb-3\",\n      children: [showAccountNumer && showAccountName && /*#__PURE__*/_jsx(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"authorised\",\n        children: \"I am authorised to set-up a direct debit and to allow payments to be made using the bank details provided\"\n      }), !(showAccountNumer && showAccountName) && /*#__PURE__*/_jsx(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"authorised\",\n        children: \" I am authorised to set up a direct debit and to allow payments to be made using this account\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        className: `form-check-input mr-0 ml-2 ${errors.authorised ? \"is-invalid\" : \"\"}`,\n        type: \"checkbox\",\n        defaultChecked: formData.authorised,\n        id: \"authorised\",\n        name: \"authorised\",\n        ref: register({\n          required: true\n        })\n      }), errors.authorised && /*#__PURE__*/_jsx(\"span\", {\n        className: \"invalid-feedback d-block\",\n        children: \"Please authorised the set-up of a direct debit to allow payments to be made using the bank details provided\"\n      })]\n    })]\n  });\n};\n\nexport default AccountDetails;","map":null,"metadata":{},"sourceType":"module"}