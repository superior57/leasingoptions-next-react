{"ast":null,"code":"export const joinNotEmpty = (separator, values) => {\n  let filteredValues = [];\n\n  if (values) {\n    for (let i = 0; i < values.length; i++) {\n      if (!isNullOrWhiteSpace(values[i])) {\n        filteredValues.push(values[i]);\n      }\n    }\n  }\n\n  return filteredValues.join(separator || \"\");\n};\nexport const isNullOrWhiteSpace = value => {\n  return !value || value === '' || !value.trim();\n};\nexport const escapeRegExp = text => {\n  return text === null || text === void 0 ? void 0 : text.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n};\nexport const replaceAll = (str, find, replace) => {\n  return str === null || str === void 0 ? void 0 : str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n};\nexport const isNumeric = value => {\n  let reg = new RegExp('^\\\\d+$');\n  return reg.test(value);\n};\nexport const capitalize = value => {\n  if (!isNullOrWhiteSpace(value)) {\n    var result = \"\";\n    let wordBuilder = \"\";\n    const stopChars = [\" \", \"-\", \",\", \".\", \"&\", \"|\"];\n    let idx = 0;\n\n    while (idx <= value.length) {\n      let currentValue = idx < value.length ? value[idx] : \"\";\n\n      if (currentValue !== \"\" && !stopChars.includes(currentValue)) {\n        wordBuilder += currentValue;\n      } else {\n        let word = wordBuilder.toString();\n\n        if (word.length > 3 && !isNumeric(word[0]) && !isNumeric(word[word.length - 1])) {\n          result += `${word.substring(0, 1).toUpperCase()}${word.substring(1).toLowerCase()}${currentValue}`;\n        } else {\n          result += `${word}${currentValue}`;\n        }\n\n        wordBuilder = \"\";\n      }\n\n      idx++;\n    }\n\n    return result;\n  }\n\n  return value;\n};\nexport const hasWhiteSpace = s => {\n  return s.indexOf(' ') >= 0;\n};\nexport const shortCut = (value, take) => {\n  let result = value ? value.trim() : value;\n\n  if (result && take > 0 && result.length > take + 3) {\n    const checkList = [' ', '.', ',', ':', ';', '?', '!'];\n    let trailingChar = result.substring(take, take + 1);\n    result = result.substring(0, take);\n\n    if (!checkList.includes(trailingChar)) {\n      result = result.substring(0, result.lastIndexOf(' ')).trim();\n    }\n\n    while (checkList.includes(result[result.length - 1])) {\n      result = result.substring(0, result.length - 1).trim();\n    }\n\n    result = result.trim() + \"...\";\n  }\n\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}