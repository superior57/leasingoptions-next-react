{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport Head from \"next/head\";\nimport { useRouter, Router } from 'next/router';\nimport Breadcrumbs from '../breadcrumbs';\nimport Footer from '../footer-new';\nimport ToTop from '../to-top/to-top';\nimport CookieBar from '../../cookie-bar/cookie-bar';\nimport PageOverlay from 'components/page-overlay/page-overlay';\nimport { GetBreadcrumbsSchema, GetSerializedSchema } from 'helpers/schemaHelper';\nimport LiveChat from \"../../live-chat\";\nimport { isWithinLeaseBotHours } from \"../../leasebot/helper\";\nimport { AuthenticationService } from \"business-logic/authenticationService\";\nimport { connect } from 'react-redux';\nimport { LeasingDealTypes } from 'enums/LeasingDealTypes';\nimport { VehicleTypes } from 'enums/VehicleTypes';\nimport LeaseBotIcon from 'components/leasebot/leaseBotIcon';\nimport { getBreadcrumbs } from 'helpers/breadcrumbsHelper';\nimport Header from '../header-new';\nimport { GetTrustPilotRating } from 'business-logic/systemService';\n\nconst MainLayout = ({\n  vehiclePreference,\n  dealSelector,\n  isInternal,\n  dispatchInternalCheck,\n  metaData,\n  children,\n  className,\n  trustPilotRating,\n  updateTrustPilotRating\n}) => {\n  const overlapRoutes = [\"/\", \"/beta\", \"/car-leasing\", \"/business-car-leasing\", \"/van-leasing\", \"/news\", \"/news/[category]\", \"/advice\", \"/advice/[category]\", \"/value-your-car\", \"/car-leasing-with-insurance/[postcode]/search\", \"/car-leasing-with-insurance/[postcode]/[make]\", \"/car-leasing-with-insurance/[postcode]/[make]/[shortModel]\", \"/price-promise\", \"/our-story/30th-birthday\", \"/short-term-car-leasing\", \"/short-term-van-leasing\", \"/electric-hybrid-car-leasing\", \"/electric-hybrid-car-leasing/types\", \"/hydrogen-car-leasing\", \"/electric-hybrid-car-leasing/government-grants\", \"/electric-hybrid-car-leasing/charging\"];\n  const router = useRouter();\n  const expiryDate = new Date();\n  expiryDate.setFullYear(expiryDate.getFullYear() + 1); //TODO: initial false value cuses issues with current logic. Needs to be checked\n\n  const {\n    0: overlap,\n    1: setOverlap\n  } = useState(true);\n\n  const checkChatStatus = () => {\n    var liveChat = document.getElementById(\"liveChatLink\");\n    var chatWrapper = document.getElementById(\"chatwrapper\");\n\n    if (isWithinLeaseBotHours()) {\n      if (process.env.NEXT_PUBLIC_IS_CHATBOT_ENABLED) {\n        chatWrapper === null || chatWrapper === void 0 ? void 0 : chatWrapper.classList.remove(\"d-none\");\n      }\n\n      liveChat === null || liveChat === void 0 ? void 0 : liveChat.classList.add(\"d-none\");\n    } else {\n      chatWrapper === null || chatWrapper === void 0 ? void 0 : chatWrapper.classList.add(\"d-none\");\n      liveChat === null || liveChat === void 0 ? void 0 : liveChat.classList.remove(\"d-none\");\n    }\n  };\n\n  useEffect(() => {\n    if (overlapRoutes.includes(router.pathname.replace(\"/internal\", \"\"))) {\n      setOverlap(true);\n    } else {\n      setOverlap(false);\n    }\n  }, [router.pathname]);\n  useEffect(() => {\n    // Check for internal user on first pageload\n    checkInternalIp(); // Check truspilot rating\n\n    checkTrustpilot(); // Check on first route change\n\n    Router.events.on('routeChangeComplete', () => {\n      // Check for internal user on first pageload\n      checkInternalIp(); // Check truspilot rating\n\n      checkTrustpilot();\n    });\n  }, []);\n\n  const checkTrustpilot = () => {\n    if (trustPilotRating == null) {\n      GetTrustPilotRating().then(response => {\n        updateTrustPilotRating(response.data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    // Check chat status\n    // ! This is required otherwise there's a delay in showing the cirrect chat\n    checkChatStatus(); // Check chat repeater\n\n    const interval = setInterval(checkChatStatus, 15000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function checkInternalIp() {\n    if (isInternal === null) {\n      AuthenticationService.IsInternalPage().then(result => {\n        dispatchInternalCheck(result.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  var breadcrumbs = getBreadcrumbs(router);\n  useEffect(() => {\n    var _dfClassicLayers;\n\n    const productGroup = dealSelector === LeasingDealTypes.Personal ? \"PCH\" : \"CH\"; //@ts-ignore doofinder and dfClassicLayers are not declared\n\n    if (((_dfClassicLayers = dfClassicLayers) === null || _dfClassicLayers === void 0 ? void 0 : _dfClassicLayers.length) > 0) {\n      updatePriceGroup(productGroup, true);\n    }\n  }, [dealSelector]);\n  useEffect(() => {\n    let vehicleType = [];\n\n    if (vehiclePreference === VehicleTypes.Commercial) {\n      vehicleType = [\"Van\"];\n    } else if (vehiclePreference === VehicleTypes.Car) {\n      vehicleType = [\"Car\"];\n    } else {\n      vehicleType = [\"Van\", \"Car\"];\n    }\n\n    updateVehicleType(vehicleType, true);\n  }, [vehiclePreference]);\n\n  const updatePriceGroup = (priceGroup, shouldRefresh) => {\n    var _dfClassicLayers2;\n\n    //@ts-ignore doofinder and dfClassicLayers are not declared\n    if (((_dfClassicLayers2 = dfClassicLayers) === null || _dfClassicLayers2 === void 0 ? void 0 : _dfClassicLayers2.length) > 0) {\n      var _dfClassicLayers3;\n\n      //@ts-ignore dfClassicLayers is not declared\n      (_dfClassicLayers3 = dfClassicLayers) === null || _dfClassicLayers3 === void 0 ? void 0 : _dfClassicLayers3.forEach(instance => {\n        if (instance.layer) {\n          instance.layer.config.searchParams.filter.product = priceGroup;\n          instance.layerOptions.searchParams.filter.product = priceGroup;\n          instance.layer.controller.defaults.filter.product = priceGroup;\n          instance.layer.controller.params.filter.product = priceGroup;\n\n          if (shouldRefresh && instance.layer.isVisible()) {\n            instance.layer.controller.refresh();\n          }\n        }\n      });\n    }\n  };\n\n  const updateVehicleType = (vehicleType, shouldRefresh) => {\n    var _dfClassicLayers4;\n\n    //@ts-ignore doofinder and dfClassicLayers are not declared\n    if (((_dfClassicLayers4 = dfClassicLayers) === null || _dfClassicLayers4 === void 0 ? void 0 : _dfClassicLayers4.length) > 0) {\n      //@ts-ignore dfClassicLayers is not declared\n      var instance = dfClassicLayers[0];\n\n      if (instance.layer) {\n        instance.layer.config.searchParams.filter.vehicle_type = vehicleType;\n        instance.layer.controller.defaults.filter.vehicle_type = vehicleType;\n        instance.layer.controller.params.filter.vehicle_type = vehicleType;\n        instance.layerOptions.searchParams.filter.vehicle_type = vehicleType;\n\n        if (shouldRefresh && instance.layer.isVisible()) {\n          instance.layer.controller.refresh();\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.png\",\n        type: \"image/x-icon\"\n      }), metaData ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: metaData.title\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          name: \"description\",\n          content: metaData.description\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          name: \"keywords\",\n          content: metaData.keywords\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"og:type\",\n          content: \"website\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"og:url\",\n          content: process.env.NEXT_PUBLIC_CANONICALBASEURL + router.asPath\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"og:title\",\n          content: metaData.title\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"og:description\",\n          content: metaData.description\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"og:image\",\n          content: metaData.imageUrl ? metaData.imageUrl : process.env.NEXT_PUBLIC_CDN + \"/fit-in/400x400/website/static/img-placeholder.jpg\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"twitter:card\",\n          content: \"summary_large_image\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"twitter:url\",\n          content: process.env.NEXT_PUBLIC_CANONICALBASEURL + router.asPath\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"twitter:title\",\n          content: metaData.title\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"twitter:description\",\n          content: metaData.description\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"twitter:image\",\n          content: metaData.imageUrl ? metaData.imageUrl : process.env.NEXT_PUBLIC_CDN + \"/fit-in/400x400/website/static/img-placeholder.jpg\"\n        })]\n      }) : null, metaData && metaData.canonicalUrl ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(\"link\", {\n          rel: \"canonical\",\n          href: metaData.canonicalUrl\n        })\n      }) : null, metaData && metaData.ampHTML ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(\"link\", {\n          rel: \"amphtml\",\n          href: metaData.ampHTML\n        })\n      }) : null, metaData && metaData.noIndex ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(\"meta\", {\n          name: \"robots\",\n          content: \"noindex,nofollow\"\n        })\n      }) : null, metaData && metaData.author ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(\"meta\", {\n          name: \"author\",\n          content: metaData.author\n        })\n      }) : null, breadcrumbs && breadcrumbs.length > 0 ? /*#__PURE__*/_jsx(\"script\", {\n        type: \"application/ld+json\",\n        dangerouslySetInnerHTML: {\n          __html: GetSerializedSchema(GetBreadcrumbsSchema(breadcrumbs))\n        }\n      }) : null, process.env.NEXT_PUBLIC_TAGMANAGER_ENABLED == \"true\" && /*#__PURE__*/_jsx(\"script\", {\n        type: \"application/javascript\",\n        dangerouslySetInnerHTML: {\n          __html: `(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-PG5CHN');`\n        }\n      }), /*#__PURE__*/_jsx(\"script\", {\n        type: \"application/javascript\",\n        dangerouslySetInnerHTML: {\n          __html: `var doofinder_script ='//cdn.doofinder.com/media/js/doofinder-classic.7.latest.min.js';(function(d,t){var f=d.createElement(t),s=d.getElementsByTagName(t)[0];f.async=1;f.src=('https:'==location.protocol?'https:':'http:')+doofinder_script;f.setAttribute('charset','utf-8');s.parentNode.insertBefore(f,s)}(document,'script'));\n                        \n                        var dfClassicLayers = [\n                            {\n                                \"urlHash\": false,\n                                \"queryInput\": '#doofinderSearch',\n                                \"hashid\": 'bae5d6b5b54adbbd5af90c64bfaa0bc4',\n                                \"zone\": \"eu1\",\n                                \"display\": {\n                                    \"lang\": 'en',\n                                    \"width\": \"80%\",\n                                    \"align\": \"center\",\n                                    \"closeOnHit\": true,\n                                    \"captureLength\": 2,\n                                    \"wait\": 300,\n                                    \"facets\": {\n                                        \"startCollapsed\": false\n                                    }\n                                },\n                                \"mobile\": {\n                                    \"display\": {\n                                        \"width\": \"100%\",\n                                        \"captureLength\": 2,\n                                    }\n                                },\n                                \"searchParams\": {\n                                    \"transformer\": null,\n                                    \"filter\": {\n                                        price: {\n                                            gte: 0,\n                                            lte: 1000000\n                                        },\n                                        categories: [],\n                                        product: \"PCH\",\n                                        vehicle_type: \"Car\"\n                                    },\n                                    \"query_name\": \"match_and\",\n                                }\n                            },\n                            {\n                                \"queryInput\": '#headerSearch',\n                                \"hashid\": 'bae5d6b5b54adbbd5af90c64bfaa0bc4',\n                                \"zone\": \"eu1\",\n                                \"display\": {\n                                    \"lang\": 'en',\n                                    \"width\": \"80%\",\n                                    \"align\": \"center\",\n                                    \"closeOnHit\": true,\n                                    \"captureLength\": 2,\n                                    \"facets\": {\n                                        \"startCollapsed\": false\n                                    }\n                                },\n                                \"mobile\": {\n                                    \"display\": {\n                                        \"width\": \"100%\",\n                                        \"captureLength\": 2,\n                                    }\n                                },\n                                \"searchParams\": {\n                                    \"transformer\": null,\n                                    \"filter\": {\n                                        product: \"PCH\",\n                                    },\n                                    \"query_name\": \"match_and\",\n                                }\n                            }\n                        ];`\n        }\n      })]\n    }), /*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Breadcrumbs, {\n      breadcrumbs: breadcrumbs\n    }), /*#__PURE__*/_jsx(\"main\", {\n      className: className,\n      children: children\n    }), /*#__PURE__*/_jsx(Footer, {}), /*#__PURE__*/_jsx(ToTop, {}), /*#__PURE__*/_jsx(CookieBar, {}), /*#__PURE__*/_jsx(PageOverlay, {}), /*#__PURE__*/_jsx(LeaseBotIcon, {}), /*#__PURE__*/_jsx(LiveChat, {})]\n  });\n};\n\nconst mapStateToProps = state => ({\n  vehiclePreference: state.vehiclePreference,\n  dealSelector: state.dealSelector,\n  isInternal: state.isInternal,\n  trustPilotRating: state.trustPilotRating\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchInternalCheck: internal => {\n      dispatch({\n        type: \"UPDATE_INTERNAL\",\n        internal: internal\n      });\n    },\n    updateTrustPilotRating: data => {\n      dispatch({\n        type: 'UPDATE_TRUSTPILOT_RATING',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);","map":null,"metadata":{},"sourceType":"module"}