{"ast":null,"code":"import _regeneratorRuntime from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { parseCookies, setCookie } from 'nookies';\nimport { HasSeenMarketingForm as _HasSeenMarketingForm, SetToSeenMarketingForm as _SetToSeenMarketingForm } from \"./systemService\";\nexport var MarketingCommunicationsService = /*#__PURE__*/function () {\n  function MarketingCommunicationsService() {\n    _classCallCheck(this, MarketingCommunicationsService);\n  }\n\n  _createClass(MarketingCommunicationsService, null, [{\n    key: \"HasSeenMarketingForm\",\n    value: function () {\n      var _HasSeenMarketingForm2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(emailAddress) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  var cookies = parseCookies();\n                  var hasSeenConsentFormEmail = cookies.HasSeenConsentForm;\n\n                  if (emailAddress != hasSeenConsentFormEmail) {\n                    _HasSeenMarketingForm(emailAddress).then(function (response) {\n                      var result = response.isSucceed ? response.data : false;\n                      resolve(result);\n                    });\n                  } else {\n                    resolve(true);\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function HasSeenMarketingForm(_x) {\n        return _HasSeenMarketingForm2.apply(this, arguments);\n      }\n\n      return HasSeenMarketingForm;\n    }()\n  }, {\n    key: \"SetToSeenMarketingForm\",\n    value: function () {\n      var _SetToSeenMarketingForm2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(emailAddress, expiryDate) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", _SetToSeenMarketingForm(emailAddress).then(function (response) {\n                  if (response.status.code === 0) {\n                    setCookie(null, \"HasSeenConsentForm\", emailAddress, {\n                      expires: expiryDate,\n                      path: '/'\n                    });\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function SetToSeenMarketingForm(_x2, _x3) {\n        return _SetToSeenMarketingForm2.apply(this, arguments);\n      }\n\n      return SetToSeenMarketingForm;\n    }()\n  }]);\n\n  return MarketingCommunicationsService;\n}();","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/Website/business-logic/marketingCommunicationsService.tsx"],"names":["parseCookies","setCookie","HasSeenMarketingForm","SetToSeenMarketingForm","MarketingCommunicationsService","emailAddress","Promise","resolve","cookies","hasSeenConsentFormEmail","HasSeenConsentForm","then","response","result","isSucceed","data","expiryDate","status","code","expires","path"],"mappings":";;;;AACA,SAASA,YAAT,EAAuBC,SAAvB,QAAwC,SAAxC;AACA,SAASC,oBAAoB,IAApBA,qBAAT,EAA+BC,sBAAsB,IAAtBA,uBAA/B,QAA6D,iBAA7D;AAEA,WAAaC,8BAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6GAC6CC,YAD7C;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEe,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5B,sBAAMC,OAAO,GAAGR,YAAY,EAA5B;AACA,sBAAMS,uBAAuB,GAAGD,OAAO,CAACE,kBAAxC;;AAEA,sBAAIL,YAAY,IAAII,uBAApB,EAA6C;AACzCP,oBAAAA,qBAAoB,CAACG,YAAD,CAApB,CACKM,IADL,CACU,UAACC,QAAD,EAA2B;AAC7B,0BAAMC,MAAM,GAAGD,QAAQ,CAACE,SAAT,GAAqBF,QAAQ,CAACG,IAA9B,GAAqC,KAApD;AACAR,sBAAAA,OAAO,CAACM,MAAD,CAAP;AACH,qBAJL;AAKH,mBAND,MAOK;AACDN,oBAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,iBAdM,CAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAmB+CF,YAnB/C,EAmBqEW,UAnBrE;AAAA;AAAA;AAAA;AAAA;AAAA,kDAoBeb,uBAAsB,CAACE,YAAD,CAAtB,CACFM,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,sBAAIA,QAAQ,CAACK,MAAT,CAAgBC,IAAhB,KAAyB,CAA7B,EAAgC;AAC5BjB,oBAAAA,SAAS,CAAC,IAAD,EAAO,oBAAP,EAA6BI,YAA7B,EAA2C;AAAEc,sBAAAA,OAAO,EAAEH,UAAX;AAAuBI,sBAAAA,IAAI,EAAE;AAA7B,qBAA3C,CAAT;AACH;AACJ,iBALE,CApBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["import { ApiResponse } from \"types/infrastructure/ApiResponse\";\r\nimport { parseCookies, setCookie } from 'nookies';\r\nimport { HasSeenMarketingForm, SetToSeenMarketingForm } from \"./systemService\";\r\n\r\nexport class MarketingCommunicationsService {\r\n    public static async HasSeenMarketingForm(emailAddress: string) {\r\n        return new Promise((resolve) => {\r\n            const cookies = parseCookies();\r\n            const hasSeenConsentFormEmail = cookies.HasSeenConsentForm;\r\n\r\n            if (emailAddress != hasSeenConsentFormEmail) {\r\n                HasSeenMarketingForm(emailAddress)\r\n                    .then((response: ApiResponse) => {\r\n                        const result = response.isSucceed ? response.data : false;\r\n                        resolve(result);\r\n                    });\r\n            }\r\n            else {\r\n                resolve(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    public static async SetToSeenMarketingForm(emailAddress: string, expiryDate: Date) {\r\n        return SetToSeenMarketingForm(emailAddress)\r\n            .then(response => {\r\n                if (response.status.code === 0) {\r\n                    setCookie(null, \"HasSeenConsentForm\", emailAddress, { expires: expiryDate, path: '/' });\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}