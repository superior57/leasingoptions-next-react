{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getUrl } from 'helpers/urlsHelper';\nexport class ContentAPI {\n  static async GetNewsArticlePreviews(newsType, tagIds, pageIndex, pageSize) {\n    let apiUrl = `api/news/getnewsarticlepreviews?filter[newsTypeId]=${newsType}&paginationCriteria[pageIndex]=${pageIndex}&paginationCriteria[pageSize]=${pageSize}`;\n\n    if (tagIds) {\n      apiUrl += apiUrl + `&filter[tagIds]=${tagIds}`;\n    }\n\n    const res = await fetch(this.baseUrl + apiUrl);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetRelatedArticles(id) {\n    const res = await fetch(this.baseUrl + `api/news/getarticle/${id}/related`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetTopNews() {\n    const res = await fetch(this.baseUrl + `api/news/gettopnews`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetCategoryRelatedArticles(newsType) {\n    const res = await fetch(this.baseUrl + `api/news/getcategory/${newsType}/relatedarticles`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetCategoryPopularArticles(newsType) {\n    const res = await fetch(this.baseUrl + `api/news/getcategory/${newsType}/populararticles`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetNewsArticle(newsArticleId, isAmp = false) {\n    const res = await fetch(this.baseUrl + `api/news/newsarticle/${newsArticleId}?isamp=${isAmp}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetTags() {\n    const res = await fetch(this.baseUrl + `api/tags/list`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetPopularContentItems(tagIds = [], take = null) {\n    let queryStringParts = [];\n\n    if (tagIds && tagIds.length > 0) {\n      for (let idx = 0; idx < tagIds.length; idx++) {\n        queryStringParts.push(`tagids[${idx}]=${tagIds[idx]}`);\n      }\n    }\n\n    if (take && take > 0) {\n      queryStringParts.push(`takecount=${take}`);\n    }\n\n    const url = getUrl(this.baseUrl + 'api/content/items/getpopular', queryStringParts);\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetContentCategories() {\n    const res = await fetch(this.baseUrl + `api/content/categories/list`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetContentItems(categoryId) {\n    const res = await fetch(this.baseUrl + `api/content/items/list?filter[categoryid]=${categoryId}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetGuideItems(categoryId = null, pageIndex, pageSize) {\n    const res = await fetch(this.baseUrl + `/api/content/items/pagedlist?filter%5BcategoryId%5D=${categoryId}&paginationCriteria%5BpageIndex%5D=${pageIndex}&paginationCriteria%5BpageSize%5D=${pageSize}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetManufacturePageContent(contentType, leaseDealType, manufacturerUrl) {\n    const res = await fetch(this.baseUrl + `api/content/custom/get?criteria.contentType=${contentType}&criteria.leasingDealType=${leaseDealType}&criteria.manufacturer=${manufacturerUrl}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetModelPageContent(contentType, leaseDealType, manufacturerUrl, modelUrl) {\n    const res = await fetch(this.baseUrl + `api/content/custom/get?criteria.contentType=${contentType}&criteria.leasingDealType=${leaseDealType}&criteria.manufacturer=${manufacturerUrl}&criteria.shortModel=${modelUrl}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetCustomPageContent(contentType, vehicleType, key) {\n    let url = this.baseUrl + `api/content/custom/get?criteria.contentType=${contentType}&criteria.vehicleType=${vehicleType}`;\n\n    if (key) {\n      url += `&criteria.key=${key}`;\n    }\n\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetFaqListAll() {\n    const res = await fetch(this.baseUrl + 'api/faq/list');\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetFaqList(categoryId = 0) {\n    let FaqUrl = this.baseUrl + 'api/faq/listfaqs';\n\n    if (categoryId !== 0) {\n      FaqUrl += '?categoryIds=' + categoryId;\n    }\n\n    const res = await fetch(FaqUrl);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetFaqSearchResults(searchTerm, pageIndex, pageSize) {\n    const res = await fetch(this.baseUrl + 'api/faq/search?searchTerm=' + searchTerm + '&pageSize=' + pageSize + '&pageIndex=' + pageIndex);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetAdviceGuidesFaqs(categoryId = null, take = null) {\n    let takePart = '';\n    let queryParams = '';\n\n    if (categoryId && categoryId > 0) {\n      queryParams += '&categoryid=' + categoryId;\n    }\n\n    if (take !== null && take > 0) {\n      if (queryParams) {\n        takePart += '&';\n      } else {\n        takePart += '?';\n      }\n\n      takePart += 'takecount=' + take;\n    }\n\n    const res = await fetch(this.baseUrl + `api/faq/contenthub` + queryParams + takePart);\n    const data = await res.json();\n    return data;\n  }\n\n  static async IncrementLikes(postID) {\n    const res = await fetch(this.baseUrl + `api/news/incrementlikes/${postID}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async IncrementDislikes(postID) {\n    const res = await fetch(this.baseUrl + `api/news/incrementdislikes/${postID}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetNewsSearchList(newsType, searchTerm) {\n    const res = await fetch(this.baseUrl + `api/news/list?filter%5BnewsTypeId%5D=${newsType}&filter%5BsearchTerm%5D=${searchTerm}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetGuidesSearchList(categoryId, searchTerm) {\n    const res = await fetch(this.baseUrl + `api/content/items/list?filter%5BcategoryId%5D=${categoryId}&filter%5BsearchTerm%5D=${searchTerm}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetByUrl(urlString, isAmp = false) {\n    const res = await fetch(this.baseUrl + `api/content/items/getbyurl/${urlString}?isamp=${isAmp}`);\n    const data = await res.json();\n    return data;\n  }\n\n  static async GetTotalLeasedValues() {\n    const res = await fetch(this.baseUrl + 'api/commoninfo/totalleasedvalues');\n    const data = await res.json();\n    return data;\n  }\n\n}\n\n_defineProperty(ContentAPI, \"baseUrl\", process.env.NEXT_PUBLIC_MICROSERVICE_CONTENT_URL);","map":null,"metadata":{},"sourceType":"module"}