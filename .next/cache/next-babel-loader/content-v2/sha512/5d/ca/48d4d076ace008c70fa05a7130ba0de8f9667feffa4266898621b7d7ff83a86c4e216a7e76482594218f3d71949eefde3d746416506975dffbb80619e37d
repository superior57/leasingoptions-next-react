{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { VerifySalesPerson as _VerifySalesPerson, CheckInformationNoticAcceptance as _CheckInformationNoticAcceptance } from \"./systemService\";\nexport var QuotesService = /*#__PURE__*/function () {\n  function QuotesService() {\n    _classCallCheck(this, QuotesService);\n  }\n\n  _createClass(QuotesService, null, [{\n    key: \"VerifySalesPerson\",\n    value: function () {\n      var _VerifySalesPerson2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(salesPersonId, emailAddress, telephone) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _VerifySalesPerson(salesPersonId, emailAddress, telephone));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function VerifySalesPerson(_x, _x2, _x3) {\n        return _VerifySalesPerson2.apply(this, arguments);\n      }\n\n      return VerifySalesPerson;\n    }()\n  }, {\n    key: \"CheckInformationNoticAcceptance\",\n    value: function () {\n      var _CheckInformationNoticAcceptance2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(emailAddress, telephone) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                  _CheckInformationNoticAcceptance(emailAddress, telephone).then(function (response) {\n                    var result = response.isSucceed ? response.data : false;\n                    resolve(result);\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function CheckInformationNoticAcceptance(_x4, _x5) {\n        return _CheckInformationNoticAcceptance2.apply(this, arguments);\n      }\n\n      return CheckInformationNoticAcceptance;\n    }()\n  }]);\n\n  return QuotesService;\n}();","map":null,"metadata":{},"sourceType":"module"}