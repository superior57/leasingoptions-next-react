{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { isNullOrWhiteSpace } from './stringHelper';\nimport { getQueryParams } from './urlsHelper';\nimport { SiteSettings } from 'environment/siteSettings';\nimport { GetVehicleCheapestPriceTerm } from 'business-logic/vehicleService';\nexport var CustomOptionsHelper = /*#__PURE__*/function () {\n  function CustomOptionsHelper() {\n    _classCallCheck(this, CustomOptionsHelper);\n  }\n\n  _createClass(CustomOptionsHelper, null, [{\n    key: \"getVehicleCustomOptions\",\n    value: function getVehicleCustomOptions(data, callback) {\n      var values = {};\n      var isDefault = false;\n      var parts = data.url.split('?');\n      var queryStringParams = parts[1] ? getQueryParams(parts[1].split('&')) : null;\n\n      if (queryStringParams) {\n        var parsedInt = NaN;\n        parsedInt = parseInt(queryStringParams[\"term\"]);\n\n        if (!isNaN(parsedInt)) {\n          values[\"term\"] = parsedInt;\n        }\n\n        parsedInt = parseInt(queryStringParams[\"initialrentals\"]);\n\n        if (!isNaN(parsedInt)) {\n          values[\"initialRentalMonths\"] = parsedInt;\n        }\n\n        parsedInt = parseInt(queryStringParams[\"mileage\"]);\n\n        if (!isNaN(parsedInt)) {\n          values[\"mileage\"] = parsedInt;\n        }\n\n        isDefault = !isNullOrWhiteSpace(queryStringParams[\"isdefault\"]) && queryStringParams[\"isdefault\"] === \"1\";\n      }\n\n      if (data.pricingType && data.pricingType === 2) {\n        //isAtcPricing\n        values[\"maintenance\"] = true;\n      } else if (!data.maintenanceAllowed) {\n        values[\"maintenance\"] = false;\n      }\n\n      var customOptions = CustomOptionsStorageHelper.getOrAddVehicleCustomOptions(data.vehicleRef, data.leasingDealType, isDefault, values);\n\n      if (customOptions.useCheapestTerm) {\n        var pricingData = {\n          pricingType: data.pricingType || undefined,\n          postcode: data.postcode || undefined\n        };\n        GetVehicleCheapestPriceTerm(customOptions.vehicleRef, customOptions.leasingDealType, customOptions.maintenance, customOptions.mileage, customOptions.initialRentalMonths, pricingData).then(function (result) {\n          var cheapestTerm = null;\n\n          if (result.isSucceed && result.data) {\n            cheapestTerm = result.data;\n          }\n\n          customOptions.useCheapestTerm = false;\n\n          if (cheapestTerm && cheapestTerm > 0) {\n            customOptions.term = cheapestTerm;\n          }\n\n          CustomOptionsStorageHelper.addOrUpdateVehicleCustomOptions(customOptions);\n          callback(customOptions);\n        });\n      } else {\n        callback(customOptions);\n      }\n    }\n  }, {\n    key: \"storeVehicleCustomOptions\",\n    value: function storeVehicleCustomOptions(customOptions) {\n      if (customOptions) {\n        customOptions.useCheapestTerm = false;\n        CustomOptionsStorageHelper.addOrUpdateVehicleCustomOptions(customOptions);\n      }\n    }\n  }]);\n\n  return CustomOptionsHelper;\n}();\nexport var CustomOptionsStorageHelper = /*#__PURE__*/function () {\n  function CustomOptionsStorageHelper() {\n    _classCallCheck(this, CustomOptionsStorageHelper);\n  }\n\n  _createClass(CustomOptionsStorageHelper, null, [{\n    key: \"getOrAddVehicleCustomOptions\",\n    value: function getOrAddVehicleCustomOptions(vehicleRef, leasingDealType, setToDefault, values) {\n      var customOptions = this.getVehicleCustomOptions(vehicleRef, leasingDealType);\n\n      if (!customOptions || setToDefault) {\n        customOptions = {\n          vehicleRef: vehicleRef,\n          leasingDealType: leasingDealType,\n          term: SiteSettings.DefaultTerm,\n          mileage: SiteSettings.GetDealTypeDefaultMileage(leasingDealType),\n          maintenance: SiteSettings.DefaultMaintenance,\n          initialRentalMonths: SiteSettings.DefaultInitialRentals,\n          options: [],\n          salesCode: 0,\n          ageCategory: null,\n          useCheapestTerm: true\n        };\n      }\n\n      Object.assign(customOptions, values || {});\n      this.addOrUpdateVehicleCustomOptions(customOptions);\n      return customOptions;\n    }\n  }, {\n    key: \"addOrUpdateVehicleCustomOptions\",\n    value: function addOrUpdateVehicleCustomOptions(customOptions) {\n      if (customOptions !== null) {\n        var key = this.getOptionsItemKey(customOptions.vehicleRef, customOptions.leasingDealType);\n        localStorage.setItem(key, JSON.stringify(customOptions));\n      }\n    }\n  }, {\n    key: \"getVehicleCustomOptions\",\n    value: function getVehicleCustomOptions(vehicleRef, leasingDealType) {\n      var customOptions = null;\n\n      if (vehicleRef && leasingDealType) {\n        var key = this.getOptionsItemKey(vehicleRef, leasingDealType);\n        var serializedItem = localStorage.getItem(key);\n        customOptions = JSON.parse(serializedItem);\n      }\n\n      return customOptions;\n    }\n  }, {\n    key: \"getOptionsItemKey\",\n    value: function getOptionsItemKey(vehicleRef, leasingDealType) {\n      return (\"options_\" + vehicleRef + \"_\" + leasingDealType).toLowerCase();\n    }\n  }]);\n\n  return CustomOptionsStorageHelper;\n}();","map":null,"metadata":{},"sourceType":"module"}