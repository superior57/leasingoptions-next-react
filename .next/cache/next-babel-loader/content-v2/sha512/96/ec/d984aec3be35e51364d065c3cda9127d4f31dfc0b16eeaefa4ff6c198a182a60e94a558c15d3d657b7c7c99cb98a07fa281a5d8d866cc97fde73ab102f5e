{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\current_project\\\\PPH\\\\tfs\\\\Website\\\\Website\\\\components\\\\layout\\\\navigation\\\\navigation-models.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport style from './navigation.module.scss';\nimport { VehicleTypes } from 'enums/VehicleTypes';\nimport { GetDealTypeUrl } from 'helpers/urlHelper';\nimport { connect } from 'react-redux';\nimport { GetModels } from 'business-logic/vehicleService';\n\nfunction mapStateToProps(state) {\n  return {\n    carManufacturerList: state.carManufacturerList,\n    vanManufacturerList: state.vanManufacturerList\n  };\n}\n\nvar NavModel = function NavModel(_ref) {\n  _s();\n\n  var id = _ref.id,\n      VehicleType = _ref.VehicleType,\n      dealSelector = _ref.dealSelector,\n      otherProps = _objectWithoutProperties(_ref, [\"id\", \"VehicleType\", \"dealSelector\"]);\n\n  var _useState = useState(),\n      manfacturer = _useState[0],\n      setManufacturer = _useState[1];\n\n  var _useState2 = useState([]),\n      modelList = _useState2[0],\n      setModelList = _useState2[1];\n\n  var manufacturerList = VehicleType === VehicleTypes.Commercial ? otherProps.vanManufacturerList : otherProps.carManufacturerList;\n\n  var handleModelRequest = function handleModelRequest(evt) {\n    var manfacturerUrl = evt.currentTarget.value;\n    setManufacturer(manfacturerUrl);\n\n    if (manfacturerUrl) {\n      GetModels(VehicleType, manfacturerUrl).then(function (data) {\n        setModelList(data.data);\n      });\n    }\n  };\n\n  var handleModelClick = function handleModelClick(model) {\n    if (manfacturer) {\n      GetModels(VehicleType, manfacturer).then(function (data) {\n        setModelList(data.data);\n      });\n    }\n\n    Router.push(GetDealTypeUrl(dealSelector, '/[make]/[shortModel]'), GetDealTypeUrl(dealSelector, '/' + manfacturer + '/' + model));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: style['panel-content'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(evt) {\n          return handleModelRequest(evt);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, _this), manufacturerList.map(function (manufacturer) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: manufacturer.id,\n            children: manufacturer.text\n          }, manufacturer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(evt) {\n          return handleModelClick(evt.currentTarget.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, _this), modelList.map(function (model) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model.id,\n            children: model.text\n          }, model.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(NavModel, \"gt3C5CpV2p35L8mJyFWEJT4kLEQ=\");\n\n_c = NavModel;\nexport default connect(mapStateToProps)(NavModel);\n\nvar _c;\n\n$RefreshReg$(_c, \"NavModel\");","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/Website/components/layout/navigation/navigation-models.tsx"],"names":["React","useState","Router","style","VehicleTypes","GetDealTypeUrl","connect","GetModels","mapStateToProps","state","carManufacturerList","vanManufacturerList","NavModel","id","VehicleType","dealSelector","otherProps","manfacturer","setManufacturer","modelList","setModelList","manufacturerList","Commercial","handleModelRequest","evt","manfacturerUrl","currentTarget","value","then","data","handleModelClick","model","push","map","manufacturer","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport  Router from 'next/router';\r\nimport style from './navigation.module.scss';\r\nimport { VehicleTypes } from 'enums/VehicleTypes';\r\nimport { GetDealTypeUrl } from 'helpers/urlHelper';\r\nimport { connect } from 'react-redux';\r\nimport { GetModels } from 'business-logic/vehicleService';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        carManufacturerList: state.carManufacturerList,\r\n        vanManufacturerList: state.vanManufacturerList,\r\n    };\r\n}\r\n\r\nconst NavModel = ({id, VehicleType, dealSelector, ...otherProps}) => {\r\n    const [manfacturer, setManufacturer] = useState<string>();\r\n    const [modelList, setModelList] = useState([]);\r\n    let manufacturerList = (VehicleType === VehicleTypes.Commercial  ? otherProps.vanManufacturerList : otherProps.carManufacturerList);\r\n    const handleModelRequest = (evt) => {\r\n        const manfacturerUrl = evt.currentTarget.value;\r\n        setManufacturer(manfacturerUrl);\r\n\r\n        if (manfacturerUrl) {\r\n            GetModels(VehicleType, manfacturerUrl).then((data) => {\r\n                setModelList(data.data);\r\n            });\r\n        }\r\n    }\r\n    const handleModelClick = (model: string) => {\r\n        if (manfacturer) {\r\n            GetModels(VehicleType, manfacturer).then((data) => {\r\n                setModelList(data.data);\r\n            });\r\n        }\r\n        Router.push(GetDealTypeUrl(dealSelector, '/[make]/[shortModel]'), GetDealTypeUrl(dealSelector, '/'+manfacturer+'/' + model))\r\n    }\r\n\r\n    return (\r\n        <div id={id} className={style['panel-content']}>\r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\" onChange={(evt) => handleModelRequest(evt)}>\r\n                    <option value=\"\">Select Make</option>\r\n                    {manufacturerList.map(manufacturer => \r\n                        <option key={manufacturer.id} value={manufacturer.id}>{manufacturer.text}</option>\r\n                    )}\r\n                </select>\r\n            </div> \r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\"  onChange={(evt) => handleModelClick(evt.currentTarget.value)}>\r\n                    <option value=\"\">Select Model</option>\r\n                    {modelList.map(model => \r\n                        <option key={model.id} value={model.id}>{model.text}</option>\r\n                    )}\r\n                </select>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavModel); "]},"metadata":{},"sourceType":"module"}