{"ast":null,"code":"import { VehicleTypes } from \"enums/VehicleTypes\";\nimport { LeasingDealTypes } from \"enums/LeasingDealTypes\";\nimport { PricingTypes } from \"enums/PricingTypes\";\nimport { formatAtcPostcode, isNullOrEmpty } from \"./helpers\";\nimport { SiteSettings } from \"../environment/siteSettings\";\nexport const GetPricingTypeFromUrl = url => {\n  if (url.includes(\"car-leasing-with-insurance\")) {\n    return PricingTypes.Atc;\n  } else {\n    return PricingTypes.Standard;\n  }\n};\nexport const getVehiclesFilter = context => {\n  const url = context.req.url.replace(\"/internal\", \"\");\n  let vehicleFilter = {\n    pricingType: context.query.pricingType ? context.query.pricingType : GetPricingTypeFromUrl(url),\n    //---------------------------------\n    vehicleType: VehicleTypes.None,\n    leasingDealType: LeasingDealTypes.None,\n    //-------------------------------------\n    postcode: context.query.postcode ? formatAtcPostcode(context.query.postcode) : null,\n    // NOT SURE,\n    manufacturerUrl: context.query.make ? context.query.make : null,\n    shortModTextUrl: context.query.shortModel ? context.query.shortModel : null,\n    modelUrl: context.query.model ? context.query.model : null,\n    maintenance: context.query.maintenance ? context.query.maintenance == \"true\" : process.env.NEXT_PUBLIC_DEFAULT_MAINTENANCE == \"true\",\n    isSpecial: context.query.isspecial ? context.query.isspecial == \"true\" : null,\n    isInStock: context.query.isinstock ? context.query.isinstock == \"true\" : null,\n    priceFrom: context.query.pricefrom ? parseInt(context.query.pricefrom) : 0,\n    priceTo: context.query.priceto ? parseInt(context.query.priceto) : null\n  };\n\n  if (url.startsWith(\"/car-leasing\") || url.startsWith(\"/short-term-car-leasing\")) {\n    vehicleFilter.vehicleType = VehicleTypes.Car;\n    vehicleFilter.leasingDealType = !isNullOrEmpty(context.query.leasingdeal) && context.query.leasingdeal === \"business\" ? LeasingDealTypes.Business : LeasingDealTypes.Personal;\n  } else if (url.startsWith(\"/business-car-leasing\")) {\n    vehicleFilter.vehicleType = VehicleTypes.Car;\n    vehicleFilter.leasingDealType = LeasingDealTypes.Business;\n  } else if (url.startsWith(\"/van-leasing\") || url.startsWith(\"/short-term-van-leasing\")) {\n    vehicleFilter.vehicleType = VehicleTypes.Commercial;\n    vehicleFilter.leasingDealType = LeasingDealTypes.Van;\n  }\n\n  let parsedInt = NaN;\n  parsedInt = parseInt(context.query.term);\n  vehicleFilter.term = !isNaN(parsedInt) ? parsedInt : null;\n  parsedInt = parseInt(context.query.rentals);\n  vehicleFilter.initialRentals = !isNaN(parsedInt) ? parsedInt : null;\n  parsedInt = parseInt(context.query.mileage);\n  vehicleFilter.mileage = !isNaN(parsedInt) ? parsedInt : null; //if (queryString[\"maintenance\"] === \"true\" || queryString[\"maintenance\"] === \"false\") {\n  //    filter.maintenance = queryString[\"maintenance\"] === \"true\";\n  //}\n  //if (routeData[\"isspecialoffer\"]) {\n  //    filter.isSpecial = routeData[\"isspecialoffer\"];\n  //}\n  //else if (!LO.isNullOrEmpty(queryString[\"isspecial\"]) && (queryString[\"isspecial\"] === \"true\" || queryString[\"isspecial\"] === \"false\")) {\n  //    filter.isSpecial = queryString[\"isspecial\"] === \"true\";\n  //}\n  //else {\n  //    filter.isSpecial = null;\n  //}\n  //if (routeData[\"option\"] && routeData[\"option\"] === \"instock\") {\n  //    filter.isInStock = routeData[\"optionvalue\"];\n  //}\n  //else if (!LO.isNullOrEmpty(queryString[\"isinstock\"]) && (queryString[\"isinstock\"] === \"true\" || queryString[\"isinstock\"] === \"false\")) {\n  //    filter.isInStock = queryString[\"isinstock\"] === \"true\";\n  //}\n  //else {\n  //    filter.isInStock = null;\n  //}\n  //tempValue = routeData[\"option\"] && routeData[\"option\"] === \"budgetover\" ? routeData[\"optionvalue\"] : queryString[\"pricefrom\"];\n  //parsedInt = parseInt(tempValue);\n  //filter.priceFrom = (!isNaN(parsedInt) && parsedInt > 0) ? parsedInt : null;\n  //tempValue = routeData[\"option\"] && routeData[\"option\"] === \"budgetto\" ? routeData[\"optionvalue\"] : queryString[\"priceto\"];\n  //parsedInt = parseInt(tempValue);\n  //filter.priceTo = (!isNaN(parsedInt) && parsedInt > 0) ? parsedInt : null;\n\n  parsedInt = parseInt(context.query.fuel);\n  vehicleFilter.fuelType = !isNaN(parsedInt) ? parsedInt : null;\n  parsedInt = parseInt(context.query.gear);\n  vehicleFilter.transmission = !isNaN(parsedInt) ? parsedInt : null;\n  vehicleFilter.engineSize = !isNullOrEmpty(context.query.engine) ? context.query.engine : null;\n  vehicleFilter.shortDerTextUrl = !isNullOrEmpty(context.query.trimlevel) ? context.query.trimlevel : null;\n\n  if (vehicleFilter.leasingDealType === LeasingDealTypes.Van) {\n    vehicleFilter.seats = null;\n    vehicleFilter.mpg = null;\n    vehicleFilter.co2 = null;\n    vehicleFilter.driveTrain = null;\n    vehicleFilter.doors = null;\n  } else {\n    vehicleFilter.driveTrain = !isNullOrEmpty(context.query.drivetrain) ? context.query.drivetrain.toUpperCase() : null;\n    parsedInt = parseInt(context.query.doors);\n    vehicleFilter.doors = !isNaN(parsedInt) ? parsedInt : null;\n    parsedInt = parseInt(context.query.seats);\n    vehicleFilter.seats = !isNaN(parsedInt) ? parsedInt : null;\n    parsedInt = parseInt(context.query.mpg);\n    vehicleFilter.mpg = !isNaN(parsedInt) ? parsedInt : null;\n    parsedInt = parseInt(context.query.co2);\n    vehicleFilter.co2 = !isNaN(parsedInt) ? parsedInt : null;\n  } //filter.vehicleStyle = null;\n  //if (routeData[\"option\"] && routeData[\"option\"] === \"category\") {\n  //    var categoryId = null;\n  //    if (!LO.isNullOrEmpty(routeData[\"optionvalue\"])) {\n  //        var vehicleStyles = [\n  //            { name: \"coupe\", value: 1, type: 1 },\n  //            { name: \"convertible-cabriolet\", value: 3, type: 1 },\n  //            { name: \"hatchback\", value: 4, type: 1 },\n  //            { name: \"saloon\", value: 5, type: 1 },\n  //            { name: \"estate\", value: 6, type: 1 },\n  //            { name: \"suv-crossover\", value: 7, type: 1 },\n  //            { name: \"mpv\", value: 10, type: 1 },\n  //            { name: \"sports-car\", value: 11, type: 1 },\n  //            { name: \"small\", value: 14, type: 2 },\n  //            { name: \"medium\", value: 15, type: 2 },\n  //            { name: \"large\", value: 16, type: 2 },\n  //            { name: \"pickup\", value: 17, type: 2 },\n  //            { name: \"crew\", value: 18, type: 2 },\n  //            { name: \"dropside\", value: 19, type: 2 },\n  //            { name: \"luton\", value: 20, type: 2 }\n  //        ];\n  //        var vehicleStyle = _.find(vehicleStyles, function (item) { return item.name === routeData[\"optionvalue\"]; });\n  //        if (vehicleStyle) {\n  //            categoryId = vehicleStyle.value;\n  //        }\n  //    }\n  //    filter.vehicleStyle = categoryId;\n  //}\n  //else {\n\n\n  parsedInt = parseInt(context.query.vehiclestyle);\n  vehicleFilter.vehicleStyle = !isNaN(parsedInt) ? parsedInt : null; //}\n\n  parsedInt = parseInt(context.query.vehiclesize);\n  vehicleFilter.vehicleSize = !isNaN(parsedInt) ? parsedInt : null;\n  vehicleFilter.mileage = vehicleFilter.mileage || SiteSettings.GetDealTypeDefaultMileage(vehicleFilter.leasingDealType);\n  vehicleFilter.maintenance = vehicleFilter.maintenance || false;\n\n  if (!vehicleFilter.initialRentals\n  /*|| ![1, 3, 6, 9, 12].includes(vehicleFilter.initialRentals)*/\n  ) {\n      vehicleFilter.initialRentals = SiteSettings.DefaultInitialRentals;\n    }\n\n  return vehicleFilter;\n};","map":null,"metadata":{},"sourceType":"module"}