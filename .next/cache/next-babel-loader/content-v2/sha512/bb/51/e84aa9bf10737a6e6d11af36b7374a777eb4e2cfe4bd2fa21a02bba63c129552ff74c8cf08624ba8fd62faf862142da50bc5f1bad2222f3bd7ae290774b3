{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\current_project\\\\PPH\\\\tfs\\\\Website\\\\website\\\\components\\\\layout\\\\modal-postcode\\\\modal-postcode.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport { FormatValidatePostcode, AddSpaceToPostcode } from 'helpers/helpers';\nimport ModalContext from '../../HOCs/modal/modalContext';\nimport Search from '../../search';\nimport { SearchPanels } from '../../../enums/SearchPanels';\n\nfunction mapStateToProps(state) {\n  return {\n    dealToggle: state.dealSelector,\n    vehicleFilters: state.vehicleFilters,\n    userPostcode: state.userPostcode\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateUserPostcode: function updateUserPostcode(userPostcode) {\n      dispatch({\n        type: 'UPDATE_POSTCODE',\n        userPostcode: userPostcode\n      });\n    }\n  };\n};\n\nvar ModalPostcode = function ModalPostcode(_ref) {\n  _s();\n\n  var onRequestClose = _ref.onRequestClose,\n      title = _ref.title,\n      userPostcode = _ref.userPostcode,\n      updateUserPostcode = _ref.updateUserPostcode,\n      otherProps = _objectWithoutProperties(_ref, [\"onRequestClose\", \"title\", \"userPostcode\", \"updateUserPostcode\"]);\n\n  var modalContext = useContext(ModalContext);\n  var postcodeRef = useRef();\n\n  var _useState = useState(false),\n      isSubmitted = _useState[0],\n      setIsSubmitted = _useState[1];\n\n  var _useState2 = useState(false),\n      isValidated = _useState2[0],\n      setIsValidated = _useState2[1];\n\n  var handlePostcodeSubmit = function handlePostcodeSubmit(evt) {\n    evt.preventDefault();\n    var enteredPostcode = postcodeRef.current.value.toLowerCase();\n\n    if (FormatValidatePostcode(enteredPostcode)) {\n      setIsValidated(true);\n      updateUserPostcode(AddSpaceToPostcode(enteredPostcode));\n    } else {\n      setIsValidated(false);\n      updateUserPostcode(null);\n    }\n\n    setIsSubmitted(true);\n\n    if (FormatValidatePostcode(enteredPostcode)) {\n      modalContext.showModal(Search, {\n        show: true,\n        title: \"Refine Search\",\n        activePanel: SearchPanels.SearchDetailed\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, _objectSpread(_objectSpread({\n      onHide: onRequestClose,\n      centered: true\n    }, otherProps), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"d-flex flex-nowrap justify-content-center align-items-center\",\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"text-center mb-0\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 py-3 px-3 px-md-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: \"Please enter a full postcode.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-24 form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: postcodeRef,\n                className: \"form-control \".concat(isSubmitted && !isValidated ? 'is-invalid' : ''),\n                placeholder: \"AB12 3CD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-24 d-flex align-items-center justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success btn-lg\",\n                onClick: function onClick(evt) {\n                  return handlePostcodeSubmit(evt);\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ModalPostcode, \"gwu9NFj3QUJLfgoOSVGWdJOgrTU=\");\n\n_c = ModalPostcode;\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalPostcode);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPostcode\");","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/website/components/layout/modal-postcode/modal-postcode.tsx"],"names":["React","useRef","useState","useContext","connect","Modal","FormatValidatePostcode","AddSpaceToPostcode","ModalContext","Search","SearchPanels","mapStateToProps","state","dealToggle","dealSelector","vehicleFilters","userPostcode","mapDispatchToProps","dispatch","updateUserPostcode","type","ModalPostcode","onRequestClose","title","otherProps","modalContext","postcodeRef","isSubmitted","setIsSubmitted","isValidated","setIsValidated","handlePostcodeSubmit","evt","preventDefault","enteredPostcode","current","value","toLowerCase","showModal","show","activePanel","SearchDetailed"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FormatValidatePostcode, AddSpaceToPostcode } from 'helpers/helpers';\r\nimport ModalContext from '../../HOCs/modal/modalContext';\r\nimport Search from '../../search';\r\nimport { SearchPanels } from '../../../enums/SearchPanels';\r\n\r\ntype Props = {\r\n    onRequestClose: any;\r\n    title: string;\r\n    userPostcode: string;\r\n    updateUserPostcode: any;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dealToggle: state.dealSelector,\r\n        vehicleFilters: state.vehicleFilters,\r\n        userPostcode: state.userPostcode,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUserPostcode: (userPostcode) => {\r\n            dispatch({ type: 'UPDATE_POSTCODE', userPostcode: userPostcode });\r\n        },\r\n    }\r\n}\r\n\r\nconst ModalPostcode: React.FC<Props> = ({ onRequestClose, title, userPostcode, updateUserPostcode, ...otherProps }) => {\r\n    const modalContext = useContext(ModalContext);\r\n    const postcodeRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\r\n    const [isValidated, setIsValidated] = useState<boolean>(false);\r\n    const handlePostcodeSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        let enteredPostcode = postcodeRef.current.value.toLowerCase();\r\n\r\n        if (FormatValidatePostcode(enteredPostcode)) {\r\n            setIsValidated(true);\r\n            updateUserPostcode(AddSpaceToPostcode(enteredPostcode));\r\n        } else {\r\n            setIsValidated(false);\r\n            updateUserPostcode(null);\r\n        }\r\n\r\n        setIsSubmitted(true);\r\n\r\n        if (FormatValidatePostcode(enteredPostcode)) {\r\n            modalContext.showModal(Search, { show: true, title: \"Refine Search\", activePanel: SearchPanels.SearchDetailed })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal onHide={onRequestClose} centered={true} {...otherProps}>\r\n                <Modal.Header className=\"d-flex flex-nowrap justify-content-center align-items-center\" closeButton>\r\n                    <Modal.Title className=\"text-center mb-0\">{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"w-100 py-3 px-3 px-md-5\">\r\n                        <p className=\"mb-2\">Please enter a full postcode.</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-24 form-group\">\r\n                                <input type=\"text\" ref={postcodeRef} className={`form-control ${isSubmitted && !isValidated ? 'is-invalid' : ''}`} placeholder=\"AB12 3CD\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-24 d-flex align-items-center justify-content-end\">\r\n                                <button className=\"btn btn-success btn-lg\" onClick={(evt) => handlePostcodeSubmit(evt)}>Next</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalPostcode);"]},"metadata":{},"sourceType":"module"}