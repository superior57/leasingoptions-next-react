{"ast":null,"code":"import { parseStringDate } from \"../../helpers/dateHelper\";\nexport var isWithinLeaseBotHours = function isWithinLeaseBotHours() {\n  var now = new Date();\n  var currentDay = now.getUTCDay();\n  var startTime = '';\n  var endTime = '';\n  var startDate = null;\n  var endDate = null;\n\n  if (currentDay == 6 || currentDay == 0) {\n    // if sat/sunday\n    startTime = '10:01 PM';\n    endTime = '8:01 AM';\n  } else {\n    startTime = '9:01 AM';\n    endTime = '6:01 PM';\n  }\n\n  startDate = parseStringDate(startTime);\n  endDate = parseStringDate(endTime);\n\n  if (startDate > endDate) {\n    // check if start comes before end\n    var temp = startDate; // if so, assume it's across midnight\n\n    startDate = endDate; // and swap the dates\n\n    endDate = temp;\n    return !(now < endDate && now > startDate);\n  } else {\n    return now < endDate && now > startDate;\n  }\n};","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/website/components/leasebot/helper.tsx"],"names":["parseStringDate","isWithinLeaseBotHours","now","Date","currentDay","getUTCDay","startTime","endTime","startDate","endDate","temp"],"mappings":"AAAA,SAASA,eAAT,QAAgC,0BAAhC;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAEvC,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,UAAU,GAAGF,GAAG,CAACG,SAAJ,EAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAIL,UAAU,IAAI,CAAd,IAAmBA,UAAU,IAAI,CAArC,EAAwC;AAAE;AACtCE,IAAAA,SAAS,GAAG,UAAZ;AACAC,IAAAA,OAAO,GAAG,SAAV;AACH,GAHD,MAGO;AACHD,IAAAA,SAAS,GAAG,SAAZ;AACAC,IAAAA,OAAO,GAAG,SAAV;AACH;;AAEDC,EAAAA,SAAS,GAAGR,eAAe,CAACM,SAAD,CAA3B;AACAG,EAAAA,OAAO,GAAGT,eAAe,CAACO,OAAD,CAAzB;;AAEA,MAAIC,SAAS,GAAGC,OAAhB,EAAyB;AAAE;AACvB,QAAIC,IAAI,GAAGF,SAAX,CADqB,CACC;;AACtBA,IAAAA,SAAS,GAAGC,OAAZ,CAFqB,CAEE;;AACvBA,IAAAA,OAAO,GAAGC,IAAV;AACA,WAAQ,EAAER,GAAG,GAAGO,OAAN,IAAiBP,GAAG,GAAGM,SAAzB,CAAR;AACH,GALD,MAKO;AACH,WAAQN,GAAG,GAAGO,OAAN,IAAiBP,GAAG,GAAGM,SAA/B;AACH;AAEF,CA7BI","sourcesContent":["import { parseStringDate } from \"../../helpers/dateHelper\";\r\n\r\nexport const isWithinLeaseBotHours = () => {\r\n  \r\n    let now = new Date();\r\n    let currentDay = now.getUTCDay();\r\n    let startTime = '';\r\n    let endTime = '';\r\n    let startDate = null;\r\n    let endDate = null;\r\n  \r\n    if (currentDay == 6 || currentDay == 0) { // if sat/sunday\r\n        startTime = '10:01 PM';\r\n        endTime = '8:01 AM';\r\n    } else {\r\n        startTime = '9:01 AM';\r\n        endTime = '6:01 PM';\r\n    }\r\n  \r\n    startDate = parseStringDate(startTime); \r\n    endDate = parseStringDate(endTime);\r\n  \r\n    if (startDate > endDate) { // check if start comes before end\r\n        let temp = startDate; // if so, assume it's across midnight\r\n        startDate = endDate;   // and swap the dates\r\n        endDate = temp;\r\n        return (!(now < endDate && now > startDate));\r\n    } else {\r\n        return (now < endDate && now > startDate);\r\n    }\r\n    \r\n  }"]},"metadata":{},"sourceType":"module"}