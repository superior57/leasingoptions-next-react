{"ast":null,"code":"import moment from \"moment\";\nvar UKDateFormat = 'DD/MM/YYYY';\nexport var PhoneNumberIsValid = function PhoneNumberIsValid(phoneNumber) {\n  var allowEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (phoneNumber) {\n    var value = phoneNumber.replace(/\\s+/g, \"\");\n    return /^(((\\+44\\s?\\d{4}|\\(?0\\d{4}\\)?)\\s?\\d{3}\\s?\\d{3})|((\\+44\\s?\\d{3}|\\(?0\\d{3}\\)?)\\s?\\d{3}\\s?\\d{4})|((\\+44\\s?\\d{2}|\\(?0\\d{2}\\)?)\\s?\\d{4}\\s?\\d{4}))(\\s?\\#(\\d{4}|\\d{3}))?$/.test(value);\n  } else if (!allowEmpty) {\n    return false;\n  }\n\n  return true;\n};\n_c = PhoneNumberIsValid;\nexport var UKMobileNumberIsValid = function UKMobileNumberIsValid(phoneNumber) {\n  var allowEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (phoneNumber) {\n    var value = phoneNumber.replace(/\\s+/g, \"\");\n\n    if (value.length != 11) {\n      return false;\n    } else {\n      return /^(07\\d{8,12}|447\\d{7,11})$/.test(value);\n    }\n  } else if (!allowEmpty) {\n    return false;\n  }\n\n  return true;\n};\n_c2 = UKMobileNumberIsValid;\nexport var EmailAddressIsValid = function EmailAddressIsValid(email) {\n  var allowEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (email) {\n    var value = email.replace(/\\s+/g, \"\");\n    return /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,15}|[0-9]{1,3})?$/.test(value);\n  } else if (!allowEmpty) {\n    return false;\n  }\n\n  return true;\n};\n_c3 = EmailAddressIsValid;\nexport var IsOver18 = function IsOver18(date) {\n  var age = moment().diff(moment(date, UKDateFormat), 'years', true);\n\n  if (age >= 18) {\n    return true;\n  } else {\n    return false;\n  }\n};\n_c4 = IsOver18;\nexport var IsDateInPresentOrPast = function IsDateInPresentOrPast(date) {\n  return moment(date, 'YYYY-MM-DD').isBefore(moment().add(1, 'days').format('YYYY-MM-DD'), 'day');\n};\n_c5 = IsDateInPresentOrPast;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PhoneNumberIsValid\");\n$RefreshReg$(_c2, \"UKMobileNumberIsValid\");\n$RefreshReg$(_c3, \"EmailAddressIsValid\");\n$RefreshReg$(_c4, \"IsOver18\");\n$RefreshReg$(_c5, \"IsDateInPresentOrPast\");","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/website/helpers/validation.tsx"],"names":["moment","UKDateFormat","PhoneNumberIsValid","phoneNumber","allowEmpty","value","replace","test","UKMobileNumberIsValid","length","EmailAddressIsValid","email","IsOver18","date","age","diff","IsDateInPresentOrPast","isBefore","add","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,IAAMC,YAAY,GAAG,YAArB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,WAAD,EAA4D;AAAA,MAA/BC,UAA+B,uEAAT,IAAS;;AAC1F,MAAID,WAAJ,EAAiB;AACb,QAAIE,KAAK,GAAGF,WAAW,CAACG,OAAZ,CAAoB,MAApB,EAA4B,EAA5B,CAAZ;AACA,WAAO,qKAAqKC,IAArK,CAA0KF,KAA1K,CAAP;AACH,GAHD,MAIK,IAAI,CAACD,UAAL,EAAiB;AAClB,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH,CAVM;KAAMF,kB;AAYb,OAAO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACL,WAAD,EAA4D;AAAA,MAA/BC,UAA+B,uEAAT,IAAS;;AAC7F,MAAID,WAAJ,EAAiB;AACb,QAAIE,KAAK,GAAGF,WAAW,CAACG,OAAZ,CAAoB,MAApB,EAA4B,EAA5B,CAAZ;;AACA,QAAID,KAAK,CAACI,MAAN,IAAgB,EAApB,EAAwB;AACpB,aAAO,KAAP;AACH,KAFD,MAGK;AACD,aAAO,6BAA6BF,IAA7B,CAAkCF,KAAlC,CAAP;AACH;AACJ,GARD,MASK,IAAI,CAACD,UAAL,EAAiB;AAClB,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH,CAfM;MAAMI,qB;AAiBb,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAsD;AAAA,MAA/BP,UAA+B,uEAAT,IAAS;;AACrF,MAAIO,KAAJ,EAAW;AACP,QAAIN,KAAK,GAAGM,KAAK,CAACL,OAAN,CAAc,MAAd,EAAsB,EAAtB,CAAZ;AACA,WAAO,qHAAqHC,IAArH,CAA0HF,KAA1H,CAAP;AACH,GAHD,MAIK,IAAI,CAACD,UAAL,EAAiB;AAClB,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH,CAVM;MAAMM,mB;AAYb,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAkB;AAEtC,MAAMC,GAAG,GAAGd,MAAM,GAAGe,IAAT,CAAcf,MAAM,CAACa,IAAD,EAAOZ,YAAP,CAApB,EAA0C,OAA1C,EAAmD,IAAnD,CAAZ;;AAEA,MAAIa,GAAG,IAAI,EAAX,EAAc;AACV,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ,CATM;MAAMF,Q;AAWb,OAAO,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACH,IAAD,EAAkB;AACnD,SAAOb,MAAM,CAACa,IAAD,EAAO,YAAP,CAAN,CAA2BI,QAA3B,CAAoCjB,MAAM,GAAGkB,GAAT,CAAa,CAAb,EAAgB,MAAhB,EAAwBC,MAAxB,CAA+B,YAA/B,CAApC,EAAkF,KAAlF,CAAP;AACH,CAFM;MAAMH,qB","sourcesContent":["import moment from \"moment\";\r\n\r\nconst UKDateFormat = 'DD/MM/YYYY';\r\n\r\nexport const PhoneNumberIsValid = (phoneNumber: string | null, allowEmpty: boolean = true) => {\r\n    if (phoneNumber) {\r\n        let value = phoneNumber.replace(/\\s+/g, \"\");\r\n        return /^(((\\+44\\s?\\d{4}|\\(?0\\d{4}\\)?)\\s?\\d{3}\\s?\\d{3})|((\\+44\\s?\\d{3}|\\(?0\\d{3}\\)?)\\s?\\d{3}\\s?\\d{4})|((\\+44\\s?\\d{2}|\\(?0\\d{2}\\)?)\\s?\\d{4}\\s?\\d{4}))(\\s?\\#(\\d{4}|\\d{3}))?$/.test(value);\r\n    }\r\n    else if (!allowEmpty) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const UKMobileNumberIsValid = (phoneNumber: string | null, allowEmpty: boolean = true) => {\r\n    if (phoneNumber) {\r\n        let value = phoneNumber.replace(/\\s+/g, \"\");\r\n        if (value.length != 11) {\r\n            return false\r\n        }\r\n        else {\r\n            return /^(07\\d{8,12}|447\\d{7,11})$/.test(value);\r\n        }\r\n    }\r\n    else if (!allowEmpty) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const EmailAddressIsValid = (email: string | null, allowEmpty: boolean = true) => {\r\n    if (email) {\r\n        let value = email.replace(/\\s+/g, \"\");\r\n        return /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,15}|[0-9]{1,3})?$/.test(value);\r\n    }\r\n    else if (!allowEmpty) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const IsOver18 = (date: string) => {\r\n\r\n    const age = moment().diff(moment(date, UKDateFormat), 'years', true);\r\n\r\n    if (age >= 18){\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const IsDateInPresentOrPast = (date: string) => { \r\n    return moment(date, 'YYYY-MM-DD').isBefore(moment().add(1, 'days').format('YYYY-MM-DD'), 'day');\r\n}"]},"metadata":{},"sourceType":"module"}