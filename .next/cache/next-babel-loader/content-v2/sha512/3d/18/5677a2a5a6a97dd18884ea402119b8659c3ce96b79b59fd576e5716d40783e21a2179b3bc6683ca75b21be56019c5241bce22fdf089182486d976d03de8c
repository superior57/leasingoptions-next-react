{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport style from './postcode-lookup.module.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { DataLookupAPI } from \"API/DataLookupApi\";\nimport { joinNotEmpty } from \"helpers/stringHelper\";\n\nconst PostcodeLookup = ({\n  minQueryLength,\n  excludeTownAndCounty,\n  onAddressSelected\n}) => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isActive,\n    1: setIsactive\n  } = useState(false);\n  const {\n    0: searchResults,\n    1: setSearchResults\n  } = useState([]);\n  let setTimeoutId = null;\n\n  const handleSearchInit = evt => {\n    const searchQuery = evt.target.value.toString();\n    setIsactive(false);\n    setSearchResults([]); //Reset any pending (executing) requests\n\n    if (setTimeoutId) {\n      clearTimeout(setTimeoutId);\n    }\n\n    if (searchQuery && searchQuery.length >= 4) {\n      setIsLoading(true);\n      setTimeoutId = setTimeout(function () {\n        Promise.resolve(getSearchResults(searchQuery)).then(function (results) {\n          setIsactive(true);\n          setSearchResults(results);\n          setIsLoading(false);\n          setTimeoutId = null;\n        });\n      }, 50);\n    }\n  };\n\n  const handleSearchBlur = () => {\n    setTimeout(handleSearchClose, 250);\n  };\n\n  const handleSearchClose = () => {\n    setIsactive(false);\n    setIsLoading(false);\n    setSearchResults([]);\n  };\n\n  const handleAddressSelect = (address, evt) => {\n    evt.stopPropagation();\n\n    if (onAddressSelected) {\n      if (!excludeTownAndCounty) {\n        onAddressSelected({\n          address1: address.addressline1,\n          address2: address.addressline2,\n          address3: address.addressline3,\n          town: address.posttown,\n          county: address.county,\n          postcode: address.postcode\n        });\n      } else {\n        onAddressSelected({\n          address1: address.addressline1,\n          address2: address.addressline2,\n          address3: joinNotEmpty(\", \", [address.addressline3, address.posttown, address.county]),\n          postcode: address.postcode\n        });\n      }\n    }\n  };\n\n  async function getSearchResults(searchQuery) {\n    return await DataLookupAPI.PostcodeLookup(searchQuery);\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: style['input-wrapper'],\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Postcode\",\n      onFocus: evt => {\n        handleSearchInit(evt);\n      },\n      onKeyUp: evt => {\n        handleSearchInit(evt);\n      },\n      onBlur: handleSearchBlur\n    }), isLoading ? /*#__PURE__*/_jsx(FontAwesomeIcon, {\n      icon: faSpinner,\n      className: `fa-spin ${style['input-loading']}`\n    }) : \"\", /*#__PURE__*/_jsx(\"div\", {\n      className: `${style['input-list']} ${isActive ? style['is-active'] : \"\"}`,\n      children: /*#__PURE__*/_jsx(\"ul\", {\n        children: searchResults.map((item, index) => {\n          return /*#__PURE__*/_jsx(\"li\", {\n            onClick: evt => {\n              handleAddressSelect(item, evt);\n            },\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: item.summaryline\n            })\n          }, `result-${index}`);\n        })\n      })\n    })]\n  });\n};\n\nexport default PostcodeLookup;","map":null,"metadata":{},"sourceType":"module"}