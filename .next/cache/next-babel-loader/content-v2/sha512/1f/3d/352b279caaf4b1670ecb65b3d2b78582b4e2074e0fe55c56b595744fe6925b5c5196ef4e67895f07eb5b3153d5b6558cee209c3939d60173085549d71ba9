{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { GetVATText } from 'helpers/helpers';\nimport { formatMoney } from 'helpers/currencyHelper';\nimport { VehicleExtraOptionsHelper } from '../_libs/helpers/VehicleExtraOptionsHelper';\nimport { VehicleExtraOptionsManager } from '../_libs/VehicleExtraOptionsManager';\n\nconst VehicleExtraOptionsRelationshipsManager = ({\n  options,\n  relationships,\n  leasingDealType,\n  state,\n  settings\n}) => {\n  const vatText = GetVATText(leasingDealType);\n  const {\n    0: confirmRelationships,\n    1: setConfirmRelationships\n  } = useState([]);\n\n  const handleOptionClick = option => {\n    let optionToProcess = VehicleExtraOptionsHelper.getOptionAction(option, state.selectedOptionIds);\n\n    if (optionToProcess) {\n      let optionsToProcess = [optionToProcess];\n      let manager = new VehicleExtraOptionsManager();\n      manager.init(options, relationships);\n      let managerState = manager.processOptions(optionsToProcess, state.confirmRelationshipIds, state.selectedOptionIds, state.optionsStates);\n\n      if (managerState) {\n        if (settings.onStateChanged) {\n          settings.onStateChanged({\n            confirmRelationshipIds: managerState.confirmRelationshipIds,\n            selectedOptionIds: managerState.selectedOptionIds,\n            optionsStates: managerState.optionsStates\n          });\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let confirmList = [];\n\n    if (state.confirmRelationshipIds && state.confirmRelationshipIds.length > 0) {\n      state.confirmRelationshipIds.forEach(function (relationshipId) {\n        let confirmRelationship = VehicleExtraOptionsHelper.getConfirmRelationship(relationships, options, relationshipId, state.selectedOptionIds, state.optionsStates);\n\n        if (confirmRelationship) {\n          confirmList.push(confirmRelationship);\n        }\n      });\n    }\n\n    setConfirmRelationships(confirmList);\n  }, [state]);\n\n  if (confirmRelationships.length > 0) {\n    const totalPrice = VehicleExtraOptionsHelper.getOptionsPrice(VehicleExtraOptionsHelper.getSelectedOptions(options, state.selectedOptionIds), state.optionsStates);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"options-box\",\n        children: confirmRelationships.map(relationship => /*#__PURE__*/_jsxs(\"div\", {\n          className: \"rule-item\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              className: \"text-center\",\n              children: VehicleExtraOptionsHelper.getRelationshipDescription(relationship.type)\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: relationship.options.map(option => /*#__PURE__*/_jsxs(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: `col-16 col-md-20 d-flex flex-row flex-wrap align-items-center my-2`,\n                children: [option.isPrimary ? /*#__PURE__*/_jsx(\"img\", {\n                  className: \"lazyload mr-2\",\n                  height: \"13\",\n                  alt: \"Primary icon\",\n                  \"data-src\": `${process.env.NEXT_PUBLIC_CDN}/website/icon-primary.png`\n                }) : \"\", \" \", option.name]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"col-8 col-md-4 d-flex justify-content-end align-items-center\",\n                children: [formatMoney(option.price), \" \", /*#__PURE__*/_jsx(\"span\", {\n                  className: `vehicle-option__indicator ${option.isSelected ? \"is-active\" : \"\"} ${option.isDisabled ? \"is-disabled\" : \"\"}`,\n                  onClick: () => handleOptionClick(option)\n                })]\n              })]\n            }, `option-${option.id}`))\n          })]\n        }, `rule-${relationship.id}`))\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"options-pricing\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-16 col-md-19 d-flex flex-row flex-wrap my-2\",\n            children: \"Total Extras Cost Per Month\"\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-8 col-md-5 d-flex justify-content-end align-items-center\",\n            children: [formatMoney(totalPrice), \" \", vatText]\n          })]\n        })\n      })]\n    });\n  }\n\n  return null;\n};\n\nexport default VehicleExtraOptionsRelationshipsManager;","map":null,"metadata":{},"sourceType":"module"}