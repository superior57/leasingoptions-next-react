{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from 'react';\nimport style from './sortcode-lookup.module.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { DataLookupAPI } from \"API/DataLookupApi\";\n\nvar SortcodeLookup = function SortcodeLookup(_ref) {\n  var selectedSortCode = _ref.selectedSortCode,\n      onBankSelected = _ref.onBankSelected,\n      register = _ref.register,\n      errors = _ref.errors;\n  var minQueryLength = 6;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState([]),\n      searchResults = _useState3[0],\n      setSearchResults = _useState3[1];\n\n  var handleSearchInit = function handleSearchInit(evt) {\n    var searchQuery = evt.target.value.toString();\n\n    if (searchQuery.length === minQueryLength) {\n      setIsLoading(true);\n      Promise.resolve(getSearchResults(searchQuery)).then(function (results) {\n        setIsActive(true);\n        setSearchResults([results]);\n        setIsLoading(false);\n      });\n    } else {\n      setIsActive(false);\n      setSearchResults([]);\n    }\n  };\n\n  var handleSearchBlur = function handleSearchBlur() {\n    setTimeout(handleSearchClose, 250);\n  };\n\n  var handleSearchClose = function handleSearchClose() {\n    setIsActive(false);\n    setIsLoading(false);\n    setSearchResults([]);\n  };\n\n  var handleBankSelect = function handleBankSelect(item) {\n    if (onBankSelected) {\n      onBankSelected({\n        name: item.longbank1 + ' - ' + item.bankname,\n        address1: item.printaddr1,\n        address2: item.printaddr2,\n        address3: item.printaddr3 + (item.printaddr4 ? \", \" + item.printaddr4 : \"\"),\n        town: item.printtown,\n        county: item.printcounty,\n        postcode: item.printpcode1 + ' ' + item.printpcode2\n      });\n    }\n  };\n\n  function getSearchResults(_x) {\n    return _getSearchResults.apply(this, arguments);\n  }\n\n  function _getSearchResults() {\n    _getSearchResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(searchQuery) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return DataLookupAPI.SortcodeLookup(searchQuery);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getSearchResults.apply(this, arguments);\n  }\n\n  useEffect(function () {}, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style['input-wrapper'],\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \".concat(errors.sortCode ? \"is-invalid\" : \"\"),\n        id: \"sortCode\",\n        name: \"sortCode\",\n        \"aria-describedby\": \"sortCode\",\n        placeholder: \"Sort Code (Lookup)\",\n        maxLength: 6,\n        ref: register({\n          required: true,\n          minLength: 6,\n          maxLength: 6,\n          pattern: /^[0-9]*$/\n        }),\n        defaultValue: selectedSortCode,\n        onFocus: function onFocus(evt) {\n          handleSearchInit(evt);\n        },\n        onKeyUp: function onKeyUp(evt) {\n          handleSearchInit(evt);\n        },\n        onBlur: handleSearchBlur\n      }), isLoading ? /*#__PURE__*/_jsx(FontAwesomeIcon, {\n        width: \"16\",\n        height: \"16\",\n        icon: faSpinner,\n        className: \"fa-spin \".concat(style['input-loading'])\n      }) : \"\", /*#__PURE__*/_jsx(\"div\", {\n        className: \"\".concat(style['input-list'], \" \").concat(isActive ? style['is-active'] : \"\"),\n        children: /*#__PURE__*/_jsx(\"ul\", {\n          children: searchResults.map(function (item, index) {\n            return /*#__PURE__*/_jsx(\"li\", {\n              onClick: function onClick(evt) {\n                handleBankSelect(item);\n              },\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: \"\".concat(item.longbank1, \" - \").concat(item.bankname)\n              })\n            }, \"result-\".concat(index));\n          })\n        })\n      })]\n    }), errors.sortCode && /*#__PURE__*/_jsx(\"span\", {\n      className: \"invalid-feedback d-block\",\n      children: \"This field is required\"\n    })]\n  });\n};\n\nexport default SortcodeLookup;","map":null,"metadata":{},"sourceType":"module"}