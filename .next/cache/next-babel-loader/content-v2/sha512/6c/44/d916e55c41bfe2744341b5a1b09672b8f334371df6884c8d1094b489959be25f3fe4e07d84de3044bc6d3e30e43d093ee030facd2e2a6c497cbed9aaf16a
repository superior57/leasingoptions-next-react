{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport AccountBox from '../account-box';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTachometerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport moment from 'moment';\nimport { formatNumber, formatMoney } from 'accounting';\n\nconst AccountMileage = props => {\n  const calcForm = React.useRef() || null;\n  const {\n    0: currentContract,\n    1: setCurrentContract\n  } = useState();\n  const {\n    0: odometer,\n    1: setOdometer\n  } = useState(null);\n  const {\n    0: projected,\n    1: setProjected\n  } = useState();\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({\n    odometer: \"\"\n  });\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(true);\n  const {\n    0: showProjected,\n    1: setShowProjected\n  } = useState(false);\n  const {\n    0: showSuccess,\n    1: setShowSuccess\n  } = useState(false);\n  let currentDate = new Date();\n  let currentDay = currentDate.getDate();\n  let currentMonth = currentDate.getMonth() + 1;\n  let currentYear = currentDate.getFullYear().toString().substr(-2);\n  let startDate = (currentContract === null || currentContract === void 0 ? void 0 : currentContract.actualDate.split('/')) || \"10/11/12\";\n  let startDay = startDate[0];\n  let startMonth = startDate[1];\n  let startYear = startDate[2];\n\n  const handleMileageError = event => {\n    const {\n      name,\n      value\n    } = event;\n\n    switch (name) {\n      case 'odometerReading':\n        errors.odometer = value === \"\" || isNaN(value) ? 'Odometer reading is required.' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    setErrors(errors);\n  };\n\n  const handleMileageCalc = evt => {\n    evt.preventDefault(); // Loop over React.useRef form field elements\n\n    for (var i = 0, field; field = calcForm.current.elements[i++];) {\n      handleMileageError(field);\n    }\n\n    if (validateMileageCalc(errors)) {\n      setValidated(true);\n      submitvalidateMileageCalc();\n    } else {\n      setValidated(false);\n    }\n  };\n\n  const validateMileageCalc = errors => {\n    let valid = true;\n    Object.values(errors).forEach(key => {\n      if (key !== \"\") {\n        valid = false;\n      }\n    });\n    return valid;\n  };\n\n  const handleOdometerChange = evt => {\n    setOdometer(parseInt(evt.target.value));\n  };\n\n  const submitvalidateMileageCalc = () => {\n    var odometerReading = odometer;\n    var todaysDate = new Date();\n    var readingDate = moment(todaysDate.getDate() + \"/\" + (todaysDate.getMonth() + 1) + \"/\" + todaysDate.getFullYear(), \"DD/MM/YYYY\");\n    var startDate = moment(currentContract === null || currentContract === void 0 ? void 0 : currentContract.actualDate, \"DD/MM/YYYY\");\n    var renewalDate = moment(currentContract === null || currentContract === void 0 ? void 0 : currentContract.renewalDate, \"DD/MM/YYYY\");\n    let totalAllowance = (currentContract === null || currentContract === void 0 ? void 0 : currentContract.contractMileage) * ((currentContract === null || currentContract === void 0 ? void 0 : currentContract.contractTerm) / 12);\n    let elapsedDays = moment(readingDate).diff(startDate, 'days');\n    let totalDays = moment(renewalDate).diff(startDate, 'days');\n    let milesPerDay = elapsedDays > 0 ? odometerReading / elapsedDays : 0;\n    let projectedMiles = milesPerDay > 0 ? Math.round(milesPerDay * totalDays) : 0;\n    let projectedExcess = milesPerDay > 0 ? projectedMiles - totalAllowance : 0;\n    let projectedCharge = parseFloat(currentContract === null || currentContract === void 0 ? void 0 : currentContract.excessMileageCharge) * projectedExcess / 100;\n    let projectedResults = {\n      projectedMileage: projectedMiles,\n      projectedCharge: projectedCharge,\n      projectedExcess: projectedExcess,\n      totalAllowance: totalAllowance\n    };\n    setProjected(projectedResults);\n\n    if (projectedExcess > 0) {\n      setShowProjected(true);\n      setShowSuccess(false);\n    } else {\n      setShowProjected(false);\n      setShowSuccess(true);\n    }\n  };\n\n  useEffect(() => {\n    setCurrentContract(props.currentContract);\n  }, [props.currentContract]);\n  return /*#__PURE__*/_jsxs(AccountBox, {\n    icon: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n      icon: faTachometerAlt\n    }),\n    title: \" MILEAGE CALCULATOR\",\n    border: true,\n    children: [/*#__PURE__*/_jsx(\"form\", {\n      ref: calcForm,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"w-100 p-3 bg-white\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: /*#__PURE__*/_jsx(\"strong\", {\n                children: \"Lease Start Date\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-8 col-md-4 text-center pr-0 pl-md-0 pr-md-3\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: startDay\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-8 col-md-4 text-center pl-md-0\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: startMonth\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-8 col-md-4 text-center pl-0 pl-md-0\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: startYear === null || startYear === void 0 ? void 0 : startYear.toString().substr(-2)\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: /*#__PURE__*/_jsx(\"strong\", {\n                children: \"Length of Lease\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 text-center pl-md-0\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: [currentContract === null || currentContract === void 0 ? void 0 : currentContract.contractTerm, \" Months\"]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: /*#__PURE__*/_jsx(\"strong\", {\n                children: \"Annual Mileage\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 text-center pl-md-0\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: [formatNumber(currentContract === null || currentContract === void 0 ? void 0 : currentContract.contractMileage), \" miles\"]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: /*#__PURE__*/_jsx(\"strong\", {\n                children: \"Excess Miles Charge\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 text-center pl-md-0\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: currentContract === null || currentContract === void 0 ? void 0 : currentContract.excessMileageCharge\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: /*#__PURE__*/_jsx(\"strong\", {\n                children: \"Odometer Reading\"\n              })\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-24 col-md-12 text-center pl-md-0\",\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              type: \"number\",\n              className: `form-control cal-control ${validated ? \"\" : \"is-invalid\"}`,\n              name: \"odometerReading\",\n              placeholder: \"10, 000 miles\",\n              onChange: evt => handleOdometerChange(evt)\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"invalid-feedback\",\n              children: errors.odometer\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: /*#__PURE__*/_jsx(\"strong\", {\n                children: \"Reading Date\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-8 col-md-4 text-center pr-0 pl-md-0 pr-md-3\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: currentDay\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-8 col-md-4 text-center pl-md-0\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: currentMonth\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-8 col-md-4 text-center pl-0 pl-md-0\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"bg-acc-grey py-2\",\n              children: currentYear\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-24 text-center\",\n            children: /*#__PURE__*/_jsx(\"button\", {\n              className: \"btn btn-primary btn-lg\",\n              onClick: handleMileageCalc,\n              children: \"Calculate\"\n            })\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"hr\", {\n      className: showProjected && odometer !== null || showSuccess && odometer !== null ? \"\" : \"d-none\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `row ${showSuccess && odometer !== null ? \"\" : \"d-none\"}`,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-24 text-center\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"bg-acc-grey\",\n          children: \"You are within your mileage allowance\"\n        })\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: `w-100 p-3 bg-white ${showProjected && odometer !== null ? \"\" : \"d-none\"}`,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"bg-acc-grey py-2\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: \"Projected Mileage\"\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 text-center pl-md-0\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"bg-acc-grey py-2\",\n            children: [formatNumber(projected === null || projected === void 0 ? void 0 : projected.projectedMileage), \" miles\"]\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"bg-acc-grey py-2\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: \"Total Allowance\"\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 text-center pl-md-0\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"bg-acc-grey py-2\",\n            children: [formatNumber(projected === null || projected === void 0 ? void 0 : projected.totalAllowance), \" miles\"]\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 mb-3 mb-md-0 text-center\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"bg-acc-grey py-2\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: \"Projected Excess\"\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 text-center pl-md-0\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"bg-acc-grey py-2\",\n            children: [formatNumber(projected === null || projected === void 0 ? void 0 : projected.projectedExcess), \" miles\"]\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 d-flex mb-3 mb-md-0 text-center\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"w-100 d-flex justify-content-center align-items-center bg-acc-grey py-2\",\n            children: /*#__PURE__*/_jsxs(\"strong\", {\n              children: [\"Projected Lease\", /*#__PURE__*/_jsx(\"br\", {}), \"Mileage Charge\"]\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 d-flex text-center pl-md-0\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"w-100 d-flex justify-content-center align-items-center bg-acc-grey py-2 text-acc\",\n            children: /*#__PURE__*/_jsx(\"strong\", {\n              children: formatMoney(projected === null || projected === void 0 ? void 0 : projected.projectedCharge, \"£\")\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12 mb-3 mb-md-0\",\n          children: /*#__PURE__*/_jsx(\"button\", {\n            className: \"btn btn-success btn-lg btn-fluid btn-block\",\n            children: \"Save Calculation\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24 col-md-12\",\n          children: /*#__PURE__*/_jsx(\"button\", {\n            className: \"btn btn-primary btn-lg btn-fluid btn-block\",\n            children: \"Discuss Account\"\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-24\",\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-mid-grey text-center m-0\",\n            children: \"All calculators are made available as self-help tools for your Independent use with results based on information provided by the user. All examples are hypothetical and are for illustrative purposes only. Calculated results are believed to be accurate but results are not guaranteed. Leasing Options can not and do not accept responsibility for accuracy or outcomes.\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default AccountMileage;","map":null,"metadata":{},"sourceType":"module"}