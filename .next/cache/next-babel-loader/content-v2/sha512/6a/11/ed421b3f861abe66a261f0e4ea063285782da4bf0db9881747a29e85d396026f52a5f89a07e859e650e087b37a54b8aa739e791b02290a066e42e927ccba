{"ast":null,"code":"import { isNullOrWhiteSpace, joinNotEmpty, replaceAll } from './stringHelper';\nexport const getBaseUrl = url => {\n  let result = null;\n\n  if (!isNullOrWhiteSpace(url)) {\n    result = url;\n    const splitIdx = result.indexOf('?');\n\n    if (splitIdx !== -1) {\n      result = result.substring(0, splitIdx);\n    }\n  }\n\n  return result;\n};\nexport const getFriendlyUrlSegment = value => {\n  if (value == null || value == undefined) {\n    return value;\n  }\n\n  let result = value.toString().toLowerCase();\n  result = replaceAll(result, \" \", \"-\");\n  result = replaceAll(result, \",\", \"\");\n  result = replaceAll(result, \".\", \"\");\n  result = replaceAll(result, \"#\", \"\");\n  result = replaceAll(result, \"'\", \"\");\n  result = replaceAll(result, \"\\\"\", \"\");\n  result = replaceAll(result, \"&\", \"\");\n  result = replaceAll(result, \"%\", \"\");\n  result = replaceAll(result, \"!\", \"\");\n  result = replaceAll(result, \"\\\"\", \"\");\n  result = replaceAll(result, \"?\", \"\");\n  result = replaceAll(result, \"(\", \"\");\n  result = replaceAll(result, \")\", \"\");\n  result = replaceAll(result, \":\", \"-\");\n  result = replaceAll(result, \"�\", \"-\");\n  result = replaceAll(result, \"_\", \"-\");\n  result = replaceAll(result, \"��\", \"-\");\n  result = replaceAll(result, \"�\", \"\");\n  result = replaceAll(result, \"�\", \"\");\n  result = replaceAll(result, \"/\", \"\");\n  result = replaceAll(result, \"\\\\\", \"\");\n  result = replaceAll(result, \"[\", \"\");\n  result = replaceAll(result, \"]\", \"\");\n  result = replaceAll(result, \"+\", \"-\");\n\n  while (result.includes(\"--\")) {\n    result = replaceAll(result, \"--\", \"-\");\n  } // result = result.trim('-', '_')\n\n\n  return result;\n};\nexport const getUrl = (baseUrl, queryParams) => {\n  let result = null;\n\n  if (!isNullOrWhiteSpace(baseUrl)) {\n    result = baseUrl;\n\n    if (queryParams && queryParams.length > 0) {\n      result += (result.indexOf('?') === -1 ? '?' : '&') + joinNotEmpty(\"&\", queryParams);\n    }\n  }\n\n  return result;\n};\nexport const getQueryParams = function (queryStringParts) {\n  if (!queryStringParts || queryStringParts.length === 0) return {};\n  let result = {};\n\n  for (let i = 0; i < queryStringParts.length; ++i) {\n    let param = queryStringParts[i].split('=', 2);\n\n    if (param.length === 1) {\n      result[param[0].toLowerCase()] = \"\";\n    } else {\n      result[param[0].toLowerCase()] = decodeURIComponent(param[1].replace(/\\+/g, \" \"));\n    }\n  }\n\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}