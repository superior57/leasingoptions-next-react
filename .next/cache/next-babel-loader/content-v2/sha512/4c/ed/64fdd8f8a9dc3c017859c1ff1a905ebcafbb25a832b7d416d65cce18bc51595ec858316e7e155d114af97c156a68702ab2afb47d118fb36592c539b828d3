{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\current_project\\\\PPH\\\\tfs\\\\Website\\\\website\\\\components\\\\layout\\\\navigation\\\\navigation-models.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport style from './navigation.module.scss';\nimport { VehicleTypes } from 'enums/VehicleTypes';\nimport { GetDealTypeUrl } from 'helpers/urlHelper';\nimport { connect } from 'react-redux';\nimport { GetModels } from 'business-logic/vehicleService';\n\nfunction mapStateToProps(state) {\n  return {\n    carManufacturerList: state.carManufacturerList,\n    vanManufacturerList: state.vanManufacturerList\n  };\n}\n\nconst NavModel = (_ref) => {\n  let {\n    id,\n    VehicleType,\n    dealSelector\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"id\", \"VehicleType\", \"dealSelector\"]);\n\n  const {\n    0: manfacturer,\n    1: setManufacturer\n  } = useState();\n  const {\n    0: modelList,\n    1: setModelList\n  } = useState([]);\n  let manufacturerList = VehicleType === VehicleTypes.Commercial ? otherProps.vanManufacturerList : otherProps.carManufacturerList;\n\n  const handleModelRequest = evt => {\n    const manfacturerUrl = evt.currentTarget.value;\n    setManufacturer(manfacturerUrl);\n\n    if (manfacturerUrl) {\n      GetModels(VehicleType, manfacturerUrl).then(data => {\n        setModelList(data.data);\n      });\n    }\n  };\n\n  const handleModelClick = model => {\n    if (manfacturer) {\n      GetModels(VehicleType, manfacturer).then(data => {\n        setModelList(data.data);\n      });\n    }\n\n    Router.push(GetDealTypeUrl(dealSelector, '/[make]/[shortModel]'), GetDealTypeUrl(dealSelector, '/' + manfacturer + '/' + model));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: style['panel-content'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        onChange: evt => handleModelRequest(evt),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), manufacturerList.map(manufacturer => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: manufacturer.id,\n          children: manufacturer.text\n        }, manufacturer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        onChange: evt => handleModelClick(evt.currentTarget.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), modelList.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: model.id,\n          children: model.text\n        }, model.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\nexport default connect(mapStateToProps)(NavModel);","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/website/components/layout/navigation/navigation-models.tsx"],"names":["React","useState","Router","style","VehicleTypes","GetDealTypeUrl","connect","GetModels","mapStateToProps","state","carManufacturerList","vanManufacturerList","NavModel","id","VehicleType","dealSelector","otherProps","manfacturer","setManufacturer","modelList","setModelList","manufacturerList","Commercial","handleModelRequest","evt","manfacturerUrl","currentTarget","value","then","data","handleModelClick","model","push","map","manufacturer","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport  Router from 'next/router';\r\nimport style from './navigation.module.scss';\r\nimport { VehicleTypes } from 'enums/VehicleTypes';\r\nimport { GetDealTypeUrl } from 'helpers/urlHelper';\r\nimport { connect } from 'react-redux';\r\nimport { GetModels } from 'business-logic/vehicleService';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        carManufacturerList: state.carManufacturerList,\r\n        vanManufacturerList: state.vanManufacturerList,\r\n    };\r\n}\r\n\r\nconst NavModel = ({id, VehicleType, dealSelector, ...otherProps}) => {\r\n    const [manfacturer, setManufacturer] = useState<string>();\r\n    const [modelList, setModelList] = useState([]);\r\n    let manufacturerList = (VehicleType === VehicleTypes.Commercial  ? otherProps.vanManufacturerList : otherProps.carManufacturerList);\r\n    const handleModelRequest = (evt) => {\r\n        const manfacturerUrl = evt.currentTarget.value;\r\n        setManufacturer(manfacturerUrl);\r\n\r\n        if (manfacturerUrl) {\r\n            GetModels(VehicleType, manfacturerUrl).then((data) => {\r\n                setModelList(data.data);\r\n            });\r\n        }\r\n    }\r\n    const handleModelClick = (model: string) => {\r\n        if (manfacturer) {\r\n            GetModels(VehicleType, manfacturer).then((data) => {\r\n                setModelList(data.data);\r\n            });\r\n        }\r\n        Router.push(GetDealTypeUrl(dealSelector, '/[make]/[shortModel]'), GetDealTypeUrl(dealSelector, '/'+manfacturer+'/' + model))\r\n    }\r\n\r\n    return (\r\n        <div id={id} className={style['panel-content']}>\r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\" onChange={(evt) => handleModelRequest(evt)}>\r\n                    <option value=\"\">Select Make</option>\r\n                    {manufacturerList.map(manufacturer => \r\n                        <option key={manufacturer.id} value={manufacturer.id}>{manufacturer.text}</option>\r\n                    )}\r\n                </select>\r\n            </div> \r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\"  onChange={(evt) => handleModelClick(evt.currentTarget.value)}>\r\n                    <option value=\"\">Select Model</option>\r\n                    {modelList.map(model => \r\n                        <option key={model.id} value={model.id}>{model.text}</option>\r\n                    )}\r\n                </select>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavModel); "]},"metadata":{},"sourceType":"module"}