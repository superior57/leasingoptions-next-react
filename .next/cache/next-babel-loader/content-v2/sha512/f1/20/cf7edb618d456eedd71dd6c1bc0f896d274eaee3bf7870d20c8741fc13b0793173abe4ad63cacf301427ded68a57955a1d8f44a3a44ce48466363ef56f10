{"ast":null,"code":"import { isNullOrWhiteSpace } from './stringHelper';\nimport { getQueryParams } from './urlsHelper';\nimport { SiteSettings } from 'environment/siteSettings';\nimport { GetVehicleCheapestPriceTerm } from 'business-logic/vehicleService';\nexport class CustomOptionsHelper {\n  static getVehicleCustomOptions(data, callback) {\n    let values = {};\n    let isDefault = false;\n    const parts = data.url.split('?');\n    const queryStringParams = parts[1] ? getQueryParams(parts[1].split('&')) : null;\n\n    if (queryStringParams) {\n      let parsedInt = NaN;\n      parsedInt = parseInt(queryStringParams[\"term\"]);\n\n      if (!isNaN(parsedInt)) {\n        values[\"term\"] = parsedInt;\n      }\n\n      parsedInt = parseInt(queryStringParams[\"initialrentals\"]);\n\n      if (!isNaN(parsedInt)) {\n        values[\"initialRentalMonths\"] = parsedInt;\n      }\n\n      parsedInt = parseInt(queryStringParams[\"mileage\"]);\n\n      if (!isNaN(parsedInt)) {\n        values[\"mileage\"] = parsedInt;\n      }\n\n      isDefault = !isNullOrWhiteSpace(queryStringParams[\"isdefault\"]) && queryStringParams[\"isdefault\"] === \"1\";\n    }\n\n    if (data.pricingType && data.pricingType === 2) {\n      //isAtcPricing\n      values[\"maintenance\"] = true;\n    } else if (!data.maintenanceAllowed) {\n      values[\"maintenance\"] = false;\n    }\n\n    let customOptions = CustomOptionsStorageHelper.getOrAddVehicleCustomOptions(data.vehicleRef, data.leasingDealType, isDefault, values);\n\n    if (customOptions.useCheapestTerm) {\n      let pricingData = {\n        pricingType: data.pricingType || undefined,\n        postcode: data.postcode || undefined\n      };\n      GetVehicleCheapestPriceTerm(customOptions.vehicleRef, customOptions.leasingDealType, customOptions.maintenance, customOptions.mileage, customOptions.initialRentalMonths, pricingData).then(result => {\n        let cheapestTerm = null;\n\n        if (result.isSucceed && result.data) {\n          cheapestTerm = result.data;\n        }\n\n        customOptions.useCheapestTerm = false;\n\n        if (cheapestTerm && cheapestTerm > 0) {\n          customOptions.term = cheapestTerm;\n        }\n\n        CustomOptionsStorageHelper.addOrUpdateVehicleCustomOptions(customOptions);\n        callback(customOptions);\n      });\n    } else {\n      callback(customOptions);\n    }\n  }\n\n  static storeVehicleCustomOptions(customOptions) {\n    if (customOptions) {\n      customOptions.useCheapestTerm = false;\n      CustomOptionsStorageHelper.addOrUpdateVehicleCustomOptions(customOptions);\n    }\n  }\n\n}\nexport class CustomOptionsStorageHelper {\n  static getOrAddVehicleCustomOptions(vehicleRef, leasingDealType, setToDefault, values) {\n    let customOptions = this.getVehicleCustomOptions(vehicleRef, leasingDealType);\n\n    if (!customOptions || setToDefault) {\n      customOptions = {\n        vehicleRef: vehicleRef,\n        leasingDealType: leasingDealType,\n        term: SiteSettings.DefaultTerm,\n        mileage: SiteSettings.GetDealTypeDefaultMileage(leasingDealType),\n        maintenance: SiteSettings.DefaultMaintenance,\n        initialRentalMonths: SiteSettings.DefaultInitialRentals,\n        options: [],\n        salesCode: 0,\n        ageCategory: null,\n        useCheapestTerm: true\n      };\n    }\n\n    Object.assign(customOptions, values || {});\n    this.addOrUpdateVehicleCustomOptions(customOptions);\n    return customOptions;\n  }\n\n  static addOrUpdateVehicleCustomOptions(customOptions) {\n    if (customOptions !== null) {\n      const key = this.getOptionsItemKey(customOptions.vehicleRef, customOptions.leasingDealType);\n      localStorage.setItem(key, JSON.stringify(customOptions));\n    }\n  }\n\n  static getVehicleCustomOptions(vehicleRef, leasingDealType) {\n    let customOptions = null;\n\n    if (vehicleRef && leasingDealType) {\n      const key = this.getOptionsItemKey(vehicleRef, leasingDealType);\n      const serializedItem = localStorage.getItem(key);\n      customOptions = JSON.parse(serializedItem);\n    }\n\n    return customOptions;\n  }\n\n  static getOptionsItemKey(vehicleRef, leasingDealType) {\n    return (\"options_\" + vehicleRef + \"_\" + leasingDealType).toLowerCase();\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}