{"ast":null,"code":"import { PricingTypes } from 'enums/PricingTypes';\nimport { isNullOrWhiteSpace } from 'helpers/stringHelper';\nimport { getUrl } from 'helpers/urlsHelper';\nimport { getApiResponse } from \"helpers/apiResponseHelper\";\nimport CollectionsHelper from \"helpers/collectionsHelper\";\nimport { SiteSettings } from \"environment/siteSettings\";\n\nconst queryString = require('query-string'); // Work out a way to implement cleaner + error handling global approach\n\n\nexport const GetMakesAPI = async (vehicleType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/manufacturers', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetAllMakesAPI = async fetchHeaders => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/manufacturers', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetVehiclePricesDetailsAPI = async (payload, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclepricesdetails?' + queryString.stringify(payload), fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetVehicleCheapestPriceTermAPI = async (vehicleRef, leasingDealType, maintenance, mileage, initialRentalMonths, pricingData, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + \"/\" + leasingDealType + \"/\" + maintenance + \"/\" + mileage + \"/\" + initialRentalMonths + \"/cheapestpriceterm?\" + queryString.stringify(pricingData), fetchHeaders);\n  return getApiResponse(res);\n};\nexport const getTopVehiclesAPI = async (leaseDealType, take, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopvehicles?leasingDealType=' + leaseDealType + '&take=' + take, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelsAPI = async (vehicleType, manufacturerUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/shortmodels', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetManufacturersModelsAPI = async fetchHeaders => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/manufacturers/models', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetManufacturersModelsGarageAPI = async (vehicleType, manufacturerUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/models', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelsTrimsGarageAPI = async (vehicleType, manufacturerUrl, shortModTextUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/derivatives', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetTrimLevelsAPI = async (vehicleType, manufacturerUrl, shortModTextUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/trimlevels', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleAlternativeModelsAPI = async (vehicleType, manufacturerUrl, shortModTextUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/alternativemodels?take=10', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleGarageAPI = async (vehicleRef, leaseDealType, options, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + '/' + leaseDealType + '/customized';\n\n  if (options) {\n    url += \"?\" + queryString.stringify(options, {\n      skipNull: true\n    });\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetCapIdAPI = async (manufacturerUrl, modelUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclecapid?manufacturerUrl=' + manufacturerUrl + '&shortModelUrl=' + modelUrl + '&modelUrl=', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleModelPreviewsAPI = async (vehiclesFilter, paginationCriteria, sortingCriteria, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclemodelpreviews?' + queryString.stringify(vehiclesFilter, {\n    skipNull: true\n  });\n\n  if (paginationCriteria) {\n    url += \"&\" + queryString.stringify(paginationCriteria, {\n      skipNull: true\n    });\n  }\n\n  if (sortingCriteria) {\n    url += \"&\" + queryString.stringify(sortingCriteria, {\n      skipNull: true\n    });\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehiclePreviewsAPI = async (vehiclesFilter, paginationCriteria, sortingCriteria, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclepreviews?' + queryString.stringify(vehiclesFilter, {\n    skipNull: true\n  }, fetchHeaders);\n\n  if (paginationCriteria) {\n    url += \"&\" + queryString.stringify(paginationCriteria, {\n      skipNull: true\n    });\n  }\n\n  if (sortingCriteria) {\n    url += \"&\" + queryString.stringify(sortingCriteria, {\n      skipNull: true\n    });\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetRecommendedForModelAPI = async (pricingType, postcode, vehicleType, leaseDealType, manufacturerUrl, modelUrl, fetchHeaders) => {\n  let mileage = SiteSettings.GetVehicleTypeDefaultMileage(vehicleType);\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/getrecommendedformodel?pricingType=' + pricingType + '&postcode=' + postcode + '&vehicleType=' + vehicleType + '&leasingDealType=' + leaseDealType + '&initialRentals=6&mileage=' + mileage + '&maintenance=false&manufacturerUrl=' + manufacturerUrl + '&shortModTextUrl=' + modelUrl, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetTopLoPickVehiclesAPI = async (vehicleType, manufacturerUrl, pricingType, postcode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettoplopickvehicles?pricingType=' + pricingType + '&postcode=' + postcode + '&vehicleType=' + vehicleType + '&manufacturer=' + manufacturerUrl, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetTopScoredVehiclesAPI = async (pricingType, vehicleType, postcode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopscoredvehicles?pricingType=' + pricingType + '&vehicleType=' + vehicleType + '&postcode=' + postcode, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleDenotationsAPI = async (manufacturerUrl, modelUrl = null, maintenance = null, fetchHeaders) => {\n  // implement generic approach for query params next\n  var obj = {\n    modelUrl: modelUrl,\n    maintenance: maintenance\n  };\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicledenotations/' + manufacturerUrl + \"?\" + queryString.stringify(obj), fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetTopSpecialOffersAPI = async (vehicleType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopspecialoffers?vehicleType=' + vehicleType, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecialOffersGroupedAPI = async (vehicleType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialoffers/grouped/' + vehicleType, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetPricingMatrixAPI = async (vehicleRef, pricingType, postcode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + '/pricingmatrix?pricingType=' + pricingType + '&postcode=' + postcode, fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetDealDataAPI = async (vehicleRef, term, mileage, initialRentalMonths, dealType, maintenance, pricingType, postcode, fetchHeaders) => {\n  const url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + `api/vehicles/vehicle/${vehicleRef}/${dealType}/deal?term=${term}&mileage=${mileage}&initialRentalMonths=${initialRentalMonths}&maintenance=${maintenance}&pricingType=${pricingType}&postcode=${postcode}`;\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelReviewAPI = async (vehicleType, manufacturerUrl, shortModelUrl, modelUrl = null, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleType + '/' + manufacturerUrl + '/' + shortModelUrl + '/review';\n\n  if (!isNullOrWhiteSpace(modelUrl)) {\n    url += \"?model=\" + modelUrl;\n  }\n\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetModelGalleryImagesAPI = async (vehicleType, capId, width, height, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicleimages/info/' + vehicleType + '/' + capId + '/' + width + '/' + height + '/gallery', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleModelDealsSummaryAPI = async (manufacturerUrl, modelUrl, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + manufacturerUrl + '/' + modelUrl + '/dealssummary', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleImageAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicleimages/info/' + vehicleType + '/' + capId + '/image', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetVehicleInfoAPI = async (vehicleRef, pricingType = null, postcode = null, includeImages = false, includePriceRanges = false, fetchHeaders) => {\n  let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehiclebase/' + vehicleRef;\n\n  if (includeImages || includePriceRanges) {\n    let obj = {\n      images: includeImages ? \"true\" : \"false\",\n      priceRanges: includePriceRanges ? \"true\" : \"false\"\n    };\n    url += \"?\" + queryString.stringify(obj);\n  }\n\n  let queryParts = [];\n\n  if (pricingType && (pricingType === PricingTypes.Atc || pricingType === PricingTypes.Standard)) {\n    queryParts.push(`pricingtype=${pricingType}`);\n  }\n\n  if (!isNullOrWhiteSpace(postcode)) {\n    queryParts.push(`postcode=${postcode}`);\n  }\n\n  url = getUrl(url, queryParts);\n  const res = await fetch(url, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecOptionsAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedspecifications', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetExtraOptionsAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedextraoptions', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetTechOptionsAPI = async (vehicleType, capId, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedtechdata', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetAvailableMakesAPI = async (pricingType, postCode, leaseDealType, vehicleType, term, initialRentals, mileage, fuelType, transmission, co2, mpg, doors, seats, driveTrain, vehicleSize, vehicleStyle, engineSize, priceFrom, priceTo, isInStock, isSpecial, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/availablemakes?pricingType=' + pricingType + '&postcode=' + postCode + '&leasingDealType=' + leaseDealType + '&vehicleType=' + vehicleType + '&term=' + term + '&initialRentals=' + initialRentals + '&mileage=' + mileage + '&fuelType=' + fuelType + '&transmission=' + transmission + '&co2=' + co2 + '&mpg=' + mpg + '&doors=' + doors + '&seats=' + seats + '&driveTrain=' + driveTrain + '&vehicleSize=' + vehicleSize + '&vehicleStyle=' + vehicleStyle + '&engineSize=' + engineSize + '&priceFrom=' + priceFrom + '&priceTo=' + priceTo + '&isInStock=' + isInStock + '&isSpecial=' + isSpecial, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetAvailableShortModelsAPI = async (vehiclesFilter, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/availableshortmodels?' + queryString.stringify(vehiclesFilter, {\n    skipNull: true\n  }, fetchHeaders));\n  const data = await res.json();\n  return data;\n};\nexport const GetVehiclesFilterOptionsAPI = async (leaseDealType, vehicleType, manufacturerUrl, modelUrl, shortDerTextUrl, term, initialRentals, mileage, fuelType, transmission, co2, mpg, doors, seats, driveTrain, vehicleSize, vehicleStyle, engineSize, priceFrom, priceTo, isInStock, isSpecial, pricingType, postCode, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclesfilteroptions?pricingType=' + pricingType + '&postcode=' + postCode + '&leasingDealType=' + leaseDealType + '&vehicleType=' + vehicleType + '&manufacturerUrl=' + manufacturerUrl + '&shortModTextUrl=' + modelUrl + '&shortDerTextUrl=' + shortDerTextUrl + '&term=' + term + '&initialRentals=' + initialRentals + '&mileage=' + mileage + '&fuelType=' + fuelType + '&transmission=' + transmission + '&co2=' + co2 + '&mpg=' + mpg + '&doors=' + doors + '&seats=' + seats + '&driveTrain=' + driveTrain + '&vehicleSize=' + vehicleSize + '&vehicleStyle=' + vehicleStyle + '&engineSize=' + engineSize + '&priceFrom=' + priceFrom + '&priceTo=' + priceTo + '&isInStock=' + isInStock + '&isSpecial=' + isSpecial, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetShortTermDealsAPI = async (vehicleType, leaseDealType, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + '/api/shorttermdeals/list?filter[vehicleType]=' + vehicleType + '&filter[leasingDealType]=' + leaseDealType, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSearchResultsAPI = async (searchQuery, isInternal = false, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + `api/vehicles/search/${searchQuery}?isInternal=${isInternal}`, fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecialDealContentAPI = async (id, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialdeals/get/' + id + '/content', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSpecialDealPricingAPI = async (id, fetchHeaders) => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialdeals/get/' + id + '/pricing', fetchHeaders);\n  return getApiResponse(res);\n};\nexport const GetStickerListAPI = async fetchHeaders => {\n  const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/stickers/list', fetchHeaders);\n  const data = await res.json();\n  return data;\n};\nexport const GetSeatValuesAPI = () => {\n  return CollectionsHelper.seats();\n};\nexport const GetPriceToValuesAPI = () => {\n  return CollectionsHelper.prices();\n};\nexport const GetMpgValuesAPI = () => {\n  return CollectionsHelper.mpgs();\n};\nexport const GetC02ValuesAPI = () => {\n  return CollectionsHelper.co2s();\n};\nexport const GetDriveTrainValuesAPI = () => {\n  return CollectionsHelper.driveTrains();\n};\nexport const GetEngineSizeValuesAPI = () => {\n  return CollectionsHelper.engineSizes();\n};\nexport const GetTransmissionValuesAPI = () => {\n  return CollectionsHelper.transmissions();\n};\nexport const GetFuelTypesValuesAPI = () => {\n  return CollectionsHelper.fuelTypes();\n};\nexport const GetVehicleSizeValuesAPI = () => {\n  return CollectionsHelper.vehicleSizes();\n};\nexport const GetVehicleStyleValuesAPI = () => {\n  return CollectionsHelper.vehicleStyles();\n};\nexport const GetVehicleMileageValuesAPI = () => {\n  return CollectionsHelper.mileages();\n};\nexport const GetContractValuesAPI = () => {\n  return CollectionsHelper.terms();\n};\nexport const GetRentalValuesAPI = () => {\n  return CollectionsHelper.rentalMonths();\n};","map":{"version":3,"sources":["E:/current_project/PPH/tfs/Website/Website/API/VehicleAPI.tsx"],"names":["PricingTypes","isNullOrWhiteSpace","getUrl","getApiResponse","CollectionsHelper","SiteSettings","queryString","require","GetMakesAPI","vehicleType","fetchHeaders","res","fetch","process","env","NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL","GetAllMakesAPI","GetVehiclePricesDetailsAPI","payload","stringify","GetVehicleCheapestPriceTermAPI","vehicleRef","leasingDealType","maintenance","mileage","initialRentalMonths","pricingData","getTopVehiclesAPI","leaseDealType","take","data","json","GetModelsAPI","manufacturerUrl","GetManufacturersModelsAPI","GetManufacturersModelsGarageAPI","GetModelsTrimsGarageAPI","shortModTextUrl","GetTrimLevelsAPI","GetVehicleAlternativeModelsAPI","GetVehicleGarageAPI","options","url","skipNull","GetCapIdAPI","modelUrl","GetVehicleModelPreviewsAPI","vehiclesFilter","paginationCriteria","sortingCriteria","GetVehiclePreviewsAPI","GetRecommendedForModelAPI","pricingType","postcode","GetVehicleTypeDefaultMileage","GetTopLoPickVehiclesAPI","GetTopScoredVehiclesAPI","GetVehicleDenotationsAPI","obj","GetTopSpecialOffersAPI","GetSpecialOffersGroupedAPI","GetPricingMatrixAPI","GetDealDataAPI","term","dealType","GetModelReviewAPI","shortModelUrl","GetModelGalleryImagesAPI","capId","width","height","GetVehicleModelDealsSummaryAPI","GetVehicleImageAPI","GetVehicleInfoAPI","includeImages","includePriceRanges","images","priceRanges","queryParts","Atc","Standard","push","GetSpecOptionsAPI","GetExtraOptionsAPI","GetTechOptionsAPI","GetAvailableMakesAPI","postCode","initialRentals","fuelType","transmission","co2","mpg","doors","seats","driveTrain","vehicleSize","vehicleStyle","engineSize","priceFrom","priceTo","isInStock","isSpecial","GetAvailableShortModelsAPI","GetVehiclesFilterOptionsAPI","shortDerTextUrl","GetShortTermDealsAPI","GetSearchResultsAPI","searchQuery","isInternal","GetSpecialDealContentAPI","id","GetSpecialDealPricingAPI","GetStickerListAPI","GetSeatValuesAPI","GetPriceToValuesAPI","prices","GetMpgValuesAPI","mpgs","GetC02ValuesAPI","co2s","GetDriveTrainValuesAPI","driveTrains","GetEngineSizeValuesAPI","engineSizes","GetTransmissionValuesAPI","transmissions","GetFuelTypesValuesAPI","fuelTypes","GetVehicleSizeValuesAPI","vehicleSizes","GetVehicleStyleValuesAPI","vehicleStyles","GetVehicleMileageValuesAPI","mileages","GetContractValuesAPI","terms","GetRentalValuesAPI","rentalMonths"],"mappings":"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","sourcesContent":["import { VehicleTypes } from \"enums/VehicleTypes\";\r\nimport { PricingTypes } from 'enums/PricingTypes';\r\nimport { LeasingDealTypes } from \"enums/LeasingDealTypes\";\r\nimport { VehicleCustomOptionsRequest } from \"types/VehicleCustomOptionsRequest\";\r\nimport { SortingCriteria } from \"types/SortingCriteria\";\r\nimport { VehiclesFilter } from \"types/VehiclesFilter\";\r\nimport { PaginationCriteria } from \"types/PaginationCriteria\";\r\nimport { isNullOrWhiteSpace } from 'helpers/stringHelper';\r\nimport { getUrl } from 'helpers/urlsHelper';\r\nimport { getApiResponse } from \"helpers/apiResponseHelper\";\r\nimport CollectionsHelper from \"helpers/collectionsHelper\";\r\nimport { SiteSettings } from \"environment/siteSettings\";\r\n\r\nconst queryString = require('query-string');\r\n\r\n// Work out a way to implement cleaner + error handling global approach\r\nexport const GetMakesAPI = async (vehicleType: VehicleTypes, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/manufacturers', fetchHeaders)\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetAllMakesAPI = async(fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/manufacturers', fetchHeaders)\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetVehiclePricesDetailsAPI = async(payload: VehicleCustomOptionsRequest, fetchHeaders?)=> {\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclepricesdetails?' + queryString.stringify(payload), fetchHeaders);\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetVehicleCheapestPriceTermAPI = async(vehicleRef: number, leasingDealType: LeasingDealTypes, maintenance: boolean, mileage: number, initialRentalMonths: number, pricingData, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + \"/\" + leasingDealType + \"/\" + maintenance + \"/\" + mileage + \"/\" + initialRentalMonths + \"/cheapestpriceterm?\" + queryString.stringify(pricingData), fetchHeaders);\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const getTopVehiclesAPI = async(leaseDealType: LeasingDealTypes, take: number, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopvehicles?leasingDealType=' + leaseDealType + '&take=' + take, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetModelsAPI = async(vehicleType: VehicleTypes, manufacturerUrl, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/shortmodels', fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetManufacturersModelsAPI = async(fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/manufacturers/models', fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetManufacturersModelsGarageAPI = async(vehicleType: VehicleTypes, manufacturerUrl, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/models', fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetModelsTrimsGarageAPI = async(vehicleType: VehicleTypes, manufacturerUrl, shortModTextUrl, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/derivatives', fetchHeaders)\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetTrimLevelsAPI = async(vehicleType: VehicleTypes, manufacturerUrl, shortModTextUrl, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/trimlevels', fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehicleAlternativeModelsAPI = async(vehicleType: VehicleTypes, manufacturerUrl, shortModTextUrl, fetchHeaders?)=> {\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehiclesinfo/info/' + vehicleType + '/' + manufacturerUrl + '/' + shortModTextUrl + '/alternativemodels?take=10', fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehicleGarageAPI = async(vehicleRef: number, leaseDealType: LeasingDealTypes, options?: any, fetchHeaders?)=> {\r\n    let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + '/' + leaseDealType + '/customized';\r\n\r\n    if (options) {\r\n        url += \"?\" + queryString.stringify(options, { skipNull: true })\r\n    }\r\n\r\n    const res = await fetch(url, fetchHeaders)\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetCapIdAPI = async (manufacturerUrl, modelUrl, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclecapid?manufacturerUrl=' + manufacturerUrl + '&shortModelUrl=' + modelUrl + '&modelUrl=', fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehicleModelPreviewsAPI = async (vehiclesFilter: VehiclesFilter, paginationCriteria?: PaginationCriteria, sortingCriteria?: SortingCriteria, fetchHeaders?) =>{\r\n\r\n    let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclemodelpreviews?' + queryString.stringify(vehiclesFilter, { skipNull: true })\r\n\r\n    if (paginationCriteria) {\r\n        url += \"&\" + queryString.stringify(paginationCriteria, { skipNull: true })\r\n    }\r\n\r\n    if (sortingCriteria) {\r\n        url += \"&\" + queryString.stringify(sortingCriteria, { skipNull: true })\r\n    }\r\n\r\n    const res = await fetch(url, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehiclePreviewsAPI = async(vehiclesFilter: VehiclesFilter, paginationCriteria?: PaginationCriteria, sortingCriteria?: SortingCriteria, fetchHeaders?) =>{\r\n\r\n    let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclepreviews?' + queryString.stringify(vehiclesFilter, { skipNull: true }, fetchHeaders)\r\n\r\n    if (paginationCriteria) {\r\n        url += \"&\" + queryString.stringify(paginationCriteria, { skipNull: true })\r\n    }\r\n\r\n    if (sortingCriteria) {\r\n        url += \"&\" + queryString.stringify(sortingCriteria, { skipNull: true })\r\n    }\r\n\r\n    const res = await fetch(url, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetRecommendedForModelAPI = async(pricingType: PricingTypes, postcode: string, vehicleType: VehicleTypes, leaseDealType: LeasingDealTypes, manufacturerUrl, modelUrl, fetchHeaders?) =>{\r\n    let mileage = SiteSettings.GetVehicleTypeDefaultMileage(vehicleType);\r\n\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/getrecommendedformodel?pricingType=' + pricingType + '&postcode=' + postcode + '&vehicleType=' + vehicleType + '&leasingDealType=' + leaseDealType + '&initialRentals=6&mileage=' + mileage + '&maintenance=false&manufacturerUrl=' + manufacturerUrl + '&shortModTextUrl=' + modelUrl, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetTopLoPickVehiclesAPI = async(vehicleType: VehicleTypes, manufacturerUrl, pricingType?: PricingTypes, postcode?: string, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettoplopickvehicles?pricingType=' + pricingType + '&postcode=' + postcode + '&vehicleType=' + vehicleType + '&manufacturer=' + manufacturerUrl, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetTopScoredVehiclesAPI = async(pricingType: PricingTypes, vehicleType: VehicleTypes, postcode, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopscoredvehicles?pricingType=' + pricingType + '&vehicleType=' + vehicleType + '&postcode=' + postcode, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehicleDenotationsAPI = async(manufacturerUrl: string, modelUrl: string = null, maintenance: boolean = null, fetchHeaders?) =>{\r\n    // implement generic approach for query params next\r\n    var obj = {\r\n        modelUrl: modelUrl,\r\n        maintenance: maintenance,\r\n    }\r\n\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicledenotations/' + manufacturerUrl + \"?\" + queryString.stringify(obj), fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetTopSpecialOffersAPI = async(vehicleType: VehicleTypes, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/advertisevehicles/gettopspecialoffers?vehicleType=' + vehicleType, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetSpecialOffersGroupedAPI = async(vehicleType: VehicleTypes, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialoffers/grouped/' + vehicleType, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetPricingMatrixAPI = async(vehicleRef, pricingType: PricingTypes, postcode: string, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleRef + '/pricingmatrix?pricingType=' + pricingType + '&postcode=' + postcode, fetchHeaders)\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetDealDataAPI = async(vehicleRef, term, mileage, initialRentalMonths, dealType, maintenance: boolean, pricingType: PricingTypes, postcode: string, fetchHeaders?) =>{\r\n\r\n    const url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + `api/vehicles/vehicle/${vehicleRef}/${dealType}/deal?term=${term}&mileage=${mileage}&initialRentalMonths=${initialRentalMonths}&maintenance=${maintenance}&pricingType=${pricingType}&postcode=${postcode}`;\r\n    const res = await fetch(url, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetModelReviewAPI = async(vehicleType: VehicleTypes, manufacturerUrl: string, shortModelUrl: string, modelUrl: string = null, fetchHeaders?) =>{\r\n    let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + vehicleType + '/' + manufacturerUrl + '/' + shortModelUrl + '/review';\r\n\r\n    if (!isNullOrWhiteSpace(modelUrl)) {\r\n        url += \"?model=\" + modelUrl;\r\n    }\r\n\r\n    const res = await fetch(url, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetModelGalleryImagesAPI = async(vehicleType: VehicleTypes, capId: number, width: number, height: number, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicleimages/info/' + vehicleType + '/' + capId + '/' + width + '/' + height + '/gallery', fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehicleModelDealsSummaryAPI = async(manufacturerUrl: string, modelUrl: string, fetchHeaders?)=> {\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehicle/' + manufacturerUrl + '/' + modelUrl + '/dealssummary', fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehicleImageAPI = async(vehicleType: VehicleTypes, capId: number, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicleimages/info/' + vehicleType + '/' + capId + '/image', fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehicleInfoAPI = async(vehicleRef: string, pricingType: PricingTypes = null, postcode: string = null, includeImages: boolean = false, includePriceRanges: boolean = false, fetchHeaders?) =>{\r\n    let url = process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/vehiclebase/' + vehicleRef;\r\n\r\n    if (includeImages || includePriceRanges) {\r\n        let obj = {\r\n            images: includeImages ? \"true\" : \"false\",\r\n            priceRanges: includePriceRanges ? \"true\" : \"false\"\r\n        }\r\n\r\n        url += \"?\" + queryString.stringify(obj);\r\n    }\r\n\r\n    let queryParts: string[] = [];\r\n\r\n    if (pricingType && (pricingType === PricingTypes.Atc || pricingType === PricingTypes.Standard)) {\r\n        queryParts.push(`pricingtype=${pricingType}`);\r\n    }\r\n\r\n    if (!isNullOrWhiteSpace(postcode)) {\r\n        queryParts.push(`postcode=${postcode}`);\r\n    }\r\n\r\n    url = getUrl(url, queryParts);\r\n\r\n    const res = await fetch(url, fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetSpecOptionsAPI = async(vehicleType: number, capId: number, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedspecifications', fetchHeaders);\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetExtraOptionsAPI = async(vehicleType: number, capId: number, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedextraoptions', fetchHeaders);\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetTechOptionsAPI = async(vehicleType: number, capId: number, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/capvehicles/vehicle/' + vehicleType + '/' + capId + '/groupedtechdata', fetchHeaders);\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetAvailableMakesAPI = async(pricingType: PricingTypes, postCode: string, leaseDealType: LeasingDealTypes, vehicleType: VehicleTypes, term: string, initialRentals: string, mileage: string, fuelType: string, transmission: string, co2: string, mpg: string, doors: string, seats: string, driveTrain: string, vehicleSize: string, vehicleStyle: string, engineSize: string, priceFrom: string, priceTo: string, isInStock: boolean, isSpecial: boolean, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/availablemakes?pricingType=' + pricingType + '&postcode=' + postCode + '&leasingDealType=' + leaseDealType + '&vehicleType=' + vehicleType + '&term=' + term + '&initialRentals=' + initialRentals + '&mileage=' + mileage + '&fuelType=' + fuelType + '&transmission=' + transmission + '&co2=' + co2 + '&mpg=' + mpg + '&doors=' + doors + '&seats=' + seats + '&driveTrain=' + driveTrain + '&vehicleSize=' + vehicleSize + '&vehicleStyle=' + vehicleStyle + '&engineSize=' + engineSize + '&priceFrom=' + priceFrom + '&priceTo=' + priceTo + '&isInStock=' + isInStock + '&isSpecial=' + isSpecial, fetchHeaders)\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetAvailableShortModelsAPI = async(vehiclesFilter: VehiclesFilter, fetchHeaders?)=> {\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/availableshortmodels?' + queryString.stringify(vehiclesFilter, {\r\n        skipNull: true\r\n    }, fetchHeaders))\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetVehiclesFilterOptionsAPI = async(leaseDealType: LeasingDealTypes, vehicleType: VehicleTypes, manufacturerUrl: string, modelUrl: string, shortDerTextUrl: string, term: string, initialRentals: string, mileage: string, fuelType: string, transmission: string, co2: string, mpg: string, doors: string, seats: string, driveTrain: string, vehicleSize: string, vehicleStyle: string, engineSize: string, priceFrom: string, priceTo: string, isInStock: boolean, isSpecial: boolean, pricingType: PricingTypes, postCode: string, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/vehicles/getvehiclesfilteroptions?pricingType=' + pricingType + '&postcode=' + postCode + '&leasingDealType=' + leaseDealType + '&vehicleType=' + vehicleType + '&manufacturerUrl=' + manufacturerUrl + '&shortModTextUrl=' + modelUrl + '&shortDerTextUrl=' + shortDerTextUrl + '&term=' + term + '&initialRentals=' + initialRentals + '&mileage=' + mileage + '&fuelType=' + fuelType + '&transmission=' + transmission + '&co2=' + co2 + '&mpg=' + mpg + '&doors=' + doors + '&seats=' + seats + '&driveTrain=' + driveTrain + '&vehicleSize=' + vehicleSize + '&vehicleStyle=' + vehicleStyle + '&engineSize=' + engineSize + '&priceFrom=' + priceFrom + '&priceTo=' + priceTo + '&isInStock=' + isInStock + '&isSpecial=' + isSpecial, fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetShortTermDealsAPI = async(vehicleType: VehicleTypes, leaseDealType: LeasingDealTypes, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + '/api/shorttermdeals/list?filter[vehicleType]=' + vehicleType + '&filter[leasingDealType]=' + leaseDealType, fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetSearchResultsAPI = async(searchQuery: string, isInternal: boolean = false, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + `api/vehicles/search/${searchQuery}?isInternal=${isInternal}`, fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetSpecialDealContentAPI = async(id: string, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialdeals/get/' + id + '/content', fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetSpecialDealPricingAPI = async(id: string, fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/specialdeals/get/' + id + '/pricing', fetchHeaders);\r\n    return getApiResponse(res);\r\n}\r\n\r\nexport const GetStickerListAPI = async(fetchHeaders?) =>{\r\n    const res = await fetch(process.env.NEXT_PUBLIC_MICROSERVICE_VEHICLE_URL + 'api/stickers/list', fetchHeaders);\r\n    const data = await res.json()\r\n    return data;\r\n}\r\n\r\nexport const GetSeatValuesAPI= () => {\r\n    return CollectionsHelper.seats();\r\n}\r\n\r\nexport const GetPriceToValuesAPI= () =>{\r\n    return CollectionsHelper.prices();\r\n}\r\n\r\nexport const GetMpgValuesAPI= () =>{\r\n    return CollectionsHelper.mpgs();\r\n}\r\n\r\nexport const GetC02ValuesAPI= () =>{\r\n    return CollectionsHelper.co2s();\r\n}\r\n\r\nexport const GetDriveTrainValuesAPI = () =>{\r\n    return CollectionsHelper.driveTrains();\r\n}\r\n\r\nexport const GetEngineSizeValuesAPI = () =>{\r\n    return CollectionsHelper.engineSizes();\r\n}\r\n\r\nexport const GetTransmissionValuesAPI = () =>{\r\n    return CollectionsHelper.transmissions();\r\n}\r\n\r\nexport const GetFuelTypesValuesAPI = () =>{\r\n    return CollectionsHelper.fuelTypes();\r\n}\r\n\r\nexport const GetVehicleSizeValuesAPI = () =>{\r\n    return CollectionsHelper.vehicleSizes();\r\n}\r\n\r\nexport const GetVehicleStyleValuesAPI = () =>{\r\n    return CollectionsHelper.vehicleStyles();\r\n}\r\n\r\nexport const GetVehicleMileageValuesAPI = () =>{\r\n    return CollectionsHelper.mileages();\r\n}\r\n\r\nexport const GetContractValuesAPI= () =>{\r\n    return CollectionsHelper.terms();\r\n}\r\n\r\nexport const GetRentalValuesAPI = () => {\r\n    return CollectionsHelper.rentalMonths();\r\n}"]},"metadata":{},"sourceType":"module"}