{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useFormContext } from \"react-hook-form\";\nimport style from './garage-item.module.scss';\nimport { formatMoney, unformat } from 'helpers/currencyHelper';\nimport { getFieldError, getFieldName } from 'helpers/fieldArrayHelper';\n\n//TODO: implement missing validation rules\n//TODO: remove duplicate with vehicle page\n//TODO: do we need laber for value? same on vehicle page\nvar GarageVehicleManualDetailsForm = function GarageVehicleManualDetailsForm(_ref) {\n  var _fieldError, _fieldError2, _fieldError3;\n\n  var idx = _ref.idx,\n      data = _ref.data,\n      settings = _ref.settings;\n\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register,\n      errors = _useFormContext.errors,\n      setValue = _useFormContext.setValue,\n      reset = _useFormContext.reset;\n\n  var collectionName = \"garageManualData\";\n\n  var fieldName = function fieldName(name) {\n    return getFieldName(name, collectionName, idx);\n  };\n\n  var fieldError = function fieldError(name) {\n    return getFieldError(name, collectionName, idx, errors);\n  };\n\n  var _useState = useState([{\n    name: fieldName(\"dealerOption1Price\"),\n    disabled: true\n  }, {\n    name: fieldName(\"dealerOption2Price\"),\n    disabled: true\n  }, {\n    name: fieldName(\"dealerOption3Price\"),\n    disabled: true\n  }]),\n      fieldsStates = _useState[0],\n      setFieldsStates = _useState[1];\n\n  useEffect(function () {\n    setValue(fieldName(\"monthlyPrice\"), data.monthlyPrice);\n    setValue(fieldName(\"monthlyMaintenancePrice\"), data.maintenance ? data.monthlyMaintenancePrice : null);\n    setValue(fieldName(\"initialRentalPrice\"), data.initialRentalPrice);\n    setValue(fieldName(\"exteriorColor\"), data.exteriorColor);\n    setValue(fieldName(\"interiorColor\"), data.interiorColor);\n    reset();\n  }, [data]);\n\n  var handleColorChange = function handleColorChange(evt) {\n    var name = evt.target.name.substring(evt.target.name.indexOf(\".\") + 1);\n    var value = parseInt(evt.target.value) || null;\n    var newId = value;\n    var prevId = data[name];\n    settings.onTryChangeColor(name, prevId, newId);\n  };\n\n  var handleDealerOptionChange = function handleDealerOptionChange(evt) {\n    var name = evt.target.name + \"Price\";\n    var value = evt.target.value;\n    var disabled = !value;\n\n    if (disabled) {\n      setValue(name, null);\n    }\n\n    var fieldState = getFieldState(name);\n\n    if (fieldState && fieldState.disabled !== disabled) {\n      setFieldsStates(function (prevState) {\n        var newStates = prevState.map(function (item) {\n          if (item.name === name) {\n            var updatedItem = _objectSpread(_objectSpread({}, item), {}, {\n              disabled: disabled\n            });\n\n            return updatedItem;\n          }\n\n          return item;\n        });\n        return newStates;\n      });\n    }\n  };\n\n  var handlePriceInput = function handlePriceInput(evt) {\n    var name = evt.target.name;\n    var value = evt.target.value;\n    setValue(name, value ? formatMoney(unformat(value)) : null);\n  };\n\n  var getFieldState = function getFieldState(name) {\n    return fieldsStates.find(function (item) {\n      return item.name === name;\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Monthly Price\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"monthlyPrice\"),\n          className: \"form-control \".concat(fieldError(\"monthlyPrice\") ? \"is-invalid\" : \"\"),\n          type: \"text\",\n          onBlur: handlePriceInput,\n          ref: register({\n            required: 'Monthly price is required.'\n          })\n        }), fieldError(\"monthlyPrice\") ? /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: (_fieldError = fieldError(\"monthlyPrice\")) === null || _fieldError === void 0 ? void 0 : _fieldError.message\n        }) : null]\n      })\n    }), data.maintenance ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Maintenance Price\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"monthlyMaintenancePrice\"),\n          className: \"form-control \".concat(fieldError(\"monthlyMaintenancePrice\") ? \"is-invalid\" : \"\"),\n          type: \"text\",\n          defaultValue: data.maintenance ? data.monthlyMaintenancePrice : '',\n          onBlur: handlePriceInput,\n          ref: register({\n            required: 'Monthly maintenance price is required.'\n          })\n        }), fieldError(\"monthlyMaintenancePrice\") ? /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: (_fieldError2 = fieldError(\"monthlyMaintenancePrice\")) === null || _fieldError2 === void 0 ? void 0 : _fieldError2.message\n        }) : null]\n      })\n    }) : null, /*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Initial Rental\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"initialRentalPrice\"),\n          className: \"form-control \".concat(fieldError(\"initialRentalPrice\") ? \"is-invalid\" : \"\"),\n          type: \"text\",\n          onBlur: handlePriceInput,\n          ref: register({\n            required: 'Initial rental price is required.'\n          })\n        }), fieldError(\"initialRentalPrice\") ? /*#__PURE__*/_jsx(\"span\", {\n          className: \"invalid-feedback d-block\",\n          children: (_fieldError3 = fieldError(\"initialRentalPrice\")) === null || _fieldError3 === void 0 ? void 0 : _fieldError3.message\n        }) : null]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Dealer Option\\\\Price 1\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"dealerOption1\"),\n          className: \"form-control mb-1\",\n          type: \"text\",\n          maxLength: 100,\n          onChange: handleDealerOptionChange,\n          ref: register\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"dealerOption1Price\"),\n          className: \"form-control\",\n          type: \"text\",\n          disabled: getFieldState(fieldName(\"dealerOption1Price\")).disabled,\n          onBlur: handlePriceInput,\n          ref: register\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Dealer Option\\\\Price 2\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"dealerOption2\"),\n          className: \"form-control mb-1\",\n          type: \"text\",\n          maxLength: 100,\n          onChange: handleDealerOptionChange,\n          ref: register\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"dealerOption2Price\"),\n          className: \"form-control\",\n          type: \"text\",\n          disabled: getFieldState(fieldName(\"dealerOption2Price\")).disabled,\n          onBlur: handlePriceInput,\n          ref: register\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Dealer Option\\\\Price 3\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"dealerOption3\"),\n          className: \"form-control mb-1\",\n          type: \"text\",\n          maxLength: 100,\n          onChange: handleDealerOptionChange,\n          ref: register\n        }), /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"dealerOption3Price\"),\n          className: \"form-control\",\n          type: \"text\",\n          disabled: getFieldState(fieldName(\"dealerOption3Price\")).disabled,\n          onBlur: handlePriceInput,\n          ref: register\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Exterior Colour\"\n        }), /*#__PURE__*/_jsxs(\"select\", {\n          name: fieldName(\"exteriorColor\"),\n          className: \"form-control\",\n          onChange: handleColorChange,\n          ref: register,\n          children: [/*#__PURE__*/_jsx(\"option\", {\n            value: \"\",\n            children: \"Not selected\"\n          }), /*#__PURE__*/_jsx(\"option\", {\n            value: \"1000\",\n            children: \"TBC\"\n          }), settings.exteriorColors.map(function (item) {\n            return /*#__PURE__*/_jsx(\"option\", {\n              value: item.id,\n              children: item.name\n            }, item.id);\n          })]\n        }), data.exteriorColor === 1000 ? /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"exteriorColorManual\"),\n          className: \"form-control mt-1\",\n          type: \"text\",\n          maxLength: 200,\n          ref: register\n        }) : null]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"row \".concat(style['garage-column__row']),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-24 py-3\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Interior Colour\"\n        }), /*#__PURE__*/_jsxs(\"select\", {\n          name: fieldName(\"interiorColor\"),\n          className: \"form-control\",\n          onChange: handleColorChange,\n          ref: register,\n          children: [/*#__PURE__*/_jsx(\"option\", {\n            value: \"\",\n            children: \"Not selected\"\n          }), /*#__PURE__*/_jsx(\"option\", {\n            value: \"1000\",\n            children: \"TBC\"\n          }), settings.interiorColors.map(function (item) {\n            return /*#__PURE__*/_jsx(\"option\", {\n              value: item.id,\n              children: item.name\n            }, item.id);\n          })]\n        }), data.interiorColor === 1000 ? /*#__PURE__*/_jsx(\"input\", {\n          name: fieldName(\"interiorColorManual\"),\n          className: \"form-control mt-1\",\n          type: \"text\",\n          maxLength: 200,\n          ref: register\n        }) : null]\n      })\n    })]\n  });\n};\n\nexport default GarageVehicleManualDetailsForm;","map":null,"metadata":{},"sourceType":"module"}