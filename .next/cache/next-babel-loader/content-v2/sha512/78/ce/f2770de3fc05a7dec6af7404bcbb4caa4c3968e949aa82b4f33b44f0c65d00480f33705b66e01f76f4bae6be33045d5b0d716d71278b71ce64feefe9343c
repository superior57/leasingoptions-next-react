{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"E:/current_project/PPH/tfs/Website/website/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useFormContext } from \"react-hook-form\";\nimport style from './vehicle-manual-details.module.scss';\nimport { formatMoney, unformat } from 'helpers/currencyHelper';\n\n//TODO: implement missing validation rules\n//get data from single state object otherwise fails when reset method is applied\n//reset used to clear form state on data update\n//defaultValue is needed for monthlyMaintenancePrice to properly restore its value when maintenance being changed outside\n//manual colors foelds conditional rendering applied based on data object to prevent re-rendering before color change confirm received\nvar VehicleManualDetailsForm = function VehicleManualDetailsForm(_ref) {\n  var _errors$monthlyMainte, _errors$monthlyPrice, _errors$initialRental, _errors$processingFee;\n\n  var data = _ref.data,\n      settings = _ref.settings;\n\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register,\n      errors = _useFormContext.errors,\n      setValue = _useFormContext.setValue,\n      reset = _useFormContext.reset;\n\n  var _useState = useState(true),\n      boxToggle = _useState[0],\n      setBoxToggle = _useState[1];\n\n  var _useState2 = useState([{\n    name: \"dealerOption1Price\",\n    disabled: true,\n    visible: true\n  }, {\n    name: \"dealerOption2Price\",\n    disabled: true,\n    visible: true\n  }, {\n    name: \"dealerOption3Price\",\n    disabled: true,\n    visible: true\n  }, {\n    name: \"monthlyMaintenancePrice\",\n    disabled: false,\n    visible: false\n  }]),\n      fieldsStates = _useState2[0],\n      setFieldsStates = _useState2[1];\n\n  useEffect(function () {\n    setValue(\"mileage\", data.mileage);\n    setValue(\"maintenance\", data.maintenance);\n    setValue(\"monthlyPrice\", data.monthlyPrice);\n    setValue(\"monthlyMaintenancePrice\", data.maintenance ? data.monthlyMaintenancePrice : null);\n    setValue(\"initialRentalPrice\", data.initialRentalPrice);\n    setValue(\"processingFee\", data.processingFee);\n    setValue(\"exteriorColor\", data.exteriorColor);\n    setValue(\"interiorColor\", data.interiorColor);\n    setMaintenanceState(data.maintenance);\n    reset();\n  }, [data]);\n\n  var getMileages = function getMileages() {\n    var mileages = [];\n\n    for (var mileage = 5000; mileage <= 50000; mileage += 1000) {\n      mileages.push(mileage);\n    }\n\n    return mileages;\n  };\n\n  var handleInternalToggle = function handleInternalToggle(evt) {\n    return setBoxToggle(!boxToggle);\n  };\n\n  var handleColorChange = function handleColorChange(evt) {\n    var name = evt.target.name;\n    var value = parseInt(evt.target.value) || null;\n    var newId = value;\n    var prevId = data[name];\n    settings.onTryChangeColor(name, prevId, newId);\n  };\n\n  var handleDealerOptionChange = function handleDealerOptionChange(evt) {\n    var name = evt.target.name + \"Price\";\n    var value = evt.target.value;\n    var disabled = !value;\n\n    if (disabled) {\n      setValue(name, null);\n    }\n\n    var fieldState = getFieldState(name);\n\n    if (fieldState && fieldState.disabled !== disabled) {\n      setFieldsStates(function (prevState) {\n        var newStates = prevState.map(function (item) {\n          if (item.name === name) {\n            var updatedItem = _objectSpread(_objectSpread({}, item), {}, {\n              disabled: disabled\n            });\n\n            return updatedItem;\n          }\n\n          return item;\n        });\n        return newStates;\n      });\n    }\n  };\n\n  var handlePriceInput = function handlePriceInput(evt) {\n    var name = evt.target.name;\n    var value = evt.target.value;\n    setValue(name, value ? formatMoney(unformat(value)) : null);\n  };\n\n  var handleMaintenanceChange = function handleMaintenanceChange(evt) {\n    var mainteance = evt.target.value === \"true\";\n    setMaintenanceState(mainteance);\n  };\n\n  var getFieldState = function getFieldState(name) {\n    return fieldsStates.find(function (item) {\n      return item.name === name;\n    });\n  };\n\n  var setMaintenanceState = function setMaintenanceState(maintenance) {\n    var name = \"monthlyMaintenancePrice\";\n\n    if (!maintenance) {\n      setValue(name, null);\n    }\n\n    var fieldState = getFieldState(name);\n\n    if (fieldState && fieldState.visible !== maintenance) {\n      setFieldsStates(function (prevState) {\n        var newStates = prevState.map(function (item) {\n          if (item.name === name) {\n            var updatedItem = _objectSpread(_objectSpread({}, item), {}, {\n              visible: maintenance\n            });\n\n            return updatedItem;\n          }\n\n          return item;\n        });\n        return newStates;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"\".concat(style['internal-quote'], \" \").concat(boxToggle ? style['is-active'] : \"\"),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"\".concat(style['internal-quote__header'], \" d-flex justify-content-between align-items-center bg-blue text-white p-3 mb-0 h5\"),\n      onClick: function onClick(evt) {\n        handleInternalToggle(evt);\n      },\n      children: [\"Quote Details \", boxToggle ? /*#__PURE__*/_jsx(\"span\", {\n        children: \"-\"\n      }) : /*#__PURE__*/_jsx(\"span\", {\n        children: \"+\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"\".concat(style['internal-quote__info'], \" bg-white p-3\"),\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Annual Mileage\"\n          }), /*#__PURE__*/_jsx(\"select\", {\n            name: \"mileage\",\n            className: \"form-control\",\n            ref: register,\n            children: getMileages().map(function (mileage) {\n              return /*#__PURE__*/_jsx(\"option\", {\n                value: mileage,\n                children: mileage\n              }, mileage);\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Maintenance\"\n          }), /*#__PURE__*/_jsxs(\"select\", {\n            name: \"maintenance\",\n            className: \"form-control\",\n            onChange: handleMaintenanceChange,\n            ref: register,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"false\",\n              children: \"No\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"true\",\n              children: \"Yes\"\n            })]\n          })]\n        }), getFieldState(\"monthlyMaintenancePrice\").visible ? /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Maintenance Price\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"monthlyMaintenancePrice\",\n            className: \"form-control \".concat(errors.monthlyMaintenancePrice ? \"is-invalid\" : \"\"),\n            type: \"text\",\n            defaultValue: data.maintenance ? data.monthlyMaintenancePrice : '',\n            onBlur: handlePriceInput,\n            ref: register({\n              required: 'Monthly maintenance price is required.'\n            })\n          }), errors.monthlyMaintenancePrice ? /*#__PURE__*/_jsx(\"span\", {\n            className: \"invalid-feedback d-block\",\n            children: (_errors$monthlyMainte = errors.monthlyMaintenancePrice) === null || _errors$monthlyMainte === void 0 ? void 0 : _errors$monthlyMainte.message\n          }) : null]\n        }) : null]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Monthly Price\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"monthlyPrice\",\n            className: \"form-control \".concat(errors.monthlyPrice ? \"is-invalid\" : \"\"),\n            type: \"text\",\n            onBlur: handlePriceInput,\n            ref: register({\n              required: 'Monthly price is required.'\n            })\n          }), errors.monthlyPrice ? /*#__PURE__*/_jsx(\"span\", {\n            className: \"invalid-feedback d-block\",\n            children: (_errors$monthlyPrice = errors.monthlyPrice) === null || _errors$monthlyPrice === void 0 ? void 0 : _errors$monthlyPrice.message\n          }) : null]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Initial Payment\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"initialRentalPrice\",\n            className: \"form-control \".concat(errors.initialRentalPrice ? \"is-invalid\" : \"\"),\n            type: \"text\",\n            onBlur: handlePriceInput,\n            ref: register({\n              required: 'Initial rental price is required.'\n            })\n          }), errors.initialRentalPrice ? /*#__PURE__*/_jsx(\"span\", {\n            className: \"invalid-feedback d-block\",\n            children: (_errors$initialRental = errors.initialRentalPrice) === null || _errors$initialRental === void 0 ? void 0 : _errors$initialRental.message\n          }) : null]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Processing Fee\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"processingFee\",\n            className: \"form-control \".concat(errors.processingFee ? \"is-invalid\" : \"\"),\n            type: \"text\",\n            onBlur: handlePriceInput,\n            ref: register({\n              required: 'Processing fee is required.'\n            })\n          }), errors.processingFee ? /*#__PURE__*/_jsx(\"span\", {\n            className: \"invalid-feedback d-block\",\n            children: (_errors$processingFee = errors.processingFee) === null || _errors$processingFee === void 0 ? void 0 : _errors$processingFee.message\n          }) : null]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-16 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Dealer Option 1\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"dealerOption1\",\n            className: \"form-control\",\n            type: \"text\",\n            maxLength: 100,\n            onChange: handleDealerOptionChange,\n            ref: register\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Price\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"dealerOption1Price\",\n            className: \"form-control\",\n            type: \"text\",\n            disabled: getFieldState(\"dealerOption1Price\").disabled,\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-16 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Dealer Option 2\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"dealerOption2\",\n            className: \"form-control\",\n            type: \"text\",\n            maxLength: 100,\n            onChange: handleDealerOptionChange,\n            ref: register\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Price\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"dealerOption2Price\",\n            className: \"form-control\",\n            type: \"text\",\n            disabled: getFieldState(\"dealerOption2Price\").disabled,\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-16 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Dealer Option 3\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"dealerOption3\",\n            className: \"form-control\",\n            type: \"text\",\n            maxLength: 100,\n            onChange: handleDealerOptionChange,\n            ref: register\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-8 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Price\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            name: \"dealerOption3Price\",\n            className: \"form-control\",\n            type: \"text\",\n            disabled: getFieldState(\"dealerOption3Price\").disabled,\n            onBlur: handlePriceInput,\n            ref: register\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-12 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Exterior Colour\"\n          }), /*#__PURE__*/_jsxs(\"select\", {\n            name: \"exteriorColor\",\n            className: \"form-control\",\n            onChange: handleColorChange,\n            ref: register,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"\",\n              children: \"Not selected\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"1000\",\n              children: \"TBC\"\n            }), settings.exteriorColors.map(function (item) {\n              return /*#__PURE__*/_jsx(\"option\", {\n                value: item.id,\n                children: item.name\n              }, item.id);\n            })]\n          }), data.exteriorColor === 1000 ? /*#__PURE__*/_jsx(\"input\", {\n            name: \"exteriorColorManual\",\n            className: \"form-control mt15\",\n            type: \"text\",\n            maxLength: 200,\n            ref: register\n          }) : null]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-24 col-md-12 form-group\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Interior Color\"\n          }), /*#__PURE__*/_jsxs(\"select\", {\n            name: \"interiorColor\",\n            className: \"form-control\",\n            onChange: handleColorChange,\n            ref: register,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"\",\n              children: \"Not selected\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"1000\",\n              children: \"TBC\"\n            }), settings.interiorColors.map(function (item) {\n              return /*#__PURE__*/_jsx(\"option\", {\n                value: item.id,\n                children: item.name\n              }, item.id);\n            })]\n          }), data.interiorColor === 1000 ? /*#__PURE__*/_jsx(\"input\", {\n            name: \"interiorColorManual\",\n            className: \"form-control mt15\",\n            type: \"text\",\n            maxLength: 200,\n            ref: register\n          }) : null]\n        })]\n      })]\n    })]\n  });\n};\n\nexport default VehicleManualDetailsForm;","map":null,"metadata":{},"sourceType":"module"}