{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { useFormContext } from \"react-hook-form\";\nimport style from './privacy-policy-consent.module.scss';\nimport { hasPrivacyAccepted } from 'helpers/cookiesHelper';\n\nconst PrivacyPolicyConsent = ({}) => {\n  //Used to share \"privacyConfirmed\" field with parent form and use same validation\n  const formContext = useFormContext();\n  const isRequired = !hasPrivacyAccepted();\n\n  if (isRequired) {\n    var _formContext$errors$p;\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: `form-check form-check-inline ${style[\"privacy-agreement\"]}`,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: \"privacyConfirmed\",\n          name: \"privacyConfirmed\",\n          ref: formContext.register({\n            validate: value => value === true || \"Confirm is required.\"\n          })\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"privacyConfirmed\",\n          className: formContext.errors.privacyConfirmed ? style[\"invalid-feedback\"] : null,\n          children: \"I confirm that I have read the Leasing Options Privacy Policy and that I understand the ways in which Leasing Options will use my personal data.\"\n        })]\n      }), formContext.errors.privacyConfirmed && /*#__PURE__*/_jsx(\"span\", {\n        className: \"invalid-feedback d-block\",\n        children: (_formContext$errors$p = formContext.errors.privacyConfirmed) === null || _formContext$errors$p === void 0 ? void 0 : _formContext$errors$p.message\n      })]\n    });\n  }\n\n  return null;\n};\n\nexport default PrivacyPolicyConsent;","map":null,"metadata":{},"sourceType":"module"}