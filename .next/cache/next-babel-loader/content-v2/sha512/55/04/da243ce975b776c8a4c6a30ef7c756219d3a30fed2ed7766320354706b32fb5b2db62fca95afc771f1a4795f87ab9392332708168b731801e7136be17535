{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SitemapDefaultPages, SitemapDefaultNewsPages } from \"../types/SitemapPages\";\nimport { NewsTypes } from \"../enums/NewsTypes\";\nimport { ContentAPI } from \"API/ContentAPI\";\nimport SitemapPriorities from \"types/SitemapPriorities\";\nimport moment from 'moment';\nimport SitemapItemChangeFrequencies from \"enums/SitemapItemChangeFrequencies\";\nimport { VehicleTypes } from \"enums/VehicleTypes\";\nimport { NewsService } from \"business-logic/newsService\";\nimport { GetCanonicalUrl, GetAdviceCategoryUrl, GetAdviceArticleUrl, GetAdviceTagUrl, BudgetToUrlVehicleType, BodyTypeUrlVehicleType, BudgetFromUrlVehicleType, InStockUrlVehicleType, GetVehicleManufacturerUrl, GetShortModelUrl, GetVehicleUrl } from \"helpers/urlHelper\";\nimport { LeasingDealTypes } from \"enums/LeasingDealTypes\";\nimport { groupByArray } from \"helpers/helpers\";\nimport { GetCategoriesForType, GetBudgetTo, GetBudgetOver, GetVehicleDenotations, GetManufacturersModels } from \"./vehicleService\";\nexport var getSitemapVehiclesXMLPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(make) {\n    var pages, vehiclesPromise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pages = [];\n            _context.next = 3;\n            return GetVehicleDenotations(make, null, false);\n\n          case 3:\n            vehiclesPromise = _context.sent;\n            vehiclesPromise.data.forEach(function (vehicle) {\n              var sitemap = {\n                name: vehicle.derivativeUrl,\n                url: GetCanonicalUrl(GetVehicleUrl(false, '', vehicle.vehicleTypeId == VehicleTypes.Car ? LeasingDealTypes.Personal : LeasingDealTypes.Van, vehicle.manufacturerUrl, vehicle.shortModTextUrl, vehicle.modelUrl, vehicle.derivativeUrl, vehicle.vehicleRef)),\n                priority: SitemapPriorities._1_0,\n                changeFrequency: SitemapItemChangeFrequencies.monthly,\n                modifiedOn: moment().format('YYYY-MM-DD')\n              };\n              pages.push(sitemap);\n            });\n            return _context.abrupt(\"return\", pages);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getSitemapVehiclesXMLPage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getSitemapPagesXMLPage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var pages, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            pages = [];\n            _context2.next = 3;\n            return GetGeneralSitemapPages();\n\n          case 3:\n            data = _context2.sent;\n            data.forEach(function (item) {\n              pages.push(item);\n            });\n            GetVehicleTypes().forEach(function (vehicleType) {\n              var inStock = GetInStockPages(vehicleType);\n              var underBudget = GetSitemapBudgetUnderPages(vehicleType);\n              var overBudget = GetSitemapBudgetOverPages(vehicleType);\n              var bodyTypePages = GetSitemapBodyTypePages(vehicleType);\n              var allPages = inStock.concat(underBudget).concat(overBudget).concat(bodyTypePages);\n              allPages.forEach(function (item) {\n                pages.push(item);\n              });\n            });\n            return _context2.abrupt(\"return\", pages);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getSitemapPagesXMLPage() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getSitemapXMLPage = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var currentDate, pages, manufacturerPages;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            currentDate = moment().format('YYYY-MM-DD');\n            pages = [{\n              url: GetCanonicalUrl(\"/sitemap-pages.xml\"),\n              modifiedOn: currentDate\n            }, {\n              url: GetCanonicalUrl(\"/sitemap-news.xml\"),\n              modifiedOn: currentDate\n            }, {\n              url: GetCanonicalUrl(\"/sitemap-advice-guides.xml\"),\n              modifiedOn: currentDate\n            }, {\n              url: GetCanonicalUrl(\"/sitemap-manufacturers.xml\"),\n              modifiedOn: currentDate\n            }, {\n              url: GetCanonicalUrl(\"/sitemap-models.xml\"),\n              modifiedOn: currentDate\n            }];\n            _context3.next = 4;\n            return GetManufacturersModels();\n\n          case 4:\n            manufacturerPages = _context3.sent;\n            manufacturerPages.data.forEach(function (item) {\n              var manufacturerPage = {\n                url: GetCanonicalUrl(\"/sitemap-vehicles.xml?make=\" + item.manufacturer.manufacturerUrl),\n                modifiedOn: currentDate\n              };\n              pages.push(manufacturerPage);\n            });\n            return _context3.abrupt(\"return\", pages);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getSitemapXMLPage() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var GetGeneralSitemapPages = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var includeContentHubBasePages,\n        siteMapPages,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            includeContentHubBasePages = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : false;\n            siteMapPages = SitemapDefaultPages;\n\n            if (!includeContentHubBasePages) {\n              _context4.next = 12;\n              break;\n            }\n\n            _context4.t1 = siteMapPages;\n            _context4.next = 6;\n            return GetSitemapNewsPages();\n\n          case 6:\n            _context4.t2 = _context4.sent;\n            _context4.t0 = _context4.t1.concat.call(_context4.t1, _context4.t2);\n            _context4.next = 10;\n            return GetSitemapAdviceGuidesPages();\n\n          case 10:\n            _context4.t3 = _context4.sent;\n            siteMapPages = _context4.t0.concat.call(_context4.t0, _context4.t3);\n\n          case 12:\n            return _context4.abrupt(\"return\", siteMapPages);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function GetGeneralSitemapPages() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var GetPriority = function GetPriority(date) {\n  var priority = SitemapPriorities._0_5;\n  var a = moment(date);\n  var b = moment(); // Current Date\n\n  var differenceInDays = b.diff(a, 'days'); // 1\n\n  if (differenceInDays <= 7) priority = SitemapPriorities._0_5;else if (differenceInDays <= 14) priority = SitemapPriorities._0_4;else if (differenceInDays <= 30) priority = SitemapPriorities._0_3;else if (differenceInDays <= 90) priority = SitemapPriorities._0_2;\n  return priority;\n};\nexport var GetSitemapNewsPages = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var baseOnly,\n        siteMapPages,\n        blogsBatch,\n        latestNewsBatch,\n        vehicleReviewsBatch,\n        newsItems,\n        _args5 = arguments;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            baseOnly = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : true;\n            siteMapPages = SitemapDefaultNewsPages;\n\n            if (baseOnly) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.next = 5;\n            return NewsService.GetAllNewsArticlePreviews(NewsTypes.Blog, null, 1, 500000);\n\n          case 5:\n            blogsBatch = _context5.sent;\n            _context5.next = 8;\n            return NewsService.GetAllNewsArticlePreviews(NewsTypes.LatestNews, null, 1, 500000);\n\n          case 8:\n            latestNewsBatch = _context5.sent;\n            _context5.next = 11;\n            return NewsService.GetAllNewsArticlePreviews(NewsTypes.VehicleReviews, null, 1, 500000);\n\n          case 11:\n            vehicleReviewsBatch = _context5.sent;\n            newsItems = blogsBatch.data.dataItems.concat(latestNewsBatch.data.dataItems, vehicleReviewsBatch.data.dataItems);\n            newsItems.forEach(function (x) {\n              var sitemap = {\n                name: x.title,\n                url: GetCanonicalUrl(x.url),\n                priority: GetPriority(x.onDate != null ? x.onDate : moment()),\n                changeFrequency: SitemapItemChangeFrequencies.monthly,\n                modifiedOn: moment().format('YYYY-MM-DD')\n              };\n              siteMapPages.push(sitemap);\n            });\n\n          case 14:\n            return _context5.abrupt(\"return\", siteMapPages);\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function GetSitemapNewsPages() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var GetSitemapAdviceGuidesPages = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n    var baseOnly,\n        siteMapPages,\n        sitemap,\n        categories,\n        tags,\n        _args7 = arguments;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            baseOnly = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : false;\n            siteMapPages = [];\n            sitemap = {\n              name: \"Advice Guides\",\n              url: GetCanonicalUrl(\"/advice\"),\n              priority: SitemapPriorities._0_5,\n              changeFrequency: SitemapItemChangeFrequencies.always,\n              modifiedOn: moment().format('YYYY-MM-DD')\n            };\n            siteMapPages.push(sitemap);\n            _context7.next = 6;\n            return ContentAPI.GetContentCategories();\n\n          case 6:\n            categories = _context7.sent;\n            _context7.next = 9;\n            return ContentAPI.GetTags();\n\n          case 9:\n            tags = _context7.sent;\n            _context7.next = 12;\n            return Promise.all(categories.data.map( /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(category) {\n                var sitemap, contentItem;\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        sitemap = {\n                          name: \"Advice Guides - \" + category.name,\n                          url: GetCanonicalUrl(GetAdviceCategoryUrl(category.url)),\n                          priority: SitemapPriorities._0_5,\n                          changeFrequency: SitemapItemChangeFrequencies.always,\n                          modifiedOn: moment().format('YYYY-MM-DD')\n                        };\n                        siteMapPages.push(sitemap);\n\n                        if (baseOnly) {\n                          _context6.next = 7;\n                          break;\n                        }\n\n                        _context6.next = 5;\n                        return ContentAPI.GetContentItems(category.id);\n\n                      case 5:\n                        contentItem = _context6.sent;\n\n                        if (contentItem != null && contentItem.data != null) {\n                          contentItem.data.forEach(function (content) {\n                            var sitemap = {\n                              name: content.pageTitle,\n                              url: GetCanonicalUrl(GetAdviceArticleUrl(content.categoryUrl, content.url)),\n                              priority: GetPriority(content.publishDate),\n                              changeFrequency: SitemapItemChangeFrequencies.monthly,\n                              modifiedOn: moment().format('YYYY-MM-DD')\n                            };\n                            siteMapPages.push(sitemap);\n                          });\n                        }\n\n                      case 7:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x2) {\n                return _ref7.apply(this, arguments);\n              };\n            }()));\n\n          case 12:\n            tags.data.forEach(function (category) {\n              var sitemap = {\n                name: \"Advice Guides - \" + category.name,\n                url: GetCanonicalUrl(GetAdviceTagUrl(category.url)),\n                priority: SitemapPriorities._0_5,\n                changeFrequency: SitemapItemChangeFrequencies.always,\n                modifiedOn: moment().format('YYYY-MM-DD')\n              };\n              siteMapPages.push(sitemap);\n            });\n            return _context7.abrupt(\"return\", siteMapPages);\n\n          case 14:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function GetSitemapAdviceGuidesPages() {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var GetSitemapBodyTypePages = function GetSitemapBodyTypePages(vehicleType) {\n  var pages = [];\n  var bodyTypes = GetCategoriesForType(vehicleType);\n  bodyTypes.forEach(function (bodyType) {\n    var sitemap = {\n      name: bodyType.name,\n      url: GetCanonicalUrl(BodyTypeUrlVehicleType(vehicleType, bodyType.name)),\n      priority: SitemapPriorities._1_0,\n      changeFrequency: SitemapItemChangeFrequencies.always,\n      modifiedOn: moment().format('YYYY-MM-DD')\n    };\n    pages.push(sitemap);\n  });\n  return pages;\n};\nexport var GetVehicleTypes = function GetVehicleTypes() {\n  return [VehicleTypes.Car, VehicleTypes.Commercial];\n};\nexport var GetSitemapBudgetPages = function GetSitemapBudgetPages(vehicleType) {\n  var pages = [];\n  var under = GetSitemapBudgetUnderPages(vehicleType);\n  var over = GetSitemapBudgetOverPages(vehicleType);\n  pages = pages.concat(under).concat(over);\n  return pages;\n};\nexport var GetSitemapBudgetUnderPages = function GetSitemapBudgetUnderPages(vehicleType) {\n  var pages = [];\n  GetBudgetTo().forEach(function (value) {\n    var sitemap = {\n      name: \"Up to £\" + value,\n      url: GetCanonicalUrl(BudgetToUrlVehicleType(vehicleType, value)),\n      priority: SitemapPriorities._1_0,\n      changeFrequency: SitemapItemChangeFrequencies.always,\n      modifiedOn: moment().format('YYYY-MM-DD')\n    };\n    pages.push(sitemap);\n  });\n  return pages;\n};\nexport var GetSitemapBudgetOverPages = function GetSitemapBudgetOverPages(vehicleType) {\n  var pages = [];\n  GetBudgetOver().forEach(function (value) {\n    var sitemap = {\n      name: \"Above £\" + value,\n      url: GetCanonicalUrl(BudgetFromUrlVehicleType(vehicleType, value)),\n      priority: SitemapPriorities._1_0,\n      changeFrequency: SitemapItemChangeFrequencies.always,\n      modifiedOn: moment().format('YYYY-MM-DD')\n    };\n    pages.push(sitemap);\n  });\n  return pages;\n};\nexport var GetInStockPages = function GetInStockPages(vehicleType) {\n  var pages = [];\n  var sitemap = {\n    name: (vehicleType == VehicleTypes.Commercial ? \"Van\" : \"Car\") + \" Leasing In Stock\",\n    url: GetCanonicalUrl(InStockUrlVehicleType(vehicleType)),\n    priority: SitemapPriorities._1_0,\n    changeFrequency: SitemapItemChangeFrequencies.always,\n    modifiedOn: moment().format('YYYY-MM-DD')\n  };\n  pages.push(sitemap);\n  return pages;\n};\nexport var GetModelPages = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n    var manufacturerModels, pages, vehicleTypes;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return GetManufacturersModels();\n\n          case 2:\n            manufacturerModels = _context8.sent;\n            pages = [];\n            vehicleTypes = GetVehicleTypes();\n            vehicleTypes.forEach(function (vehicleType) {\n              var manufacturers = manufacturerModels.data.filter(function (item) {\n                return item.models.some(function (x) {\n                  return x.vehicleType == vehicleType;\n                });\n              });\n              manufacturers.forEach(function (item) {\n                var models = groupByArray(item.models.filter(function (item) {\n                  return item.vehicleType == vehicleType;\n                }), 'shortModText');\n                models.forEach(function (model) {\n                  var sitemap = {\n                    name: model.key,\n                    url: GetCanonicalUrl(GetShortModelUrl(false, null, vehicleType == VehicleTypes.Car ? LeasingDealTypes.Personal : LeasingDealTypes.Van, item.manufacturer.manufacturerUrl, model.key, null)),\n                    priority: SitemapPriorities._1_0,\n                    changeFrequency: SitemapItemChangeFrequencies.monthly,\n                    modifiedOn: moment().format('YYYY-MM-DD')\n                  };\n                  pages.push(sitemap);\n                });\n              });\n            });\n            return _context8.abrupt(\"return\", pages);\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function GetModelPages() {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var GetManufacterModelPages = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n    var manufacturerModels, pages, vehicleTypes;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return GetManufacturersModels();\n\n          case 2:\n            manufacturerModels = _context9.sent;\n            pages = [];\n            vehicleTypes = GetVehicleTypes();\n            vehicleTypes.forEach(function (vehicleType) {\n              var manufacturers = manufacturerModels.data.filter(function (item) {\n                return item.models.some(function (x) {\n                  return x.vehicleType == vehicleType;\n                });\n              });\n              manufacturers.forEach(function (element) {\n                var sitemap = {\n                  name: element.manufacturer.manufacturerUrl,\n                  url: GetCanonicalUrl(GetVehicleManufacturerUrl(false, null, vehicleType == VehicleTypes.Car ? LeasingDealTypes.Personal : LeasingDealTypes.Van, element.manufacturer.manufacturerUrl)),\n                  priority: SitemapPriorities._1_0,\n                  changeFrequency: SitemapItemChangeFrequencies.always,\n                  modifiedOn: moment().format('YYYY-MM-DD')\n                };\n                pages.push(sitemap);\n              });\n            });\n            return _context9.abrupt(\"return\", pages);\n\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function GetManufacterModelPages() {\n    return _ref9.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}