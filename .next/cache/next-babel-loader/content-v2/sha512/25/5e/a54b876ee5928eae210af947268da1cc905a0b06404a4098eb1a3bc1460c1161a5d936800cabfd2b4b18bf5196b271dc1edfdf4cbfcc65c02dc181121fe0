{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Modal from 'react-bootstrap/Modal';\nimport SearchButtons from './search-buttons';\nimport SearchMakes from './search-makes';\nimport SearchModels from './search-models';\nimport SearchBodies from './search-bodies';\nimport SearchBudgets from './search-budgets';\nimport SearchDetailed from './search-detailed';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport style from './search.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { connect } from 'react-redux';\nimport { GetSearchFiltersUrl } from '../../helpers/urlHelper';\nimport { LeasingDealTypes } from '../../enums/LeasingDealTypes';\nimport { SearchPanels } from '../../enums/SearchPanels';\nimport { SiteSettings } from '../../environment/siteSettings';\n\nfunction mapStateToProps(state) {\n  return {\n    dealToggle: state.dealSelector,\n    vehicleFilters: state.vehicleFilters,\n    carManufacturerList: state.carManufacturerList,\n    vanManufacturerList: state.vanManufacturerList,\n    userPostcode: state.userPostcode\n  };\n}\n\nconst Search = (_ref) => {\n  let {\n    onRequestClose,\n    title,\n    activePanel = 1,\n    dealToggle,\n    carManufacturerList,\n    vanManufacturerList,\n    vehicleFilters,\n    userPostcode\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"onRequestClose\", \"title\", \"activePanel\", \"dealToggle\", \"carManufacturerList\", \"vanManufacturerList\", \"vehicleFilters\", \"userPostcode\"]);\n\n  const dispatch = useDispatch();\n  const {\n    0: modalCtas,\n    1: setmodalCtas\n  } = useState(false);\n  const {\n    0: modalTitle,\n    1: setModalTitle\n  } = useState(title);\n  const {\n    0: currentPanel,\n    1: setCurrentPanel\n  } = useState(activePanel);\n  const {\n    0: currentMake,\n    1: setCurrentMake\n  } = useState('');\n  const {\n    0: vehicleCount,\n    1: setVehicleCount\n  } = useState(0);\n\n  const handleTitleChange = title => {\n    setModalTitle(title);\n  };\n\n  const handlePanelChange = (panel, title) => {\n    setCurrentPanel(panel);\n    handleTitleChange(title);\n\n    if (panel === SearchPanels.SearchDetailed) {\n      setmodalCtas(true);\n    } else {\n      setmodalCtas(false);\n    }\n  };\n\n  const handleMakeUpdate = make => setCurrentMake(make);\n\n  const handleBackButton = () => {\n    if (currentPanel === SearchPanels.SearchModels && currentMake) {\n      setCurrentMake('');\n    } else {\n      setCurrentPanel(SearchPanels.SearchButtons);\n      handlePanelChange(SearchPanels.SearchButtons, title);\n    }\n  };\n\n  const handleVehicleCountUpdate = count => setVehicleCount(count);\n\n  const handleClearButton = () => {\n    dispatch({\n      type: 'RESET_POSTCODE'\n    });\n    dispatch({\n      type: 'UPDATE_ALL_FILTERS',\n      payload: {\n        initialRentals: SiteSettings.DefaultInitialRentals,\n        mileage: SiteSettings.GetDealTypeDefaultMileage(dealToggle)\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (activePanel === SearchPanels.SearchDetailed) {\n      setmodalCtas(true);\n    } else {\n      setmodalCtas(false);\n    }\n  }, [activePanel]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(Modal, _objectSpread(_objectSpread({\n      onHide: onRequestClose,\n      centered: true,\n      className: `search-modal ${currentPanel === SearchPanels.SearchDetailed ? \"search-modal--detailed\" : \"\"}`\n    }, otherProps), {}, {\n      children: [/*#__PURE__*/_jsx(Modal.Header, {\n        className: \"d-flex flex-nowrap justify-content-center align-items-center\",\n        closeButton: true,\n        children: /*#__PURE__*/_jsxs(Modal.Title, {\n          className: \"text-center mb-0\",\n          children: [modalTitle, \" \", !userPostcode && currentPanel > 1 ? /*#__PURE__*/_jsx(FontAwesomeIcon, {\n            width: \"12\",\n            height: \"24\",\n            icon: faChevronLeft,\n            onClick: () => handleBackButton()\n          }) : null]\n        })\n      }), /*#__PURE__*/_jsx(Modal.Body, {\n        className: \"modal-body--search p-0\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: style['vehicle-search'],\n          children: [currentPanel === SearchPanels.SearchButtons && /*#__PURE__*/_jsx(SearchButtons, {\n            active: true,\n            handlePanelChange: handlePanelChange\n          }), currentPanel === SearchPanels.SearchMakes && /*#__PURE__*/_jsx(SearchMakes, {\n            active: true,\n            makes: dealToggle === LeasingDealTypes.Van ? vanManufacturerList : carManufacturerList\n          }), currentPanel === SearchPanels.SearchModels && /*#__PURE__*/_jsx(SearchModels, {\n            active: true,\n            makes: dealToggle === LeasingDealTypes.Van ? vanManufacturerList : carManufacturerList,\n            handleMakeUpdate: handleMakeUpdate,\n            currentMake: currentMake,\n            dealToggle: dealToggle\n          }), currentPanel === SearchPanels.SearchBodies && /*#__PURE__*/_jsx(SearchBodies, {\n            active: true\n          }), currentPanel === SearchPanels.SearchBudgets && /*#__PURE__*/_jsx(SearchBudgets, {\n            active: true\n          }), currentPanel === SearchPanels.SearchDetailed && /*#__PURE__*/_jsx(SearchDetailed, {\n            active: true,\n            handleVehicleCountUpdate: handleVehicleCountUpdate\n          })]\n        })\n      }), modalCtas && /*#__PURE__*/_jsx(Modal.Footer, {\n        className: \"modal-footer__ctas\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: style['search-ctas'],\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            className: \"btn btn-lg\",\n            onClick: () => handleClearButton(),\n            children: \"Clear search\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"btn btn-primary btn-lg\",\n            children: /*#__PURE__*/_jsx(Link, {\n              passHref: true,\n              href: GetSearchFiltersUrl(dealToggle, userPostcode, vehicleFilters),\n              children: /*#__PURE__*/_jsx(\"a\", {\n                className: \"text-decoration-none\",\n                children: vehicleCount === 0 ? \"No results\" : \"See \" + vehicleCount + \" deals\"\n              })\n            })\n          })]\n        })\n      })]\n    }))\n  });\n};\n\nexport default connect(mapStateToProps)(Search);","map":null,"metadata":{},"sourceType":"module"}