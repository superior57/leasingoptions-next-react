{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport MainLayout from '../components/layout/main-layout';\nimport MetaHead from '../components/seo/meta';\nimport { useRouter } from 'next/router';\nimport { useForm } from 'react-hook-form'; // import wrapper from 'redux/store.tsx/store';\n// import { AuthenticationService } from \"business-logic/authenticationService\";\n// export const getServerSideProps = wrapper.getServerSideProps(\n//     async (context) => {\n//         const internalCheck = await AuthenticationService.IsInternalPage()\n//         if(!internalCheck.data) {\n//             context.res.writeHead(403);\n//             context.res.end();\n//             return;\n//         }\n//     }\n// )\n\nvar AdhocPayment = function AdhocPayment() {\n  var router = useRouter();\n\n  var _useState = useState(\"\"),\n      orderId = _useState[0],\n      setOrderId = _useState[1];\n\n  var _useState2 = useState(\"gap\"),\n      paymentType = _useState2[0],\n      setpaymentType = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      amount = _useState3[0],\n      setamount = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      notes = _useState4[0],\n      setnotes = _useState4[1];\n\n  var methods = useForm();\n  var register = methods.register,\n      handleSubmit = methods.handleSubmit,\n      errors = methods.errors;\n\n  var getLinkClick = function getLinkClick() {\n    if (!errors.amount) {\n      router.push(\"/onlinepayment?orderid=\".concat(orderId, \"&type=\").concat(paymentType, \"&amount=\").concat(amount, \"&notes=\").concat(notes));\n    }\n  };\n\n  useEffect(function () {\n    var _window, _window$location;\n\n    var queryParams = new URLSearchParams((_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.search);\n    setOrderId(queryParams.get(\"orderid\"));\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(MetaHead, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Secure Online Payment - Product\"\n      })\n    }), /*#__PURE__*/_jsx(\"section\", {\n      className: \"container-fluid py-3 py-md-5\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-24 col-md-20 offset-md-2\",\n            children: [/*#__PURE__*/_jsx(\"h1\", {\n              children: \"Secure Online Payment - Product\"\n            }), /*#__PURE__*/_jsx(\"form\", {\n              onSubmit: handleSubmit(getLinkClick),\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-row mb-3\",\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-md-12 col-lg-5 mb-2 mb-md-0\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    className: \"w-100 d-block\",\n                    htmlFor: \"paymentType\",\n                    children: \"Payment Type:\"\n                  }), /*#__PURE__*/_jsxs(\"select\", {\n                    onChange: function onChange(event) {\n                      setpaymentType(event.currentTarget.value);\n                    },\n                    id: \"paymentType\",\n                    name: \"paymentType\",\n                    className: \"form-control \".concat(errors.paymentType ? \"is-invalid\" : \"\"),\n                    ref: register({\n                      required: true\n                    }),\n                    children: [/*#__PURE__*/_jsx(\"option\", {\n                      value: \"gap\",\n                      children: \"GAP\"\n                    }), /*#__PURE__*/_jsx(\"option\", {\n                      value: \"smart\",\n                      children: \"SMART\"\n                    }), /*#__PURE__*/_jsx(\"option\", {\n                      value: \"procfee\",\n                      children: \"PROC FEE\"\n                    }), /*#__PURE__*/_jsx(\"option\", {\n                      value: \"other\",\n                      children: \"OTHER\"\n                    })]\n                  })]\n                }), paymentType === 'other' && /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-md-12 col-lg-7 mb-2 mb-md-0\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    className: \"w-100 d-block\",\n                    htmlFor: \"notes\",\n                    children: \"Notes\"\n                  }), /*#__PURE__*/_jsx(\"textarea\", {\n                    onChange: function onChange(event) {\n                      return setnotes(event.currentTarget.value);\n                    },\n                    className: \"form-control form-control--input\",\n                    name: \"notes\",\n                    id: \"notes\",\n                    \"aria-label\": \"Notes\",\n                    \"aria-describedby\": \"notes\",\n                    placeholder: \"Please add notes if they're relevant.\",\n                    ref: register(),\n                    defaultValue: notes\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-md-12 col-lg-7 mb-3 mb-md-0\",\n                  children: [/*#__PURE__*/_jsxs(\"label\", {\n                    className: \"w-100 d-block\",\n                    htmlFor: \"amount\",\n                    children: [\"Amount\", /*#__PURE__*/_jsx(\"small\", {\n                      children: \" (Required)\"\n                    })]\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"text\",\n                    onChange: function onChange(event) {\n                      return setamount(event.currentTarget.value);\n                    },\n                    className: \"form-control \".concat(errors.amount ? \"is-invalid\" : \"\"),\n                    id: \"amount\",\n                    name: \"amount\",\n                    maxLength: 100,\n                    ref: register({\n                      required: true\n                    }),\n                    defaultValue: amount\n                  }), errors.amount && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"invalid-feedback d-block\",\n                    children: \"This field is required\"\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col-24 col-md-12 col-lg-5\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    className: \"w-100 d-none d-lg-block\",\n                    children: \"\\xA0\"\n                  }), /*#__PURE__*/_jsx(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary btn-lg\",\n                    children: \"Get Link\"\n                  })]\n                })]\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n};\n\nAdhocPayment.layout = MainLayout;\nexport default AdhocPayment;","map":null,"metadata":{},"sourceType":"module"}